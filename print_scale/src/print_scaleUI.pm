#!/usr/bin/perl -w
#
# This is the (re)generated UI construction class.
#
# DO NOT EDIT THIS FILE, ANY CHANGES THAT YOU MAKE WILL BE LOST WHEN
# THIS FILE WILL BE OVERWRITTEN BY THE NEXT RUN OF Glade::PerlGenerate
#
#==============================================================================
#=== This is the 'plu' class                              
#==============================================================================
package plu;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'plu' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_browse_clicked' => undef,
    'on_default_clicked' => undef,
    'on_entry11_activate' => undef,
    'on_plu_delete_event' => undef,
    'on_plu_read_clicked' => undef,
    'on_plu_write_clicked' => undef,
    'on_pluwritetofile_clicked' => undef,
    'on_pluwritetoscale_clicked' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"plu-$instance"}) {$instance++;}


    #
    # Construct a GtkWindow 'plu'
    $widgets->{'plu'} = new Gtk::Window;
    $widgets->{'plu'}->set_title(_('物料管理') );
    $widgets->{'plu'}->position('none' );
    $widgets->{'plu'}->set_policy(0, 1, 0 );
    $widgets->{'plu'}->set_modal(0 );
    $widgets->{'plu'}->realize;
    $forms->{'plu'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'plu'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'plu'}{'accelgroup'}->attach($widgets->{'plu'} );
    $forms->{'plu'}{'plu'} = $widgets->{'plu'};
	#
	# Construct a GtkVBox 'vbox3'
	$widgets->{'vbox3'} = new Gtk::VBox(0, 0 );
	$forms->{'plu'}{'plu'}->add($widgets->{'vbox3'} );
	$widgets->{'vbox3'}->show;
	$forms->{'plu'}{'vbox3'} = $widgets->{'vbox3'};
	    #
	    # Construct a GtkHBox 'hbox6'
	    $widgets->{'hbox6'} = new Gtk::HBox(0, 0 );
	    $forms->{'plu'}{'vbox3'}->add($widgets->{'hbox6'} );
	    $widgets->{'hbox6'}->show;
	    $forms->{'plu'}{'hbox6'} = $widgets->{'hbox6'};
		#
		# Construct a GtkButton 'plu_read'
		$widgets->{'plu_read'} = new Gtk::Button(_('讀取'));
		$forms->{'plu'}{'hbox6'}->add($widgets->{'plu_read'} );
		$widgets->{'plu_read'}->show;
		$forms->{'plu'}{'plu_read'} = $widgets->{'plu_read'};
		$forms->{'plu'}{'plu_read'}->can_focus(1 );
		$forms->{'plu'}{'hbox6'}->set_child_packing($forms->{'plu'}{'plu_read'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'plu_write'
		$widgets->{'plu_write'} = new Gtk::Button(_('寫入'));
		$forms->{'plu'}{'hbox6'}->add($widgets->{'plu_write'} );
		$widgets->{'plu_write'}->show;
		$forms->{'plu'}{'plu_write'} = $widgets->{'plu_write'};
		$forms->{'plu'}{'plu_write'}->can_focus(1 );
		$forms->{'plu'}{'hbox6'}->set_child_packing($forms->{'plu'}{'plu_write'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton71'
		$work->{'spinbutton71-adj'} = new Gtk::Adjustment(1, 1, 100, 1, 10, 10 );
		$widgets->{'spinbutton71'} = new Gtk::SpinButton($work->{'spinbutton71-adj'}, 1, 0 );
		$widgets->{'spinbutton71'}->set_update_policy('always' );
		$widgets->{'spinbutton71'}->set_numeric(1);
		$widgets->{'spinbutton71'}->set_wrap(0);
		$widgets->{'spinbutton71'}->set_snap_to_ticks(0 );
		$forms->{'plu'}{'hbox6'}->add($widgets->{'spinbutton71'} );
		$widgets->{'spinbutton71'}->show;
		$forms->{'plu'}{'spinbutton71'} = $widgets->{'spinbutton71'};
		$forms->{'plu'}{'spinbutton71'}->can_focus(1 );
		$forms->{'plu'}{'tooltips'}->set_tip($forms->{'plu'}{'spinbutton71'}, _('頁數' ));
		$forms->{'plu'}{'hbox6'}->set_child_packing($forms->{'plu'}{'spinbutton71'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton3'
		$work->{'spinbutton3-adj'} = new Gtk::Adjustment(1, 1, 70, 1, 10, 10 );
		$widgets->{'spinbutton3'} = new Gtk::SpinButton($work->{'spinbutton3-adj'}, 1, 0 );
		$widgets->{'spinbutton3'}->set_update_policy('always' );
		$widgets->{'spinbutton3'}->set_numeric(1);
		$widgets->{'spinbutton3'}->set_wrap(0);
		$widgets->{'spinbutton3'}->set_snap_to_ticks(0 );
		$forms->{'plu'}{'hbox6'}->add($widgets->{'spinbutton3'} );
		$widgets->{'spinbutton3'}->show;
		$forms->{'plu'}{'spinbutton3'} = $widgets->{'spinbutton3'};
		$forms->{'plu'}{'spinbutton3'}->can_focus(1 );
		$forms->{'plu'}{'tooltips'}->set_tip($forms->{'plu'}{'spinbutton3'}, _('組數' ));
		$forms->{'plu'}{'hbox6'}->set_child_packing($forms->{'plu'}{'spinbutton3'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkButton 'default'
		$widgets->{'default'} = new Gtk::Button(_('預設參考值'));
		$forms->{'plu'}{'hbox6'}->add($widgets->{'default'} );
		$widgets->{'default'}->show;
		$forms->{'plu'}{'default'} = $widgets->{'default'};
		$forms->{'plu'}{'default'}->can_focus(1 );
		$forms->{'plu'}{'hbox6'}->set_child_packing($forms->{'plu'}{'default'}, 0, 0, 0, 'start' );
	    $forms->{'plu'}{'vbox3'}->set_child_packing($forms->{'plu'}{'hbox6'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox94'
	    $widgets->{'hbox94'} = new Gtk::HBox(0, 0 );
	    $forms->{'plu'}{'vbox3'}->add($widgets->{'hbox94'} );
	    $widgets->{'hbox94'}->show;
	    $forms->{'plu'}{'hbox94'} = $widgets->{'hbox94'};
		#
		# Construct a GtkButton 'pluwritetofile'
		$widgets->{'pluwritetofile'} = new Gtk::Button(_('寫入檔案'));
		$forms->{'plu'}{'hbox94'}->add($widgets->{'pluwritetofile'} );
		$widgets->{'pluwritetofile'}->show;
		$forms->{'plu'}{'pluwritetofile'} = $widgets->{'pluwritetofile'};
		$forms->{'plu'}{'pluwritetofile'}->set_sensitive(0);
		$forms->{'plu'}{'pluwritetofile'}->can_focus(1 );
		$forms->{'plu'}{'hbox94'}->set_child_packing($forms->{'plu'}{'pluwritetofile'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'pluwritetoscale'
		$widgets->{'pluwritetoscale'} = new Gtk::Button(_('寫入磅秤'));
		$forms->{'plu'}{'hbox94'}->add($widgets->{'pluwritetoscale'} );
		$widgets->{'pluwritetoscale'}->show;
		$forms->{'plu'}{'pluwritetoscale'} = $widgets->{'pluwritetoscale'};
		$forms->{'plu'}{'pluwritetoscale'}->can_focus(1 );
		$forms->{'plu'}{'hbox94'}->set_child_packing($forms->{'plu'}{'pluwritetoscale'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkCombo 'combo10'
		$widgets->{'combo10'} = new Gtk::Combo;
		$widgets->{'combo10'}->set_case_sensitive(0 );
		$widgets->{'combo10'}->set_use_arrows(1 );
		$widgets->{'combo10'}->set_use_arrows_always(0 );
		$widgets->{'combo10'}->set_popdown_strings( '' );
		$forms->{'plu'}{'hbox94'}->add($widgets->{'combo10'} );
		$widgets->{'combo10'}->show;
		$forms->{'plu'}{'combo10'} = $widgets->{'combo10'};
		    #
		    # Construct a GtkEntry 'combo-entry11'
		    $widgets->{'combo-entry11'} = $forms->{'plu'}{'combo10'}->entry;
		    $widgets->{'combo-entry11'}->show;
		    $forms->{'plu'}{'combo-entry11'} = $widgets->{'combo-entry11'};
		    $forms->{'plu'}{'combo-entry11'}->can_focus(1 );
		    $forms->{'plu'}{'combo-entry11'}->set_text(_('') );
		    $forms->{'plu'}{'combo-entry11'}->set_max_length(0 );
		    $forms->{'plu'}{'combo-entry11'}->set_visibility(1 );
		    $forms->{'plu'}{'combo-entry11'}->set_editable(1 );
		$forms->{'plu'}{'hbox94'}->set_child_packing($forms->{'plu'}{'combo10'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkButton 'browse'
		$widgets->{'browse'} = new Gtk::Button(_('瀏覽'));
		$forms->{'plu'}{'hbox94'}->add($widgets->{'browse'} );
		$widgets->{'browse'}->show;
		$forms->{'plu'}{'browse'} = $widgets->{'browse'};
		$forms->{'plu'}{'browse'}->can_focus(1 );
		$forms->{'plu'}{'hbox94'}->set_child_packing($forms->{'plu'}{'browse'}, 0, 0, 0, 'start' );
	    $forms->{'plu'}{'vbox3'}->set_child_packing($forms->{'plu'}{'hbox94'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox80'
	    $widgets->{'hbox80'} = new Gtk::HBox(0, 0 );
	    $forms->{'plu'}{'vbox3'}->add($widgets->{'hbox80'} );
	    $widgets->{'hbox80'}->show;
	    $forms->{'plu'}{'hbox80'} = $widgets->{'hbox80'};
		#
		# Construct a GtkFrame 'frame9'
		$widgets->{'frame9'} = new Gtk::Frame(_('設定單價'));
		$widgets->{'frame9'}->set_label_align(0, 0 );
		$widgets->{'frame9'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox80'}->add($widgets->{'frame9'} );
		$widgets->{'frame9'}->show;
		$forms->{'plu'}{'frame9'} = $widgets->{'frame9'};
		    #
		    # Construct a GtkSpinButton 'spinbutton58'
		    $work->{'spinbutton58-adj'} = new Gtk::Adjustment(0, 0, 99999, 1, 10, 10 );
		    $widgets->{'spinbutton58'} = new Gtk::SpinButton($work->{'spinbutton58-adj'}, 1, 0 );
		    $widgets->{'spinbutton58'}->set_update_policy('always' );
		    $widgets->{'spinbutton58'}->set_numeric(1);
		    $widgets->{'spinbutton58'}->set_wrap(0);
		    $widgets->{'spinbutton58'}->set_snap_to_ticks(0 );
		    $forms->{'plu'}{'frame9'}->add($widgets->{'spinbutton58'} );
		    $widgets->{'spinbutton58'}->show;
		    $forms->{'plu'}{'spinbutton58'} = $widgets->{'spinbutton58'};
		    $forms->{'plu'}{'spinbutton58'}->can_focus(1 );
		$forms->{'plu'}{'hbox80'}->set_child_packing($forms->{'plu'}{'frame9'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkFrame 'frame10'
		$widgets->{'frame10'} = new Gtk::Frame(_('設定扣重'));
		$widgets->{'frame10'}->set_label_align(0, 0 );
		$widgets->{'frame10'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox80'}->add($widgets->{'frame10'} );
		$widgets->{'frame10'}->show;
		$forms->{'plu'}{'frame10'} = $widgets->{'frame10'};
		    #
		    # Construct a GtkSpinButton 'spinbutton59'
		    $work->{'spinbutton59-adj'} = new Gtk::Adjustment(1, 0, 9999, 1, 10, 10 );
		    $widgets->{'spinbutton59'} = new Gtk::SpinButton($work->{'spinbutton59-adj'}, 1, 0 );
		    $widgets->{'spinbutton59'}->set_update_policy('always' );
		    $widgets->{'spinbutton59'}->set_numeric(1);
		    $widgets->{'spinbutton59'}->set_wrap(0);
		    $widgets->{'spinbutton59'}->set_snap_to_ticks(0 );
		    $forms->{'plu'}{'frame10'}->add($widgets->{'spinbutton59'} );
		    $widgets->{'spinbutton59'}->show;
		    $forms->{'plu'}{'spinbutton59'} = $widgets->{'spinbutton59'};
		    $forms->{'plu'}{'spinbutton59'}->can_focus(1 );
		$forms->{'plu'}{'hbox80'}->set_child_packing($forms->{'plu'}{'frame10'}, 1, 1, 0, 'start' );
	    $forms->{'plu'}{'vbox3'}->set_child_packing($forms->{'plu'}{'hbox80'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox82'
	    $widgets->{'hbox82'} = new Gtk::HBox(0, 0 );
	    $forms->{'plu'}{'vbox3'}->add($widgets->{'hbox82'} );
	    $widgets->{'hbox82'}->show;
	    $forms->{'plu'}{'hbox82'} = $widgets->{'hbox82'};
		#
		# Construct a GtkFrame 'frame11'
		$widgets->{'frame11'} = new Gtk::Frame(_('設定品名'));
		$widgets->{'frame11'}->set_label_align(0, 0 );
		$widgets->{'frame11'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox82'}->add($widgets->{'frame11'} );
		$widgets->{'frame11'}->show;
		$forms->{'plu'}{'frame11'} = $widgets->{'frame11'};
		    #
		    # Construct a GtkEntry 'entry11'
		    $widgets->{'entry11'} = new Gtk::Entry;
		    $forms->{'plu'}{'frame11'}->add($widgets->{'entry11'} );
		    $widgets->{'entry11'}->show;
		    $forms->{'plu'}{'entry11'} = $widgets->{'entry11'};
		    $forms->{'plu'}{'entry11'}->can_focus(1 );
		    $forms->{'plu'}{'entry11'}->set_text(_('') );
		    $forms->{'plu'}{'entry11'}->set_max_length(0 );
		    $forms->{'plu'}{'entry11'}->set_visibility(1 );
		    $forms->{'plu'}{'entry11'}->set_editable(1 );
		$forms->{'plu'}{'hbox82'}->set_child_packing($forms->{'plu'}{'frame11'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkFrame 'frame12'
		$widgets->{'frame12'} = new Gtk::Frame(_('設定商品號編號'));
		$widgets->{'frame12'}->set_label_align(0, 0 );
		$widgets->{'frame12'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox82'}->add($widgets->{'frame12'} );
		$widgets->{'frame12'}->show;
		$forms->{'plu'}{'frame12'} = $widgets->{'frame12'};
		    #
		    # Construct a GtkEntry 'entry12'
		    $widgets->{'entry12'} = new Gtk::Entry;
		    $forms->{'plu'}{'frame12'}->add($widgets->{'entry12'} );
		    $widgets->{'entry12'}->show;
		    $forms->{'plu'}{'entry12'} = $widgets->{'entry12'};
		    $forms->{'plu'}{'entry12'}->can_focus(1 );
		    $forms->{'plu'}{'entry12'}->set_text(_('') );
		    $forms->{'plu'}{'entry12'}->set_max_length(0 );
		    $forms->{'plu'}{'entry12'}->set_visibility(1 );
		    $forms->{'plu'}{'entry12'}->set_editable(1 );
		$forms->{'plu'}{'hbox82'}->set_child_packing($forms->{'plu'}{'frame12'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkFrame 'frame13'
		$widgets->{'frame13'} = new Gtk::Frame(_('設定部門別'));
		$widgets->{'frame13'}->set_label_align(0, 0 );
		$widgets->{'frame13'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox82'}->add($widgets->{'frame13'} );
		$widgets->{'frame13'}->show;
		$forms->{'plu'}{'frame13'} = $widgets->{'frame13'};
		    #
		    # Construct a GtkSpinButton 'spinbutton61'
		    $work->{'spinbutton61-adj'} = new Gtk::Adjustment(0, 0, 99, 1, 10, 10 );
		    $widgets->{'spinbutton61'} = new Gtk::SpinButton($work->{'spinbutton61-adj'}, 1, 0 );
		    $widgets->{'spinbutton61'}->set_update_policy('always' );
		    $widgets->{'spinbutton61'}->set_numeric(1);
		    $widgets->{'spinbutton61'}->set_wrap(0);
		    $widgets->{'spinbutton61'}->set_snap_to_ticks(0 );
		    $forms->{'plu'}{'frame13'}->add($widgets->{'spinbutton61'} );
		    $widgets->{'spinbutton61'}->show;
		    $forms->{'plu'}{'spinbutton61'} = $widgets->{'spinbutton61'};
		    $forms->{'plu'}{'spinbutton61'}->can_focus(1 );
		$forms->{'plu'}{'hbox82'}->set_child_packing($forms->{'plu'}{'frame13'}, 1, 1, 0, 'start' );
	    $forms->{'plu'}{'vbox3'}->set_child_packing($forms->{'plu'}{'hbox82'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox81'
	    $widgets->{'hbox81'} = new Gtk::HBox(0, 0 );
	    $forms->{'plu'}{'vbox3'}->add($widgets->{'hbox81'} );
	    $widgets->{'hbox81'}->show;
	    $forms->{'plu'}{'hbox81'} = $widgets->{'hbox81'};
		#
		# Construct a GtkFrame 'frame14'
		$widgets->{'frame14'} = new Gtk::Frame(_('設定製造日期'));
		$widgets->{'frame14'}->set_label_align(0, 0 );
		$widgets->{'frame14'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox81'}->add($widgets->{'frame14'} );
		$widgets->{'frame14'}->show;
		$forms->{'plu'}{'frame14'} = $widgets->{'frame14'};
		    #
		    # Construct a GtkHBox 'hbox83'
		    $widgets->{'hbox83'} = new Gtk::HBox(0, 0 );
		    $forms->{'plu'}{'frame14'}->add($widgets->{'hbox83'} );
		    $widgets->{'hbox83'}->show;
		    $forms->{'plu'}{'hbox83'} = $widgets->{'hbox83'};
			#
			# Construct a GtkLabel 'label31'
			$widgets->{'label31'} = new Gtk::Label(_('星期幾'));
			$widgets->{'label31'}->set_justify('center' );
			$widgets->{'label31'}->set_line_wrap(0 );
			$forms->{'plu'}{'hbox83'}->add($widgets->{'label31'} );
			$widgets->{'label31'}->show;
			$forms->{'plu'}{'label31'} = $widgets->{'label31'};
			$forms->{'plu'}{'label31'}->set_alignment(0.5, 0.5 );
			$forms->{'plu'}{'hbox83'}->set_child_packing($forms->{'plu'}{'label31'}, 0, 0, 0, 'start' );
			#
			# Construct a GtkSpinButton 'spinbutton5'
			$work->{'spinbutton5-adj'} = new Gtk::Adjustment(1, 1, 12, 1, 10, 10 );
			$widgets->{'spinbutton5'} = new Gtk::SpinButton($work->{'spinbutton5-adj'}, 1, 0 );
			$widgets->{'spinbutton5'}->set_update_policy('always' );
			$widgets->{'spinbutton5'}->set_numeric(1);
			$widgets->{'spinbutton5'}->set_wrap(0);
			$widgets->{'spinbutton5'}->set_snap_to_ticks(0 );
			$forms->{'plu'}{'hbox83'}->add($widgets->{'spinbutton5'} );
			$widgets->{'spinbutton5'}->show;
			$forms->{'plu'}{'spinbutton5'} = $widgets->{'spinbutton5'};
			$forms->{'plu'}{'spinbutton5'}->can_focus(1 );
			$forms->{'plu'}{'hbox83'}->set_child_packing($forms->{'plu'}{'spinbutton5'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkSpinButton 'spinbutton6'
			$work->{'spinbutton6-adj'} = new Gtk::Adjustment(1, 1, 31, 1, 10, 10 );
			$widgets->{'spinbutton6'} = new Gtk::SpinButton($work->{'spinbutton6-adj'}, 1, 0 );
			$widgets->{'spinbutton6'}->set_update_policy('always' );
			$widgets->{'spinbutton6'}->set_numeric(1);
			$widgets->{'spinbutton6'}->set_wrap(0);
			$widgets->{'spinbutton6'}->set_snap_to_ticks(0 );
			$forms->{'plu'}{'hbox83'}->add($widgets->{'spinbutton6'} );
			$widgets->{'spinbutton6'}->show;
			$forms->{'plu'}{'spinbutton6'} = $widgets->{'spinbutton6'};
			$forms->{'plu'}{'spinbutton6'}->can_focus(1 );
			$forms->{'plu'}{'hbox83'}->set_child_packing($forms->{'plu'}{'spinbutton6'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkSpinButton 'spinbutton10'
			$work->{'spinbutton10-adj'} = new Gtk::Adjustment(2002, 2002, 2037, 1, 10, 10 );
			$widgets->{'spinbutton10'} = new Gtk::SpinButton($work->{'spinbutton10-adj'}, 1, 0 );
			$widgets->{'spinbutton10'}->set_update_policy('always' );
			$widgets->{'spinbutton10'}->set_numeric(1);
			$widgets->{'spinbutton10'}->set_wrap(0);
			$widgets->{'spinbutton10'}->set_snap_to_ticks(0 );
			$forms->{'plu'}{'hbox83'}->add($widgets->{'spinbutton10'} );
			$widgets->{'spinbutton10'}->show;
			$forms->{'plu'}{'spinbutton10'} = $widgets->{'spinbutton10'};
			$forms->{'plu'}{'spinbutton10'}->can_focus(1 );
			$forms->{'plu'}{'hbox83'}->set_child_packing($forms->{'plu'}{'spinbutton10'}, 1, 1, 0, 'start' );
		$forms->{'plu'}{'hbox81'}->set_child_packing($forms->{'plu'}{'frame14'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkFrame 'frame15'
		$widgets->{'frame15'} = new Gtk::Frame(_('設定有效日期'));
		$widgets->{'frame15'}->set_label_align(0, 0 );
		$widgets->{'frame15'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox81'}->add($widgets->{'frame15'} );
		$widgets->{'frame15'}->show;
		$forms->{'plu'}{'frame15'} = $widgets->{'frame15'};
		    #
		    # Construct a GtkHBox 'hbox84'
		    $widgets->{'hbox84'} = new Gtk::HBox(0, 0 );
		    $forms->{'plu'}{'frame15'}->add($widgets->{'hbox84'} );
		    $widgets->{'hbox84'}->show;
		    $forms->{'plu'}{'hbox84'} = $widgets->{'hbox84'};
			#
			# Construct a GtkLabel 'label32'
			$widgets->{'label32'} = new Gtk::Label(_('星期幾'));
			$widgets->{'label32'}->set_justify('center' );
			$widgets->{'label32'}->set_line_wrap(0 );
			$forms->{'plu'}{'hbox84'}->add($widgets->{'label32'} );
			$widgets->{'label32'}->show;
			$forms->{'plu'}{'label32'} = $widgets->{'label32'};
			$forms->{'plu'}{'label32'}->set_alignment(0.5, 0.5 );
			$forms->{'plu'}{'hbox84'}->set_child_packing($forms->{'plu'}{'label32'}, 0, 0, 0, 'start' );
			#
			# Construct a GtkSpinButton 'spinbutton8'
			$work->{'spinbutton8-adj'} = new Gtk::Adjustment(12, 1, 12, 1, 10, 10 );
			$widgets->{'spinbutton8'} = new Gtk::SpinButton($work->{'spinbutton8-adj'}, 1, 0 );
			$widgets->{'spinbutton8'}->set_update_policy('always' );
			$widgets->{'spinbutton8'}->set_numeric(1);
			$widgets->{'spinbutton8'}->set_wrap(0);
			$widgets->{'spinbutton8'}->set_snap_to_ticks(0 );
			$forms->{'plu'}{'hbox84'}->add($widgets->{'spinbutton8'} );
			$widgets->{'spinbutton8'}->show;
			$forms->{'plu'}{'spinbutton8'} = $widgets->{'spinbutton8'};
			$forms->{'plu'}{'spinbutton8'}->can_focus(1 );
			$forms->{'plu'}{'hbox84'}->set_child_packing($forms->{'plu'}{'spinbutton8'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkSpinButton 'spinbutton9'
			$work->{'spinbutton9-adj'} = new Gtk::Adjustment(31, 1, 31, 1, 10, 10 );
			$widgets->{'spinbutton9'} = new Gtk::SpinButton($work->{'spinbutton9-adj'}, 1, 0 );
			$widgets->{'spinbutton9'}->set_update_policy('always' );
			$widgets->{'spinbutton9'}->set_numeric(1);
			$widgets->{'spinbutton9'}->set_wrap(0);
			$widgets->{'spinbutton9'}->set_snap_to_ticks(0 );
			$forms->{'plu'}{'hbox84'}->add($widgets->{'spinbutton9'} );
			$widgets->{'spinbutton9'}->show;
			$forms->{'plu'}{'spinbutton9'} = $widgets->{'spinbutton9'};
			$forms->{'plu'}{'spinbutton9'}->can_focus(1 );
			$forms->{'plu'}{'hbox84'}->set_child_packing($forms->{'plu'}{'spinbutton9'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkSpinButton 'spinbutton7'
			$work->{'spinbutton7-adj'} = new Gtk::Adjustment(2037, 2002, 2037, 1, 10, 10 );
			$widgets->{'spinbutton7'} = new Gtk::SpinButton($work->{'spinbutton7-adj'}, 1, 0 );
			$widgets->{'spinbutton7'}->set_update_policy('always' );
			$widgets->{'spinbutton7'}->set_numeric(1);
			$widgets->{'spinbutton7'}->set_wrap(0);
			$widgets->{'spinbutton7'}->set_snap_to_ticks(0 );
			$forms->{'plu'}{'hbox84'}->add($widgets->{'spinbutton7'} );
			$widgets->{'spinbutton7'}->show;
			$forms->{'plu'}{'spinbutton7'} = $widgets->{'spinbutton7'};
			$forms->{'plu'}{'spinbutton7'}->can_focus(1 );
			$forms->{'plu'}{'hbox84'}->set_child_packing($forms->{'plu'}{'spinbutton7'}, 1, 1, 0, 'start' );
		$forms->{'plu'}{'hbox81'}->set_child_packing($forms->{'plu'}{'frame15'}, 1, 1, 0, 'start' );
	    $forms->{'plu'}{'vbox3'}->set_child_packing($forms->{'plu'}{'hbox81'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkFrame 'frame8'
	    $widgets->{'frame8'} = new Gtk::Frame(_('設定折扣型態'));
	    $widgets->{'frame8'}->set_label_align(0, 0 );
	    $widgets->{'frame8'}->set_shadow_type('etched_in' );
	    $forms->{'plu'}{'vbox3'}->add($widgets->{'frame8'} );
	    $widgets->{'frame8'}->show;
	    $forms->{'plu'}{'frame8'} = $widgets->{'frame8'};
		#
		# Construct a GtkVBox 'vbox16'
		$widgets->{'vbox16'} = new Gtk::VBox(0, 0 );
		$forms->{'plu'}{'frame8'}->add($widgets->{'vbox16'} );
		$widgets->{'vbox16'}->show;
		$forms->{'plu'}{'vbox16'} = $widgets->{'vbox16'};
		    #
		    # Construct a GtkHBox 'hbox79'
		    $widgets->{'hbox79'} = new Gtk::HBox(0, 0 );
		    $forms->{'plu'}{'vbox16'}->add($widgets->{'hbox79'} );
		    $widgets->{'hbox79'}->show;
		    $forms->{'plu'}{'hbox79'} = $widgets->{'hbox79'};
			#
			# Construct a GtkSpinButton 'spinbutton57'
			$work->{'spinbutton57-adj'} = new Gtk::Adjustment(0, 0, 1e+07, 1, 10, 10 );
			$widgets->{'spinbutton57'} = new Gtk::SpinButton($work->{'spinbutton57-adj'}, 1, 0 );
			$widgets->{'spinbutton57'}->set_update_policy('always' );
			$widgets->{'spinbutton57'}->set_numeric(1);
			$widgets->{'spinbutton57'}->set_wrap(0);
			$widgets->{'spinbutton57'}->set_snap_to_ticks(0 );
			$forms->{'plu'}{'hbox79'}->add($widgets->{'spinbutton57'} );
			$widgets->{'spinbutton57'}->show;
			$forms->{'plu'}{'spinbutton57'} = $widgets->{'spinbutton57'};
			$forms->{'plu'}{'spinbutton57'}->can_focus(1 );
			$forms->{'plu'}{'hbox79'}->set_child_packing($forms->{'plu'}{'spinbutton57'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkRadioButton 'percent'
			$widgets->{'percent'} = new Gtk::RadioButton(_('百分比') );
			$forms->{'plu'}{'rb-group-1'} = $widgets->{'percent'};
			$forms->{'plu'}{'hbox79'}->add($widgets->{'percent'} );
			$widgets->{'percent'}->show;
			$forms->{'plu'}{'percent'} = $widgets->{'percent'};
			$forms->{'plu'}{'percent'}->can_focus(1 );
			$forms->{'plu'}{'percent'}->set_mode(1 );
			$forms->{'plu'}{'percent'}->set_state(0 );
			$forms->{'plu'}{'hbox79'}->set_child_packing($forms->{'plu'}{'percent'}, 0, 0, 0, 'start' );
			#
			# Construct a GtkRadioButton 'radiobutton18'
			$widgets->{'radiobutton18'} = new Gtk::RadioButton(_('直接扣除'), $forms->{'plu'}{'rb-group-1'} );
			$forms->{'plu'}{'hbox79'}->add($widgets->{'radiobutton18'} );
			$widgets->{'radiobutton18'}->show;
			$forms->{'plu'}{'radiobutton18'} = $widgets->{'radiobutton18'};
			$forms->{'plu'}{'radiobutton18'}->can_focus(1 );
			$forms->{'plu'}{'radiobutton18'}->set_mode(1 );
			$forms->{'plu'}{'radiobutton18'}->set_state(0 );
			$forms->{'plu'}{'hbox79'}->set_child_packing($forms->{'plu'}{'radiobutton18'}, 0, 0, 0, 'start' );
			#
			# Construct a GtkCheckButton 'checkbutton3'
			$widgets->{'checkbutton3'} = new Gtk::CheckButton(_('計算主折扣'));
			$widgets->{'checkbutton3'}->set_mode(1 );
			$widgets->{'checkbutton3'}->set_state(0 );
			$forms->{'plu'}{'hbox79'}->add($widgets->{'checkbutton3'} );
			$widgets->{'checkbutton3'}->show;
			$forms->{'plu'}{'checkbutton3'} = $widgets->{'checkbutton3'};
			$forms->{'plu'}{'checkbutton3'}->can_focus(1 );
			$forms->{'plu'}{'hbox79'}->set_child_packing($forms->{'plu'}{'checkbutton3'}, 0, 0, 0, 'start' );
		    $forms->{'plu'}{'vbox16'}->set_child_packing($forms->{'plu'}{'hbox79'}, 1, 1, 0, 'start' );
		    #
		    # Construct a GtkFrame 'frame16'
		    $widgets->{'frame16'} = new Gtk::Frame(_('設定折扣開始時間'));
		    $widgets->{'frame16'}->set_label_align(0, 0 );
		    $widgets->{'frame16'}->set_shadow_type('etched_in' );
		    $forms->{'plu'}{'vbox16'}->add($widgets->{'frame16'} );
		    $widgets->{'frame16'}->show;
		    $forms->{'plu'}{'frame16'} = $widgets->{'frame16'};
			#
			# Construct a GtkHBox 'hbox85'
			$widgets->{'hbox85'} = new Gtk::HBox(0, 0 );
			$forms->{'plu'}{'frame16'}->add($widgets->{'hbox85'} );
			$widgets->{'hbox85'}->show;
			$forms->{'plu'}{'hbox85'} = $widgets->{'hbox85'};
			    #
			    # Construct a GtkLabel 'label29'
			    $widgets->{'label29'} = new Gtk::Label(_('星期幾'));
			    $widgets->{'label29'}->set_justify('center' );
			    $widgets->{'label29'}->set_line_wrap(0 );
			    $forms->{'plu'}{'hbox85'}->add($widgets->{'label29'} );
			    $widgets->{'label29'}->show;
			    $forms->{'plu'}{'label29'} = $widgets->{'label29'};
			    $forms->{'plu'}{'label29'}->set_alignment(0.5, 0.5 );
			    $forms->{'plu'}{'hbox85'}->set_child_packing($forms->{'plu'}{'label29'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton12'
			    $work->{'spinbutton12-adj'} = new Gtk::Adjustment(1, 1, 12, 1, 10, 10 );
			    $widgets->{'spinbutton12'} = new Gtk::SpinButton($work->{'spinbutton12-adj'}, 1, 0 );
			    $widgets->{'spinbutton12'}->set_update_policy('always' );
			    $widgets->{'spinbutton12'}->set_numeric(1);
			    $widgets->{'spinbutton12'}->set_wrap(0);
			    $widgets->{'spinbutton12'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox85'}->add($widgets->{'spinbutton12'} );
			    $widgets->{'spinbutton12'}->show;
			    $forms->{'plu'}{'spinbutton12'} = $widgets->{'spinbutton12'};
			    $forms->{'plu'}{'spinbutton12'}->can_focus(1 );
			    $forms->{'plu'}{'hbox85'}->set_child_packing($forms->{'plu'}{'spinbutton12'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton13'
			    $work->{'spinbutton13-adj'} = new Gtk::Adjustment(1, 1, 31, 1, 10, 10 );
			    $widgets->{'spinbutton13'} = new Gtk::SpinButton($work->{'spinbutton13-adj'}, 1, 0 );
			    $widgets->{'spinbutton13'}->set_update_policy('always' );
			    $widgets->{'spinbutton13'}->set_numeric(1);
			    $widgets->{'spinbutton13'}->set_wrap(0);
			    $widgets->{'spinbutton13'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox85'}->add($widgets->{'spinbutton13'} );
			    $widgets->{'spinbutton13'}->show;
			    $forms->{'plu'}{'spinbutton13'} = $widgets->{'spinbutton13'};
			    $forms->{'plu'}{'spinbutton13'}->can_focus(1 );
			    $forms->{'plu'}{'hbox85'}->set_child_packing($forms->{'plu'}{'spinbutton13'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton11'
			    $work->{'spinbutton11-adj'} = new Gtk::Adjustment(2002, 2002, 2037, 1, 10, 10 );
			    $widgets->{'spinbutton11'} = new Gtk::SpinButton($work->{'spinbutton11-adj'}, 1, 0 );
			    $widgets->{'spinbutton11'}->set_update_policy('always' );
			    $widgets->{'spinbutton11'}->set_numeric(1);
			    $widgets->{'spinbutton11'}->set_wrap(0);
			    $widgets->{'spinbutton11'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox85'}->add($widgets->{'spinbutton11'} );
			    $widgets->{'spinbutton11'}->show;
			    $forms->{'plu'}{'spinbutton11'} = $widgets->{'spinbutton11'};
			    $forms->{'plu'}{'spinbutton11'}->can_focus(1 );
			    $forms->{'plu'}{'hbox85'}->set_child_packing($forms->{'plu'}{'spinbutton11'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton14'
			    $work->{'spinbutton14-adj'} = new Gtk::Adjustment(2, 0, 23, 1, 10, 10 );
			    $widgets->{'spinbutton14'} = new Gtk::SpinButton($work->{'spinbutton14-adj'}, 1, 0 );
			    $widgets->{'spinbutton14'}->set_update_policy('always' );
			    $widgets->{'spinbutton14'}->set_numeric(1);
			    $widgets->{'spinbutton14'}->set_wrap(0);
			    $widgets->{'spinbutton14'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox85'}->add($widgets->{'spinbutton14'} );
			    $widgets->{'spinbutton14'}->show;
			    $forms->{'plu'}{'spinbutton14'} = $widgets->{'spinbutton14'};
			    $forms->{'plu'}{'spinbutton14'}->can_focus(1 );
			    $forms->{'plu'}{'hbox85'}->set_child_packing($forms->{'plu'}{'spinbutton14'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton15'
			    $work->{'spinbutton15-adj'} = new Gtk::Adjustment(1, 0, 59, 1, 10, 10 );
			    $widgets->{'spinbutton15'} = new Gtk::SpinButton($work->{'spinbutton15-adj'}, 1, 0 );
			    $widgets->{'spinbutton15'}->set_update_policy('always' );
			    $widgets->{'spinbutton15'}->set_numeric(1);
			    $widgets->{'spinbutton15'}->set_wrap(0);
			    $widgets->{'spinbutton15'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox85'}->add($widgets->{'spinbutton15'} );
			    $widgets->{'spinbutton15'}->show;
			    $forms->{'plu'}{'spinbutton15'} = $widgets->{'spinbutton15'};
			    $forms->{'plu'}{'spinbutton15'}->can_focus(1 );
			    $forms->{'plu'}{'hbox85'}->set_child_packing($forms->{'plu'}{'spinbutton15'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton16'
			    $work->{'spinbutton16-adj'} = new Gtk::Adjustment(1, 0, 59, 1, 10, 10 );
			    $widgets->{'spinbutton16'} = new Gtk::SpinButton($work->{'spinbutton16-adj'}, 1, 0 );
			    $widgets->{'spinbutton16'}->set_update_policy('always' );
			    $widgets->{'spinbutton16'}->set_numeric(1);
			    $widgets->{'spinbutton16'}->set_wrap(0);
			    $widgets->{'spinbutton16'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox85'}->add($widgets->{'spinbutton16'} );
			    $widgets->{'spinbutton16'}->show;
			    $forms->{'plu'}{'spinbutton16'} = $widgets->{'spinbutton16'};
			    $forms->{'plu'}{'spinbutton16'}->can_focus(1 );
			    $forms->{'plu'}{'hbox85'}->set_child_packing($forms->{'plu'}{'spinbutton16'}, 1, 1, 0, 'start' );
		    $forms->{'plu'}{'vbox16'}->set_child_packing($forms->{'plu'}{'frame16'}, 1, 1, 0, 'start' );
		    #
		    # Construct a GtkFrame 'frame17'
		    $widgets->{'frame17'} = new Gtk::Frame(_('設定折扣結束時間'));
		    $widgets->{'frame17'}->set_label_align(0, 0 );
		    $widgets->{'frame17'}->set_shadow_type('etched_in' );
		    $forms->{'plu'}{'vbox16'}->add($widgets->{'frame17'} );
		    $widgets->{'frame17'}->show;
		    $forms->{'plu'}{'frame17'} = $widgets->{'frame17'};
			#
			# Construct a GtkHBox 'hbox86'
			$widgets->{'hbox86'} = new Gtk::HBox(0, 0 );
			$forms->{'plu'}{'frame17'}->add($widgets->{'hbox86'} );
			$widgets->{'hbox86'}->show;
			$forms->{'plu'}{'hbox86'} = $widgets->{'hbox86'};
			    #
			    # Construct a GtkLabel 'label30'
			    $widgets->{'label30'} = new Gtk::Label(_('星期幾'));
			    $widgets->{'label30'}->set_justify('center' );
			    $widgets->{'label30'}->set_line_wrap(0 );
			    $forms->{'plu'}{'hbox86'}->add($widgets->{'label30'} );
			    $widgets->{'label30'}->show;
			    $forms->{'plu'}{'label30'} = $widgets->{'label30'};
			    $forms->{'plu'}{'label30'}->set_alignment(0.5, 0.5 );
			    $forms->{'plu'}{'hbox86'}->set_child_packing($forms->{'plu'}{'label30'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton18'
			    $work->{'spinbutton18-adj'} = new Gtk::Adjustment(1, 1, 12, 1, 10, 10 );
			    $widgets->{'spinbutton18'} = new Gtk::SpinButton($work->{'spinbutton18-adj'}, 1, 0 );
			    $widgets->{'spinbutton18'}->set_update_policy('always' );
			    $widgets->{'spinbutton18'}->set_numeric(1);
			    $widgets->{'spinbutton18'}->set_wrap(0);
			    $widgets->{'spinbutton18'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox86'}->add($widgets->{'spinbutton18'} );
			    $widgets->{'spinbutton18'}->show;
			    $forms->{'plu'}{'spinbutton18'} = $widgets->{'spinbutton18'};
			    $forms->{'plu'}{'spinbutton18'}->can_focus(1 );
			    $forms->{'plu'}{'hbox86'}->set_child_packing($forms->{'plu'}{'spinbutton18'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton19'
			    $work->{'spinbutton19-adj'} = new Gtk::Adjustment(31, 1, 31, 1, 10, 10 );
			    $widgets->{'spinbutton19'} = new Gtk::SpinButton($work->{'spinbutton19-adj'}, 1, 0 );
			    $widgets->{'spinbutton19'}->set_update_policy('always' );
			    $widgets->{'spinbutton19'}->set_numeric(1);
			    $widgets->{'spinbutton19'}->set_wrap(0);
			    $widgets->{'spinbutton19'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox86'}->add($widgets->{'spinbutton19'} );
			    $widgets->{'spinbutton19'}->show;
			    $forms->{'plu'}{'spinbutton19'} = $widgets->{'spinbutton19'};
			    $forms->{'plu'}{'spinbutton19'}->can_focus(1 );
			    $forms->{'plu'}{'hbox86'}->set_child_packing($forms->{'plu'}{'spinbutton19'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton17'
			    $work->{'spinbutton17-adj'} = new Gtk::Adjustment(2037, 2002, 2037, 1, 10, 10 );
			    $widgets->{'spinbutton17'} = new Gtk::SpinButton($work->{'spinbutton17-adj'}, 1, 0 );
			    $widgets->{'spinbutton17'}->set_update_policy('always' );
			    $widgets->{'spinbutton17'}->set_numeric(1);
			    $widgets->{'spinbutton17'}->set_wrap(0);
			    $widgets->{'spinbutton17'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox86'}->add($widgets->{'spinbutton17'} );
			    $widgets->{'spinbutton17'}->show;
			    $forms->{'plu'}{'spinbutton17'} = $widgets->{'spinbutton17'};
			    $forms->{'plu'}{'spinbutton17'}->can_focus(1 );
			    $forms->{'plu'}{'hbox86'}->set_child_packing($forms->{'plu'}{'spinbutton17'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton20'
			    $work->{'spinbutton20-adj'} = new Gtk::Adjustment(23, 0, 23, 1, 10, 10 );
			    $widgets->{'spinbutton20'} = new Gtk::SpinButton($work->{'spinbutton20-adj'}, 1, 0 );
			    $widgets->{'spinbutton20'}->set_update_policy('always' );
			    $widgets->{'spinbutton20'}->set_numeric(1);
			    $widgets->{'spinbutton20'}->set_wrap(0);
			    $widgets->{'spinbutton20'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox86'}->add($widgets->{'spinbutton20'} );
			    $widgets->{'spinbutton20'}->show;
			    $forms->{'plu'}{'spinbutton20'} = $widgets->{'spinbutton20'};
			    $forms->{'plu'}{'spinbutton20'}->can_focus(1 );
			    $forms->{'plu'}{'hbox86'}->set_child_packing($forms->{'plu'}{'spinbutton20'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton21'
			    $work->{'spinbutton21-adj'} = new Gtk::Adjustment(59, 0, 59, 1, 10, 10 );
			    $widgets->{'spinbutton21'} = new Gtk::SpinButton($work->{'spinbutton21-adj'}, 1, 0 );
			    $widgets->{'spinbutton21'}->set_update_policy('always' );
			    $widgets->{'spinbutton21'}->set_numeric(1);
			    $widgets->{'spinbutton21'}->set_wrap(0);
			    $widgets->{'spinbutton21'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox86'}->add($widgets->{'spinbutton21'} );
			    $widgets->{'spinbutton21'}->show;
			    $forms->{'plu'}{'spinbutton21'} = $widgets->{'spinbutton21'};
			    $forms->{'plu'}{'spinbutton21'}->can_focus(1 );
			    $forms->{'plu'}{'hbox86'}->set_child_packing($forms->{'plu'}{'spinbutton21'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'spinbutton22'
			    $work->{'spinbutton22-adj'} = new Gtk::Adjustment(59, 0, 59, 1, 10, 10 );
			    $widgets->{'spinbutton22'} = new Gtk::SpinButton($work->{'spinbutton22-adj'}, 1, 0 );
			    $widgets->{'spinbutton22'}->set_update_policy('always' );
			    $widgets->{'spinbutton22'}->set_numeric(1);
			    $widgets->{'spinbutton22'}->set_wrap(0);
			    $widgets->{'spinbutton22'}->set_snap_to_ticks(0 );
			    $forms->{'plu'}{'hbox86'}->add($widgets->{'spinbutton22'} );
			    $widgets->{'spinbutton22'}->show;
			    $forms->{'plu'}{'spinbutton22'} = $widgets->{'spinbutton22'};
			    $forms->{'plu'}{'spinbutton22'}->can_focus(1 );
			    $forms->{'plu'}{'hbox86'}->set_child_packing($forms->{'plu'}{'spinbutton22'}, 1, 1, 0, 'start' );
		    $forms->{'plu'}{'vbox16'}->set_child_packing($forms->{'plu'}{'frame17'}, 1, 1, 0, 'start' );
	    $forms->{'plu'}{'vbox3'}->set_child_packing($forms->{'plu'}{'frame8'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox87'
	    $widgets->{'hbox87'} = new Gtk::HBox(0, 0 );
	    $forms->{'plu'}{'vbox3'}->add($widgets->{'hbox87'} );
	    $widgets->{'hbox87'}->show;
	    $forms->{'plu'}{'hbox87'} = $widgets->{'hbox87'};
		#
		# Construct a GtkFrame 'frame18'
		$widgets->{'frame18'} = new Gtk::Frame(_('稅率'));
		$widgets->{'frame18'}->set_label_align(0, 0 );
		$widgets->{'frame18'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox87'}->add($widgets->{'frame18'} );
		$widgets->{'frame18'}->show;
		$forms->{'plu'}{'frame18'} = $widgets->{'frame18'};
		    #
		    # Construct a GtkSpinButton 'spinbutton60'
		    $work->{'spinbutton60-adj'} = new Gtk::Adjustment(0, 0, 99, 1, 10, 10 );
		    $widgets->{'spinbutton60'} = new Gtk::SpinButton($work->{'spinbutton60-adj'}, 1, 0 );
		    $widgets->{'spinbutton60'}->set_update_policy('always' );
		    $widgets->{'spinbutton60'}->set_numeric(1);
		    $widgets->{'spinbutton60'}->set_wrap(0);
		    $widgets->{'spinbutton60'}->set_snap_to_ticks(0 );
		    $forms->{'plu'}{'frame18'}->add($widgets->{'spinbutton60'} );
		    $widgets->{'spinbutton60'}->show;
		    $forms->{'plu'}{'spinbutton60'} = $widgets->{'spinbutton60'};
		    $forms->{'plu'}{'spinbutton60'}->can_focus(1 );
		$forms->{'plu'}{'hbox87'}->set_child_packing($forms->{'plu'}{'frame18'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkFrame 'frame19'
		$widgets->{'frame19'} = new Gtk::Frame(_('標籤'));
		$widgets->{'frame19'}->set_label_align(0, 0 );
		$widgets->{'frame19'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox87'}->add($widgets->{'frame19'} );
		$widgets->{'frame19'}->show;
		$forms->{'plu'}{'frame19'} = $widgets->{'frame19'};
		    #
		    # Construct a GtkSpinButton 'spinbutton62'
		    $work->{'spinbutton62-adj'} = new Gtk::Adjustment(6, 1, 6, 1, 10, 10 );
		    $widgets->{'spinbutton62'} = new Gtk::SpinButton($work->{'spinbutton62-adj'}, 1, 0 );
		    $widgets->{'spinbutton62'}->set_update_policy('always' );
		    $widgets->{'spinbutton62'}->set_numeric(1);
		    $widgets->{'spinbutton62'}->set_wrap(0);
		    $widgets->{'spinbutton62'}->set_snap_to_ticks(0 );
		    $forms->{'plu'}{'frame19'}->add($widgets->{'spinbutton62'} );
		    $widgets->{'spinbutton62'}->show;
		    $forms->{'plu'}{'spinbutton62'} = $widgets->{'spinbutton62'};
		    $forms->{'plu'}{'spinbutton62'}->can_focus(1 );
		$forms->{'plu'}{'hbox87'}->set_child_packing($forms->{'plu'}{'frame19'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkFrame 'frame20'
		$widgets->{'frame20'} = new Gtk::Frame(_('計價方式'));
		$widgets->{'frame20'}->set_label_align(0, 0 );
		$widgets->{'frame20'}->set_shadow_type('etched_in' );
		$forms->{'plu'}{'hbox87'}->add($widgets->{'frame20'} );
		$widgets->{'frame20'}->show;
		$forms->{'plu'}{'frame20'} = $widgets->{'frame20'};
		    #
		    # Construct a GtkCombo 'combo8'
		    $widgets->{'combo8'} = new Gtk::Combo;
		    $widgets->{'combo8'}->set_case_sensitive(0 );
		    $widgets->{'combo8'}->set_use_arrows(1 );
		    $widgets->{'combo8'}->set_use_arrows_always(0 );
		    $widgets->{'combo8'}->set_popdown_strings( '1．個數', '2．重量' );
		    $forms->{'plu'}{'frame20'}->add($widgets->{'combo8'} );
		    $widgets->{'combo8'}->show;
		    $forms->{'plu'}{'combo8'} = $widgets->{'combo8'};
			#
			# Construct a GtkEntry 'combo-entry8'
			$widgets->{'combo-entry8'} = $forms->{'plu'}{'combo8'}->entry;
			$widgets->{'combo-entry8'}->show;
			$forms->{'plu'}{'combo-entry8'} = $widgets->{'combo-entry8'};
			$forms->{'plu'}{'combo-entry8'}->can_focus(1 );
			$forms->{'plu'}{'combo-entry8'}->set_text(_('1．個數') );
			$forms->{'plu'}{'combo-entry8'}->set_max_length(0 );
			$forms->{'plu'}{'combo-entry8'}->set_visibility(1 );
			$forms->{'plu'}{'combo-entry8'}->set_editable(0 );
		$forms->{'plu'}{'hbox87'}->set_child_packing($forms->{'plu'}{'frame20'}, 1, 1, 0, 'start' );
	    $forms->{'plu'}{'vbox3'}->set_child_packing($forms->{'plu'}{'hbox87'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkStatusbar 'statusbar1'
	    $widgets->{'statusbar1'} = new Gtk::Statusbar;
	    $forms->{'plu'}{'vbox3'}->add($widgets->{'statusbar1'} );
	    $widgets->{'statusbar1'}->show;
	    $forms->{'plu'}{'statusbar1'} = $widgets->{'statusbar1'};
	    $forms->{'plu'}{'vbox3'}->set_child_packing($forms->{'plu'}{'statusbar1'}, 0, 0, 0, 'start' );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'plu'}{'plu'}->signal_connect('delete_event', "$class\::on_plu_delete_event", '', 'plu', "plu-$instance" );
    $forms->{'plu'}{'plu_read'}->signal_connect('clicked', "$class\::on_plu_read_clicked", '', 'plu_read', "plu-$instance" );
    $forms->{'plu'}{'plu_write'}->signal_connect('clicked', "$class\::on_plu_write_clicked", '', 'plu_write', "plu-$instance" );
    $forms->{'plu'}{'default'}->signal_connect('clicked', "$class\::on_default_clicked", '', 'default', "plu-$instance" );
    $forms->{'plu'}{'pluwritetofile'}->signal_connect('clicked', "$class\::on_pluwritetofile_clicked", '', 'pluwritetofile', "plu-$instance" );
    $forms->{'plu'}{'pluwritetoscale'}->signal_connect('clicked', "$class\::on_pluwritetoscale_clicked", '', 'pluwritetoscale', "plu-$instance" );
    $forms->{'plu'}{'browse'}->signal_connect('clicked', "$class\::on_browse_clicked", '', 'browse', "plu-$instance" );
    $forms->{'plu'}{'entry11'}->signal_connect('activate', "$class\::on_entry11_activate", '', 'entry11', "plu-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'plu'});
    $self->TOPLEVEL($self->FORM->{'plu'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("plu-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new









#==============================================================================
#=== This is the 'date' class                              
#==============================================================================
package date;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'date' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_date_delete_event' => undef,
    'on_date_read_clicked' => undef,
    'on_date_write_clicked' => undef,
    'on_default_clicked' => undef,
    'on_tare_read_clicked' => undef,
    'on_tare_write_clicked' => undef,
    'on_unit_price_read_clicked' => undef,
    'on_unit_price_write_clicked' => undef,
    'on_unit_read_clicked' => undef,
    'on_unit_write_clicked' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"date-$instance"}) {$instance++;}


    #
    # Construct a GtkWindow 'date'
    $widgets->{'date'} = new Gtk::Window;
    $widgets->{'date'}->set_title(_('設定日期及時間') );
    $widgets->{'date'}->position('none' );
    $widgets->{'date'}->set_policy(0, 1, 0 );
    $widgets->{'date'}->set_modal(0 );
    $widgets->{'date'}->realize;
    $forms->{'date'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'date'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'date'}{'accelgroup'}->attach($widgets->{'date'} );
    $forms->{'date'}{'date'} = $widgets->{'date'};
	#
	# Construct a GtkVBox 'vbox6'
	$widgets->{'vbox6'} = new Gtk::VBox(0, 0 );
	$forms->{'date'}{'date'}->add($widgets->{'vbox6'} );
	$widgets->{'vbox6'}->show;
	$forms->{'date'}{'vbox6'} = $widgets->{'vbox6'};
	    #
	    # Construct a GtkHBox 'hbox35'
	    $widgets->{'hbox35'} = new Gtk::HBox(0, 0 );
	    $forms->{'date'}{'vbox6'}->add($widgets->{'hbox35'} );
	    $widgets->{'hbox35'}->show;
	    $forms->{'date'}{'hbox35'} = $widgets->{'hbox35'};
		#
		# Construct a GtkButton 'date_read'
		$widgets->{'date_read'} = new Gtk::Button(_('讀取'));
		$forms->{'date'}{'hbox35'}->add($widgets->{'date_read'} );
		$widgets->{'date_read'}->show;
		$forms->{'date'}{'date_read'} = $widgets->{'date_read'};
		$forms->{'date'}{'date_read'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'date_read'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'date_write'
		$widgets->{'date_write'} = new Gtk::Button(_('寫入'));
		$forms->{'date'}{'hbox35'}->add($widgets->{'date_write'} );
		$widgets->{'date_write'}->show;
		$forms->{'date'}{'date_write'} = $widgets->{'date_write'};
		$forms->{'date'}{'date_write'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'date_write'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton24'
		$work->{'spinbutton24-adj'} = new Gtk::Adjustment(0, 0, 23, 1, 10, 10 );
		$widgets->{'spinbutton24'} = new Gtk::SpinButton($work->{'spinbutton24-adj'}, 1, 0 );
		$widgets->{'spinbutton24'}->set_update_policy('always' );
		$widgets->{'spinbutton24'}->set_wrap(0);
		$widgets->{'spinbutton24'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox35'}->add($widgets->{'spinbutton24'} );
		$widgets->{'spinbutton24'}->show;
		$forms->{'date'}{'spinbutton24'} = $widgets->{'spinbutton24'};
		$forms->{'date'}{'spinbutton24'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'spinbutton24'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton25'
		$work->{'spinbutton25-adj'} = new Gtk::Adjustment(0, 0, 59, 1, 10, 10 );
		$widgets->{'spinbutton25'} = new Gtk::SpinButton($work->{'spinbutton25-adj'}, 1, 0 );
		$widgets->{'spinbutton25'}->set_update_policy('always' );
		$widgets->{'spinbutton25'}->set_wrap(0);
		$widgets->{'spinbutton25'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox35'}->add($widgets->{'spinbutton25'} );
		$widgets->{'spinbutton25'}->show;
		$forms->{'date'}{'spinbutton25'} = $widgets->{'spinbutton25'};
		$forms->{'date'}{'spinbutton25'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'spinbutton25'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton26'
		$work->{'spinbutton26-adj'} = new Gtk::Adjustment(0, 0, 59, 1, 10, 10 );
		$widgets->{'spinbutton26'} = new Gtk::SpinButton($work->{'spinbutton26-adj'}, 1, 0 );
		$widgets->{'spinbutton26'}->set_update_policy('always' );
		$widgets->{'spinbutton26'}->set_wrap(0);
		$widgets->{'spinbutton26'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox35'}->add($widgets->{'spinbutton26'} );
		$widgets->{'spinbutton26'}->show;
		$forms->{'date'}{'spinbutton26'} = $widgets->{'spinbutton26'};
		$forms->{'date'}{'spinbutton26'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'spinbutton26'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton27'
		$work->{'spinbutton27-adj'} = new Gtk::Adjustment(1, 1, 12, 1, 10, 10 );
		$widgets->{'spinbutton27'} = new Gtk::SpinButton($work->{'spinbutton27-adj'}, 1, 0 );
		$widgets->{'spinbutton27'}->set_update_policy('always' );
		$widgets->{'spinbutton27'}->set_wrap(0);
		$widgets->{'spinbutton27'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox35'}->add($widgets->{'spinbutton27'} );
		$widgets->{'spinbutton27'}->show;
		$forms->{'date'}{'spinbutton27'} = $widgets->{'spinbutton27'};
		$forms->{'date'}{'spinbutton27'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'spinbutton27'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton28'
		$work->{'spinbutton28-adj'} = new Gtk::Adjustment(1, 1, 31, 1, 10, 10 );
		$widgets->{'spinbutton28'} = new Gtk::SpinButton($work->{'spinbutton28-adj'}, 1, 0 );
		$widgets->{'spinbutton28'}->set_update_policy('always' );
		$widgets->{'spinbutton28'}->set_wrap(0);
		$widgets->{'spinbutton28'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox35'}->add($widgets->{'spinbutton28'} );
		$widgets->{'spinbutton28'}->show;
		$forms->{'date'}{'spinbutton28'} = $widgets->{'spinbutton28'};
		$forms->{'date'}{'spinbutton28'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'spinbutton28'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton29'
		$work->{'spinbutton29-adj'} = new Gtk::Adjustment(2037, 2002, 2100, 1, 10, 10 );
		$widgets->{'spinbutton29'} = new Gtk::SpinButton($work->{'spinbutton29-adj'}, 1, 0 );
		$widgets->{'spinbutton29'}->set_update_policy('always' );
		$widgets->{'spinbutton29'}->set_wrap(0);
		$widgets->{'spinbutton29'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox35'}->add($widgets->{'spinbutton29'} );
		$widgets->{'spinbutton29'}->show;
		$forms->{'date'}{'spinbutton29'} = $widgets->{'spinbutton29'};
		$forms->{'date'}{'spinbutton29'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'spinbutton29'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkButton 'default'
		$widgets->{'default'} = new Gtk::Button(_('預設參考值'));
		$forms->{'date'}{'hbox35'}->add($widgets->{'default'} );
		$widgets->{'default'}->show;
		$forms->{'date'}{'default'} = $widgets->{'default'};
		$forms->{'date'}{'default'}->can_focus(1 );
		$forms->{'date'}{'hbox35'}->set_child_packing($forms->{'date'}{'default'}, 0, 0, 0, 'start' );
	    $forms->{'date'}{'vbox6'}->set_child_packing($forms->{'date'}{'hbox35'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox37'
	    $widgets->{'hbox37'} = new Gtk::HBox(0, 0 );
	    $forms->{'date'}{'vbox6'}->add($widgets->{'hbox37'} );
	    $widgets->{'hbox37'}->show;
	    $forms->{'date'}{'hbox37'} = $widgets->{'hbox37'};
		#
		# Construct a GtkButton 'unit_price_read'
		$widgets->{'unit_price_read'} = new Gtk::Button(_('讀取單價'));
		$forms->{'date'}{'hbox37'}->add($widgets->{'unit_price_read'} );
		$widgets->{'unit_price_read'}->show;
		$forms->{'date'}{'unit_price_read'} = $widgets->{'unit_price_read'};
		$forms->{'date'}{'unit_price_read'}->can_focus(1 );
		$forms->{'date'}{'hbox37'}->set_child_packing($forms->{'date'}{'unit_price_read'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'unit_price_write'
		$widgets->{'unit_price_write'} = new Gtk::Button(_('寫入單價'));
		$forms->{'date'}{'hbox37'}->add($widgets->{'unit_price_write'} );
		$widgets->{'unit_price_write'}->show;
		$forms->{'date'}{'unit_price_write'} = $widgets->{'unit_price_write'};
		$forms->{'date'}{'unit_price_write'}->can_focus(1 );
		$forms->{'date'}{'hbox37'}->set_child_packing($forms->{'date'}{'unit_price_write'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton68'
		$work->{'spinbutton68-adj'} = new Gtk::Adjustment(0, 0, 99999, 1, 10, 10 );
		$widgets->{'spinbutton68'} = new Gtk::SpinButton($work->{'spinbutton68-adj'}, 1, 0 );
		$widgets->{'spinbutton68'}->set_update_policy('always' );
		$widgets->{'spinbutton68'}->set_numeric(1);
		$widgets->{'spinbutton68'}->set_wrap(0);
		$widgets->{'spinbutton68'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox37'}->add($widgets->{'spinbutton68'} );
		$widgets->{'spinbutton68'}->show;
		$forms->{'date'}{'spinbutton68'} = $widgets->{'spinbutton68'};
		$forms->{'date'}{'spinbutton68'}->can_focus(1 );
		$forms->{'date'}{'hbox37'}->set_child_packing($forms->{'date'}{'spinbutton68'}, 1, 1, 0, 'start' );
	    $forms->{'date'}{'vbox6'}->set_child_packing($forms->{'date'}{'hbox37'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox36'
	    $widgets->{'hbox36'} = new Gtk::HBox(0, 0 );
	    $forms->{'date'}{'vbox6'}->add($widgets->{'hbox36'} );
	    $widgets->{'hbox36'}->show;
	    $forms->{'date'}{'hbox36'} = $widgets->{'hbox36'};
		#
		# Construct a GtkButton 'tare_read'
		$widgets->{'tare_read'} = new Gtk::Button(_('讀取扣重'));
		$forms->{'date'}{'hbox36'}->add($widgets->{'tare_read'} );
		$widgets->{'tare_read'}->show;
		$forms->{'date'}{'tare_read'} = $widgets->{'tare_read'};
		$forms->{'date'}{'tare_read'}->can_focus(1 );
		$forms->{'date'}{'hbox36'}->set_child_packing($forms->{'date'}{'tare_read'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'tare_write'
		$widgets->{'tare_write'} = new Gtk::Button(_('寫入扣重'));
		$forms->{'date'}{'hbox36'}->add($widgets->{'tare_write'} );
		$widgets->{'tare_write'}->show;
		$forms->{'date'}{'tare_write'} = $widgets->{'tare_write'};
		$forms->{'date'}{'tare_write'}->can_focus(1 );
		$forms->{'date'}{'hbox36'}->set_child_packing($forms->{'date'}{'tare_write'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton69'
		$work->{'spinbutton69-adj'} = new Gtk::Adjustment(1, 0, 9999, 1, 10, 10 );
		$widgets->{'spinbutton69'} = new Gtk::SpinButton($work->{'spinbutton69-adj'}, 1, 0 );
		$widgets->{'spinbutton69'}->set_update_policy('always' );
		$widgets->{'spinbutton69'}->set_numeric(1);
		$widgets->{'spinbutton69'}->set_wrap(0);
		$widgets->{'spinbutton69'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox36'}->add($widgets->{'spinbutton69'} );
		$widgets->{'spinbutton69'}->show;
		$forms->{'date'}{'spinbutton69'} = $widgets->{'spinbutton69'};
		$forms->{'date'}{'spinbutton69'}->can_focus(1 );
		$forms->{'date'}{'hbox36'}->set_child_packing($forms->{'date'}{'spinbutton69'}, 1, 1, 0, 'start' );
	    $forms->{'date'}{'vbox6'}->set_child_packing($forms->{'date'}{'hbox36'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox38'
	    $widgets->{'hbox38'} = new Gtk::HBox(0, 0 );
	    $forms->{'date'}{'vbox6'}->add($widgets->{'hbox38'} );
	    $widgets->{'hbox38'}->show;
	    $forms->{'date'}{'hbox38'} = $widgets->{'hbox38'};
		#
		# Construct a GtkButton 'unit_read'
		$widgets->{'unit_read'} = new Gtk::Button(_('讀取單位'));
		$forms->{'date'}{'hbox38'}->add($widgets->{'unit_read'} );
		$widgets->{'unit_read'}->show;
		$forms->{'date'}{'unit_read'} = $widgets->{'unit_read'};
		$forms->{'date'}{'unit_read'}->can_focus(1 );
		$forms->{'date'}{'hbox38'}->set_child_packing($forms->{'date'}{'unit_read'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'unit_write'
		$widgets->{'unit_write'} = new Gtk::Button(_('寫入單位'));
		$forms->{'date'}{'hbox38'}->add($widgets->{'unit_write'} );
		$widgets->{'unit_write'}->show;
		$forms->{'date'}{'unit_write'} = $widgets->{'unit_write'};
		$forms->{'date'}{'unit_write'}->can_focus(1 );
		$forms->{'date'}{'hbox38'}->set_child_packing($forms->{'date'}{'unit_write'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton70'
		$work->{'spinbutton70-adj'} = new Gtk::Adjustment(1, 0, 100, 1, 10, 10 );
		$widgets->{'spinbutton70'} = new Gtk::SpinButton($work->{'spinbutton70-adj'}, 1, 0 );
		$widgets->{'spinbutton70'}->set_update_policy('always' );
		$widgets->{'spinbutton70'}->set_numeric(1);
		$widgets->{'spinbutton70'}->set_wrap(0);
		$widgets->{'spinbutton70'}->set_snap_to_ticks(0 );
		$forms->{'date'}{'hbox38'}->add($widgets->{'spinbutton70'} );
		$widgets->{'spinbutton70'}->show;
		$forms->{'date'}{'spinbutton70'} = $widgets->{'spinbutton70'};
		$forms->{'date'}{'spinbutton70'}->can_focus(1 );
		$forms->{'date'}{'hbox38'}->set_child_packing($forms->{'date'}{'spinbutton70'}, 1, 1, 0, 'start' );
	    $forms->{'date'}{'vbox6'}->set_child_packing($forms->{'date'}{'hbox38'}, 1, 1, 0, 'start' );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'date'}{'date'}->signal_connect('delete_event', "$class\::on_date_delete_event", '', 'date', "date-$instance" );
    $forms->{'date'}{'date_read'}->signal_connect('clicked', "$class\::on_date_read_clicked", '', 'date_read', "date-$instance" );
    $forms->{'date'}{'date_write'}->signal_connect('clicked', "$class\::on_date_write_clicked", '', 'date_write', "date-$instance" );
    $forms->{'date'}{'default'}->signal_connect('clicked', "$class\::on_default_clicked", '', 'default', "date-$instance" );
    $forms->{'date'}{'unit_price_read'}->signal_connect('clicked', "$class\::on_unit_price_read_clicked", '', 'unit_price_read', "date-$instance" );
    $forms->{'date'}{'unit_price_write'}->signal_connect('clicked', "$class\::on_unit_price_write_clicked", '', 'unit_price_write', "date-$instance" );
    $forms->{'date'}{'tare_read'}->signal_connect('clicked', "$class\::on_tare_read_clicked", '', 'tare_read', "date-$instance" );
    $forms->{'date'}{'tare_write'}->signal_connect('clicked', "$class\::on_tare_write_clicked", '', 'tare_write', "date-$instance" );
    $forms->{'date'}{'unit_read'}->signal_connect('clicked', "$class\::on_unit_read_clicked", '', 'unit_read', "date-$instance" );
    $forms->{'date'}{'unit_write'}->signal_connect('clicked', "$class\::on_unit_write_clicked", '', 'unit_write', "date-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'date'});
    $self->TOPLEVEL($self->FORM->{'date'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("date-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new









#==============================================================================
#=== This is the 'string' class                              
#==============================================================================
package string;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'string' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_browse_clicked' => undef,
    'on_default_clicked' => undef,
    'on_string_delete_event' => undef,
    'on_string_load_clicked' => undef,
    'on_string_read_clicked' => undef,
    'on_string_write_clicked' => undef,
    'on_stringwritetofile_clicked' => undef,
    'on_stringwritetoscale_clicked' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"string-$instance"}) {$instance++;}


    #
    # Construct a GtkWindow 'string'
    $widgets->{'string'} = new Gtk::Window;
    $widgets->{'string'}->set_title(_('字串設定') );
    $widgets->{'string'}->position('none' );
    $widgets->{'string'}->set_policy(0, 1, 0 );
    $widgets->{'string'}->set_modal(0 );
    $widgets->{'string'}->realize;
    $forms->{'string'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'string'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'string'}{'accelgroup'}->attach($widgets->{'string'} );
    $forms->{'string'}{'string'} = $widgets->{'string'};
	#
	# Construct a GtkVBox 'vbox4'
	$widgets->{'vbox4'} = new Gtk::VBox(0, 0 );
	$forms->{'string'}{'string'}->add($widgets->{'vbox4'} );
	$widgets->{'vbox4'}->show;
	$forms->{'string'}{'vbox4'} = $widgets->{'vbox4'};
	    #
	    # Construct a GtkHBox 'hbox22'
	    $widgets->{'hbox22'} = new Gtk::HBox(0, 0 );
	    $forms->{'string'}{'vbox4'}->add($widgets->{'hbox22'} );
	    $widgets->{'hbox22'}->show;
	    $forms->{'string'}{'hbox22'} = $widgets->{'hbox22'};
		#
		# Construct a GtkButton 'string_write'
		$widgets->{'string_write'} = new Gtk::Button(_('寫入'));
		$forms->{'string'}{'hbox22'}->add($widgets->{'string_write'} );
		$widgets->{'string_write'}->show;
		$forms->{'string'}{'string_write'} = $widgets->{'string_write'};
		$forms->{'string'}{'string_write'}->can_focus(1 );
		$forms->{'string'}{'hbox22'}->set_child_packing($forms->{'string'}{'string_write'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'string_read'
		$widgets->{'string_read'} = new Gtk::Button(_('讀取'));
		$forms->{'string'}{'hbox22'}->add($widgets->{'string_read'} );
		$widgets->{'string_read'}->show;
		$forms->{'string'}{'string_read'} = $widgets->{'string_read'};
		$forms->{'string'}{'string_read'}->can_focus(1 );
		$forms->{'string'}{'hbox22'}->set_child_packing($forms->{'string'}{'string_read'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkToggleButton 'togglebutton1'
		$widgets->{'togglebutton1'} = new Gtk::ToggleButton(_('字串添加') );
		$forms->{'string'}{'hbox22'}->add($widgets->{'togglebutton1'} );
		$widgets->{'togglebutton1'}->show;
		$forms->{'string'}{'togglebutton1'} = $widgets->{'togglebutton1'};
		$forms->{'string'}{'togglebutton1'}->can_focus(1 );
		$forms->{'string'}{'togglebutton1'}->active(0 );
		$forms->{'string'}{'hbox22'}->set_child_packing($forms->{'string'}{'togglebutton1'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'string_load'
		$widgets->{'string_load'} = new Gtk::Button(_('載入檔案'));
		$forms->{'string'}{'hbox22'}->add($widgets->{'string_load'} );
		$widgets->{'string_load'}->show;
		$forms->{'string'}{'string_load'} = $widgets->{'string_load'};
		$forms->{'string'}{'string_load'}->can_focus(1 );
		$forms->{'string'}{'hbox22'}->set_child_packing($forms->{'string'}{'string_load'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton72'
		$work->{'spinbutton72-adj'} = new Gtk::Adjustment(0, 0, 100, 1, 10, 10 );
		$widgets->{'spinbutton72'} = new Gtk::SpinButton($work->{'spinbutton72-adj'}, 1, 0 );
		$widgets->{'spinbutton72'}->set_update_policy('always' );
		$widgets->{'spinbutton72'}->set_numeric(1);
		$widgets->{'spinbutton72'}->set_wrap(0);
		$widgets->{'spinbutton72'}->set_snap_to_ticks(0 );
		$forms->{'string'}{'hbox22'}->add($widgets->{'spinbutton72'} );
		$widgets->{'spinbutton72'}->show;
		$forms->{'string'}{'spinbutton72'} = $widgets->{'spinbutton72'};
		$forms->{'string'}{'spinbutton72'}->can_focus(1 );
		$forms->{'string'}{'hbox22'}->set_child_packing($forms->{'string'}{'spinbutton72'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkButton 'default'
		$widgets->{'default'} = new Gtk::Button(_('預設參考值'));
		$forms->{'string'}{'hbox22'}->add($widgets->{'default'} );
		$widgets->{'default'}->show;
		$forms->{'string'}{'default'} = $widgets->{'default'};
		$forms->{'string'}{'default'}->can_focus(1 );
		$forms->{'string'}{'hbox22'}->set_child_packing($forms->{'string'}{'default'}, 0, 0, 0, 'start' );
	    $forms->{'string'}{'vbox4'}->set_child_packing($forms->{'string'}{'hbox22'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox95'
	    $widgets->{'hbox95'} = new Gtk::HBox(0, 0 );
	    $forms->{'string'}{'vbox4'}->add($widgets->{'hbox95'} );
	    $widgets->{'hbox95'}->show;
	    $forms->{'string'}{'hbox95'} = $widgets->{'hbox95'};
		#
		# Construct a GtkButton 'stringwritetofile'
		$widgets->{'stringwritetofile'} = new Gtk::Button(_('寫入檔案'));
		$forms->{'string'}{'hbox95'}->add($widgets->{'stringwritetofile'} );
		$widgets->{'stringwritetofile'}->show;
		$forms->{'string'}{'stringwritetofile'} = $widgets->{'stringwritetofile'};
		$forms->{'string'}{'stringwritetofile'}->set_sensitive(0);
		$forms->{'string'}{'stringwritetofile'}->can_focus(1 );
		$forms->{'string'}{'hbox95'}->set_child_packing($forms->{'string'}{'stringwritetofile'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'stringwritetoscale'
		$widgets->{'stringwritetoscale'} = new Gtk::Button(_('寫入磅秤'));
		$forms->{'string'}{'hbox95'}->add($widgets->{'stringwritetoscale'} );
		$widgets->{'stringwritetoscale'}->show;
		$forms->{'string'}{'stringwritetoscale'} = $widgets->{'stringwritetoscale'};
		$forms->{'string'}{'stringwritetoscale'}->can_focus(1 );
		$forms->{'string'}{'hbox95'}->set_child_packing($forms->{'string'}{'stringwritetoscale'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkCombo 'combo11'
		$widgets->{'combo11'} = new Gtk::Combo;
		$widgets->{'combo11'}->set_case_sensitive(0 );
		$widgets->{'combo11'}->set_use_arrows(1 );
		$widgets->{'combo11'}->set_use_arrows_always(0 );
		$widgets->{'combo11'}->set_popdown_strings( '' );
		$forms->{'string'}{'hbox95'}->add($widgets->{'combo11'} );
		$widgets->{'combo11'}->show;
		$forms->{'string'}{'combo11'} = $widgets->{'combo11'};
		    #
		    # Construct a GtkEntry 'combo-entry12'
		    $widgets->{'combo-entry12'} = $forms->{'string'}{'combo11'}->entry;
		    $widgets->{'combo-entry12'}->show;
		    $forms->{'string'}{'combo-entry12'} = $widgets->{'combo-entry12'};
		    $forms->{'string'}{'combo-entry12'}->can_focus(1 );
		    $forms->{'string'}{'combo-entry12'}->set_text(_('') );
		    $forms->{'string'}{'combo-entry12'}->set_max_length(0 );
		    $forms->{'string'}{'combo-entry12'}->set_visibility(1 );
		    $forms->{'string'}{'combo-entry12'}->set_editable(1 );
		$forms->{'string'}{'hbox95'}->set_child_packing($forms->{'string'}{'combo11'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkButton 'browse'
		$widgets->{'browse'} = new Gtk::Button(_('瀏覽'));
		$forms->{'string'}{'hbox95'}->add($widgets->{'browse'} );
		$widgets->{'browse'}->show;
		$forms->{'string'}{'browse'} = $widgets->{'browse'};
		$forms->{'string'}{'browse'}->can_focus(1 );
		$forms->{'string'}{'hbox95'}->set_child_packing($forms->{'string'}{'browse'}, 0, 0, 0, 'start' );
	    $forms->{'string'}{'vbox4'}->set_child_packing($forms->{'string'}{'hbox95'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkScrolledWindow 'scrolledwindow3'
	    $widgets->{'scrolledwindow3'} = new Gtk::ScrolledWindow( undef, undef);
	    $widgets->{'scrolledwindow3'}->set_policy('never', 'always' );
	    $widgets->{'scrolledwindow3'}->border_width(0 );
	    $widgets->{'scrolledwindow3'}->hscrollbar->set_update_policy('continuous' );
	    $widgets->{'scrolledwindow3'}->vscrollbar->set_update_policy('continuous' );
	    $forms->{'string'}{'vbox4'}->add($widgets->{'scrolledwindow3'} );
	    $widgets->{'scrolledwindow3'}->show;
	    $forms->{'string'}{'scrolledwindow3'} = $widgets->{'scrolledwindow3'};
	    $forms->{'string'}{'scrolledwindow3'}->set_usize(0, 80 );
		#
		# Construct a GtkText 'text3'
		$widgets->{'text3'} = new Gtk::Text( undef, undef );
		$widgets->{'text3'}->set_editable(1 );
		$widgets->{'text3'}->insert(undef, $widgets->{'text3'}->style->text('normal'), undef, _(""));
		$forms->{'string'}{'scrolledwindow3'}->add($widgets->{'text3'} );
		$widgets->{'text3'}->show;
		$forms->{'string'}{'text3'} = $widgets->{'text3'};
		$forms->{'string'}{'text3'}->can_focus(1 );
	    $forms->{'string'}{'vbox4'}->set_child_packing($forms->{'string'}{'scrolledwindow3'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkScrolledWindow 'scrolledwindow4'
	    $widgets->{'scrolledwindow4'} = new Gtk::ScrolledWindow( undef, undef);
	    $widgets->{'scrolledwindow4'}->set_policy('always', 'always' );
	    $widgets->{'scrolledwindow4'}->border_width(0 );
	    $widgets->{'scrolledwindow4'}->hscrollbar->set_update_policy('continuous' );
	    $widgets->{'scrolledwindow4'}->vscrollbar->set_update_policy('continuous' );
	    $forms->{'string'}{'vbox4'}->add($widgets->{'scrolledwindow4'} );
	    $widgets->{'scrolledwindow4'}->show;
	    $forms->{'string'}{'scrolledwindow4'} = $widgets->{'scrolledwindow4'};
		#
		# Construct a GtkCList 'clist1'
		$widgets->{'clist1'} = new Gtk::CList(2 );
		$widgets->{'clist1'}->set_selection_mode('single' );
		$widgets->{'clist1'}->set_border('in' );
		$widgets->{'clist1'}->column_titles_show;
		$widgets->{'clist1'}->set_column_width(0, 41 );
		$widgets->{'clist1'}->set_column_width(1, 80 );
		$forms->{'string'}{'scrolledwindow4'}->add($widgets->{'clist1'} );
		$widgets->{'clist1'}->show;
		$forms->{'string'}{'clist1'} = $widgets->{'clist1'};
		$forms->{'string'}{'clist1'}->can_focus(1 );
		    #
		    # Construct a GtkLabel 'label74'
		    $widgets->{'label74'} = new Gtk::Label(_('組別'));
		    $widgets->{'label74'}->set_justify('center' );
		    $widgets->{'label74'}->set_line_wrap(0 );
		    $forms->{'string'}{'clist1'}->set_column_widget(0, $widgets->{'label74'} );
		    $widgets->{'label74'}->show;
		    $forms->{'string'}{'label74'} = $widgets->{'label74'};
		    $forms->{'string'}{'label74'}->set_alignment(0.5, 0.5 );
		    #
		    # Construct a GtkLabel 'label75'
		    $widgets->{'label75'} = new Gtk::Label(_('字串內容'));
		    $widgets->{'label75'}->set_justify('center' );
		    $widgets->{'label75'}->set_line_wrap(0 );
		    $forms->{'string'}{'clist1'}->set_column_widget(1, $widgets->{'label75'} );
		    $widgets->{'label75'}->show;
		    $forms->{'string'}{'label75'} = $widgets->{'label75'};
		    $forms->{'string'}{'label75'}->set_alignment(0.5, 0.5 );
	    $forms->{'string'}{'vbox4'}->set_child_packing($forms->{'string'}{'scrolledwindow4'}, 1, 1, 0, 'start' );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'string'}{'string'}->signal_connect('delete_event', "$class\::on_string_delete_event", '', 'string', "string-$instance" );
    $forms->{'string'}{'string_write'}->signal_connect('clicked', "$class\::on_string_write_clicked", '', 'string_write', "string-$instance" );
    $forms->{'string'}{'string_read'}->signal_connect('clicked', "$class\::on_string_read_clicked", '', 'string_read', "string-$instance" );
    $forms->{'string'}{'string_load'}->signal_connect('clicked', "$class\::on_string_load_clicked", '', 'string_load', "string-$instance" );
    $forms->{'string'}{'default'}->signal_connect('clicked', "$class\::on_default_clicked", '', 'default', "string-$instance" );
    $forms->{'string'}{'stringwritetofile'}->signal_connect('clicked', "$class\::on_stringwritetofile_clicked", '', 'stringwritetofile', "string-$instance" );
    $forms->{'string'}{'stringwritetoscale'}->signal_connect('clicked', "$class\::on_stringwritetoscale_clicked", '', 'stringwritetoscale', "string-$instance" );
    $forms->{'string'}{'browse'}->signal_connect('clicked', "$class\::on_browse_clicked", '', 'browse', "string-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'string'});
    $self->TOPLEVEL($self->FORM->{'string'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("string-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new









#==============================================================================
#=== This is the 'sysinfo' class                              
#==============================================================================
package sysinfo;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'sysinfo' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_sysinfo_delete_event' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"sysinfo-$instance"}) {$instance++;}


    #
    # Construct a GtkWindow 'sysinfo'
    $widgets->{'sysinfo'} = new Gtk::Window;
    $widgets->{'sysinfo'}->set_title(_('系統資訊') );
    $widgets->{'sysinfo'}->position('none' );
    $widgets->{'sysinfo'}->set_policy(0, 1, 0 );
    $widgets->{'sysinfo'}->set_modal(0 );
    $widgets->{'sysinfo'}->set_usize(220, 0 );
    $widgets->{'sysinfo'}->realize;
    $forms->{'sysinfo'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'sysinfo'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'sysinfo'}{'accelgroup'}->attach($widgets->{'sysinfo'} );
    $forms->{'sysinfo'}{'sysinfo'} = $widgets->{'sysinfo'};
	#
	# Construct a GtkVBox 'vbox2'
	$widgets->{'vbox2'} = new Gtk::VBox(0, 0 );
	$forms->{'sysinfo'}{'sysinfo'}->add($widgets->{'vbox2'} );
	$widgets->{'vbox2'}->show;
	$forms->{'sysinfo'}{'vbox2'} = $widgets->{'vbox2'};
	    #
	    # Construct a GtkLabel 'label13'
	    $widgets->{'label13'} = new Gtk::Label(_('重量：'));
	    $widgets->{'label13'}->set_justify('center' );
	    $widgets->{'label13'}->set_line_wrap(0 );
	    $forms->{'sysinfo'}{'vbox2'}->add($widgets->{'label13'} );
	    $widgets->{'label13'}->show;
	    $forms->{'sysinfo'}{'label13'} = $widgets->{'label13'};
	    $forms->{'sysinfo'}{'label13'}->set_alignment(0.5, 0.5 );
	    $forms->{'sysinfo'}{'vbox2'}->set_child_packing($forms->{'sysinfo'}{'label13'}, 0, 0, 0, 'start' );
	    #
	    # Construct a GtkLabel 'label9'
	    $widgets->{'label9'} = new Gtk::Label(_('主機機號：'));
	    $widgets->{'label9'}->set_justify('center' );
	    $widgets->{'label9'}->set_line_wrap(0 );
	    $forms->{'sysinfo'}{'vbox2'}->add($widgets->{'label9'} );
	    $widgets->{'label9'}->show;
	    $forms->{'sysinfo'}{'label9'} = $widgets->{'label9'};
	    $forms->{'sysinfo'}{'label9'}->set_alignment(0.5, 0.5 );
	    $forms->{'sysinfo'}{'vbox2'}->set_child_packing($forms->{'sysinfo'}{'label9'}, 0, 0, 0, 'start' );
	    #
	    # Construct a GtkLabel 'label10'
	    $widgets->{'label10'} = new Gtk::Label(_('程式版號：'));
	    $widgets->{'label10'}->set_justify('center' );
	    $widgets->{'label10'}->set_line_wrap(0 );
	    $forms->{'sysinfo'}{'vbox2'}->add($widgets->{'label10'} );
	    $widgets->{'label10'}->show;
	    $forms->{'sysinfo'}{'label10'} = $widgets->{'label10'};
	    $forms->{'sysinfo'}{'label10'}->set_alignment(0.5, 0.5 );
	    $forms->{'sysinfo'}{'vbox2'}->set_child_packing($forms->{'sysinfo'}{'label10'}, 0, 0, 0, 'start' );
	    #
	    # Construct a GtkLabel 'label11'
	    $widgets->{'label11'} = new Gtk::Label(_('電路板版號：'));
	    $widgets->{'label11'}->set_justify('center' );
	    $widgets->{'label11'}->set_line_wrap(0 );
	    $forms->{'sysinfo'}{'vbox2'}->add($widgets->{'label11'} );
	    $widgets->{'label11'}->show;
	    $forms->{'sysinfo'}{'label11'} = $widgets->{'label11'};
	    $forms->{'sysinfo'}{'label11'}->set_alignment(0.5, 0.5 );
	    $forms->{'sysinfo'}{'vbox2'}->set_child_packing($forms->{'sysinfo'}{'label11'}, 0, 0, 0, 'start' );
	    #
	    # Construct a GtkLabel 'label12'
	    $widgets->{'label12'} = new Gtk::Label(_('目前使用者：'));
	    $widgets->{'label12'}->set_justify('center' );
	    $widgets->{'label12'}->set_line_wrap(0 );
	    $forms->{'sysinfo'}{'vbox2'}->add($widgets->{'label12'} );
	    $widgets->{'label12'}->show;
	    $forms->{'sysinfo'}{'label12'} = $widgets->{'label12'};
	    $forms->{'sysinfo'}{'label12'}->set_alignment(0.5, 0.5 );
	    $forms->{'sysinfo'}{'vbox2'}->set_child_packing($forms->{'sysinfo'}{'label12'}, 0, 0, 0, 'start' );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'sysinfo'}{'sysinfo'}->signal_connect('delete_event', "$class\::on_sysinfo_delete_event", '', 'sysinfo', "sysinfo-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'sysinfo'});
    $self->TOPLEVEL($self->FORM->{'sysinfo'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("sysinfo-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new









#==============================================================================
#=== This is the 'main' class                              
#==============================================================================
package main;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'main' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_about_activate' => undef,
    'on_date_activate' => undef,
    'on_exit_activate' => undef,
    'on_label_activate' => undef,
    'on_login_activate' => undef,
    'on_main_delete_event' => undef,
    'on_plu_activate' => undef,
    'on_print_format_activate' => undef,
    'on_string_activate' => undef,
    'on_system_activate' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"main-$instance"}) {$instance++;}


    #
    # Construct a GtkWindow 'main'
    $widgets->{'main'} = new Gtk::Window;
    $widgets->{'main'}->set_title(_('條碼秤') );
    $widgets->{'main'}->position('none' );
    $widgets->{'main'}->set_policy(0, 1, 0 );
    $widgets->{'main'}->set_modal(0 );
    $widgets->{'main'}->realize;
    $forms->{'main'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'main'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'main'}{'accelgroup'}->attach($widgets->{'main'} );
    $forms->{'main'}{'main'} = $widgets->{'main'};
	#
	# Construct a GtkVBox 'vbox1'
	$widgets->{'vbox1'} = new Gtk::VBox(0, 0 );
	$forms->{'main'}{'main'}->add($widgets->{'vbox1'} );
	$widgets->{'vbox1'}->show;
	$forms->{'main'}{'vbox1'} = $widgets->{'vbox1'};
	    #
	    # Construct a GtkHandleBox 'handlebox1'
	    $widgets->{'handlebox1'} = new Gtk::HandleBox;
	    $widgets->{'handlebox1'}->set_handle_position('left' );
	    $widgets->{'handlebox1'}->set_shadow_type('out' );
	    $widgets->{'handlebox1'}->set_snap_edge('top' );
	    $forms->{'main'}{'vbox1'}->add($widgets->{'handlebox1'} );
	    $widgets->{'handlebox1'}->show;
	    $forms->{'main'}{'handlebox1'} = $widgets->{'handlebox1'};
		#
		# Construct a GtkMenuBar 'menubar1'
		$widgets->{'menubar1'} = new Gtk::MenuBar;
		$widgets->{'menubar1'}->set_shadow_type('out' );
		$forms->{'main'}{'handlebox1'}->add($widgets->{'menubar1'} );
		$widgets->{'menubar1'}->show;
		$forms->{'main'}{'menubar1'} = $widgets->{'menubar1'};
		    #
		    # Construct a GtkMenuItem 'item1'
		    $widgets->{'item1'} = new Gtk::MenuItem(_('主要'));
		    $forms->{'main'}{'menubar1'}->append($widgets->{'item1'} );
		    $widgets->{'item1'}->show;
		    $forms->{'main'}{'item1'} = $widgets->{'item1'};
			#
			# Construct a GtkMenu 'item1_menu'
			$widgets->{'item1_menu'} = new Gtk::Menu;
			$forms->{'main'}{'item1'}->set_submenu($widgets->{'item1_menu'} );
			$forms->{'main'}{'item1_menu'} = $widgets->{'item1_menu'};
			    #
			    # Construct a GtkMenuItem 'login'
			    $widgets->{'login'} = new Gtk::MenuItem(_('登入'));
			    $forms->{'main'}{'item1_menu'}->append($widgets->{'login'} );
			    $widgets->{'login'}->show;
			    $forms->{'main'}{'login'} = $widgets->{'login'};
			    #
			    # Construct a GtkMenuItem 'exit'
			    $widgets->{'exit'} = new Gtk::MenuItem(_('離開'));
			    $forms->{'main'}{'item1_menu'}->append($widgets->{'exit'} );
			    $widgets->{'exit'}->show;
			    $forms->{'main'}{'exit'} = $widgets->{'exit'};
		    #
		    # Construct a GtkMenuItem 'item3'
		    $widgets->{'item3'} = new Gtk::MenuItem(_('功能'));
		    $forms->{'main'}{'menubar1'}->append($widgets->{'item3'} );
		    $widgets->{'item3'}->show;
		    $forms->{'main'}{'item3'} = $widgets->{'item3'};
			#
			# Construct a GtkMenu 'item3_menu'
			$widgets->{'item3_menu'} = new Gtk::Menu;
			$forms->{'main'}{'item3'}->set_submenu($widgets->{'item3_menu'} );
			$forms->{'main'}{'item3_menu'} = $widgets->{'item3_menu'};
			    #
			    # Construct a GtkMenuItem 'system'
			    $widgets->{'system'} = new Gtk::MenuItem(_('系統資訊'));
			    $forms->{'main'}{'item3_menu'}->append($widgets->{'system'} );
			    $widgets->{'system'}->show;
			    $forms->{'main'}{'system'} = $widgets->{'system'};
			    #
			    # Construct a GtkMenuItem 'plu'
			    $widgets->{'plu'} = new Gtk::MenuItem(_('plu 設   定'));
			    $forms->{'main'}{'item3_menu'}->append($widgets->{'plu'} );
			    $widgets->{'plu'}->show;
			    $forms->{'main'}{'plu'} = $widgets->{'plu'};
			    #
			    # Construct a GtkMenuItem 'string'
			    $widgets->{'string'} = new Gtk::MenuItem(_('字串設定'));
			    $forms->{'main'}{'item3_menu'}->append($widgets->{'string'} );
			    $widgets->{'string'}->show;
			    $forms->{'main'}{'string'} = $widgets->{'string'};
			    #
			    # Construct a GtkMenuItem 'label'
			    $widgets->{'label'} = new Gtk::MenuItem(_('標籤設定'));
			    $forms->{'main'}{'item3_menu'}->append($widgets->{'label'} );
			    $widgets->{'label'}->show;
			    $forms->{'main'}{'label'} = $widgets->{'label'};
			    #
			    # Construct a GtkMenuItem 'date'
			    $widgets->{'date'} = new Gtk::MenuItem(_('設定日期及時間'));
			    $forms->{'main'}{'item3_menu'}->append($widgets->{'date'} );
			    $widgets->{'date'}->show;
			    $forms->{'main'}{'date'} = $widgets->{'date'};
			    #
			    # Construct a GtkMenuItem 'print_format'
			    $widgets->{'print_format'} = new Gtk::MenuItem(_('列印格式設定'));
			    $forms->{'main'}{'item3_menu'}->append($widgets->{'print_format'} );
			    $widgets->{'print_format'}->show;
			    $forms->{'main'}{'print_format'} = $widgets->{'print_format'};
		    #
		    # Construct a GtkMenuItem 'item2'
		    $widgets->{'item2'} = new Gtk::MenuItem(_('幫助'));
		    $forms->{'main'}{'menubar1'}->append($widgets->{'item2'} );
		    $widgets->{'item2'}->show;
		    $forms->{'main'}{'item2'} = $widgets->{'item2'};
			#
			# Construct a GtkMenu 'item2_menu'
			$widgets->{'item2_menu'} = new Gtk::Menu;
			$forms->{'main'}{'item2'}->set_submenu($widgets->{'item2_menu'} );
			$forms->{'main'}{'item2_menu'} = $widgets->{'item2_menu'};
			    #
			    # Construct a GtkMenuItem 'about'
			    $widgets->{'about'} = new Gtk::MenuItem(_('關於'));
			    $forms->{'main'}{'item2_menu'}->append($widgets->{'about'} );
			    $widgets->{'about'}->show;
			    $forms->{'main'}{'about'} = $widgets->{'about'};
	    $forms->{'main'}{'vbox1'}->set_child_packing($forms->{'main'}{'handlebox1'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox1'
	    $widgets->{'hbox1'} = new Gtk::HBox(0, 0 );
	    $forms->{'main'}{'vbox1'}->add($widgets->{'hbox1'} );
	    $widgets->{'hbox1'}->show;
	    $forms->{'main'}{'hbox1'} = $widgets->{'hbox1'};
		#
		# Construct a GtkLabel 'label1'
		$widgets->{'label1'} = new Gtk::Label(_('磅秤遠端地址'));
		$widgets->{'label1'}->set_justify('center' );
		$widgets->{'label1'}->set_line_wrap(0 );
		$forms->{'main'}{'hbox1'}->add($widgets->{'label1'} );
		$widgets->{'label1'}->show;
		$forms->{'main'}{'label1'} = $widgets->{'label1'};
		$forms->{'main'}{'label1'}->set_alignment(0.5, 0.5 );
		$forms->{'main'}{'hbox1'}->set_child_packing($forms->{'main'}{'label1'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkEntry 'entry2'
		$widgets->{'entry2'} = new Gtk::Entry;
		$forms->{'main'}{'hbox1'}->add($widgets->{'entry2'} );
		$widgets->{'entry2'}->show;
		$forms->{'main'}{'entry2'} = $widgets->{'entry2'};
		$forms->{'main'}{'entry2'}->can_focus(1 );
		$forms->{'main'}{'entry2'}->set_text(_('') );
		$forms->{'main'}{'entry2'}->set_max_length(0 );
		$forms->{'main'}{'entry2'}->set_visibility(1 );
		$forms->{'main'}{'entry2'}->set_editable(1 );
		$forms->{'main'}{'hbox1'}->set_child_packing($forms->{'main'}{'entry2'}, 1, 1, 0, 'start' );
	    $forms->{'main'}{'vbox1'}->set_child_packing($forms->{'main'}{'hbox1'}, 1, 1, 0, 'start' );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'main'}{'main'}->signal_connect('delete_event', "$class\::on_main_delete_event", '', 'main', "main-$instance" );
    $forms->{'main'}{'login'}->signal_connect('activate', "$class\::on_login_activate", '', 'login', "main-$instance" );
    $forms->{'main'}{'exit'}->signal_connect('activate', "$class\::on_exit_activate", '', 'exit', "main-$instance" );
    $forms->{'main'}{'system'}->signal_connect('activate', "$class\::on_system_activate", '', 'system', "main-$instance" );
    $forms->{'main'}{'plu'}->signal_connect('activate', "$class\::on_plu_activate", '', 'plu', "main-$instance" );
    $forms->{'main'}{'string'}->signal_connect('activate', "$class\::on_string_activate", '', 'string', "main-$instance" );
    $forms->{'main'}{'label'}->signal_connect('activate', "$class\::on_label_activate", '', 'label', "main-$instance" );
    $forms->{'main'}{'date'}->signal_connect('activate', "$class\::on_date_activate", '', 'date', "main-$instance" );
    $forms->{'main'}{'print_format'}->signal_connect('activate', "$class\::on_print_format_activate", '', 'print_format', "main-$instance" );
    $forms->{'main'}{'about'}->signal_connect('activate', "$class\::on_about_activate", '', 'about', "main-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'main'});
    $self->TOPLEVEL($self->FORM->{'main'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("main-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new









#==============================================================================
#=== This is the 'fileselection1' class                              
#==============================================================================
package fileselection1;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'fileselection1' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_file_cancel_clicked' => undef,
    'on_file_ok_clicked' => undef,
    'on_fileselection1_delete_event' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"fileselection1-$instance"}) {$instance++;}


    #
    # Construct a GtkFileSelection 'fileselection1'
    $widgets->{'fileselection1'} = new Gtk::FileSelection(_('文字檔') );
    $widgets->{'fileselection1'}->show_fileop_buttons;
    $widgets->{'fileselection1'}->position('none' );
    $widgets->{'fileselection1'}->set_policy(0, 1, 0 );
    $widgets->{'fileselection1'}->set_modal(0 );
    $widgets->{'fileselection1'}->realize;
    $forms->{'fileselection1'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'fileselection1'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'fileselection1'}{'accelgroup'}->attach($widgets->{'fileselection1'} );
    $forms->{'fileselection1'}{'fileselection1'} = $widgets->{'fileselection1'};
    $forms->{'fileselection1'}{'fileselection1'}->border_width(10 );
	#
	# Construct a GtkButton 'file_ok'
	$widgets->{'file_ok'} = $forms->{'fileselection1'}{'fileselection1'}->ok_button;
	$widgets->{'file_ok'}->child->set_text(_('確定'));
	$widgets->{'file_ok'}->show;
	$forms->{'fileselection1'}{'file_ok'} = $widgets->{'file_ok'};
	$forms->{'fileselection1'}{'file_ok'}->can_default(1 );
	$forms->{'fileselection1'}{'file_ok'}->can_focus(1 );
	#
	# Construct a GtkButton 'file_cancel'
	$widgets->{'file_cancel'} = $forms->{'fileselection1'}{'fileselection1'}->cancel_button;
	$widgets->{'file_cancel'}->child->set_text(_('取消'));
	$widgets->{'file_cancel'}->show;
	$forms->{'fileselection1'}{'file_cancel'} = $widgets->{'file_cancel'};
	$forms->{'fileselection1'}{'file_cancel'}->can_default(1 );
	$forms->{'fileselection1'}{'file_cancel'}->can_focus(1 );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'fileselection1'}{'fileselection1'}->signal_connect('delete_event', "$class\::on_fileselection1_delete_event", '', 'fileselection1', "fileselection1-$instance" );
    $forms->{'fileselection1'}{'file_ok'}->signal_connect('clicked', "$class\::on_file_ok_clicked", '', 'file_ok', "fileselection1-$instance" );
    $forms->{'fileselection1'}{'file_cancel'}->signal_connect('clicked', "$class\::on_file_cancel_clicked", '', 'file_cancel', "fileselection1-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'fileselection1'});
    $self->TOPLEVEL($self->FORM->{'fileselection1'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("fileselection1-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new









#==============================================================================
#=== This is the 'about' class                              
#==============================================================================
package about;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'about' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_about_button_clicked' => undef,
    'on_about_delete_event' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"about-$instance"}) {$instance++;}


    #
    # Construct a GtkDialog 'about'
    $widgets->{'about'} = new Gtk::Dialog;
    $widgets->{'about'}->set_title(_('關於') );
    $widgets->{'about'}->position('none' );
    $widgets->{'about'}->set_policy(1, 1, 0 );
    $widgets->{'about'}->set_modal(0 );
    $widgets->{'about'}->realize;
    $forms->{'about'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'about'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'about'}{'accelgroup'}->attach($widgets->{'about'} );
    $forms->{'about'}{'about'} = $widgets->{'about'};
	#
	# Construct a GtkVBox 'dialog-vbox1'
	$widgets->{'dialog-vbox1'} = $forms->{'about'}{'about'}->vbox;
	$widgets->{'dialog-vbox1'}->show;
	$forms->{'about'}{'dialog-vbox1'} = $widgets->{'dialog-vbox1'};
	    #
	    # Construct a GtkHBox 'dialog-action_area1'
	    $widgets->{'dialog-action_area1'} = $forms->{'about'}{'about'}->action_area;
	    $widgets->{'dialog-action_area1'}->show;
	    $forms->{'about'}{'dialog-action_area1'} = $widgets->{'dialog-action_area1'};
	    $forms->{'about'}{'dialog-action_area1'}->border_width(10 );
		#
		# Construct a GtkButton 'about_button'
		$widgets->{'about_button'} = new Gtk::Button(_('了解'));
		$forms->{'about'}{'dialog-action_area1'}->add($widgets->{'about_button'} );
		$widgets->{'about_button'}->show;
		$forms->{'about'}{'about_button'} = $widgets->{'about_button'};
		$forms->{'about'}{'about_button'}->can_focus(1 );
		$forms->{'about'}{'dialog-action_area1'}->set_child_packing($forms->{'about'}{'about_button'}, 0, 0, 0, 'start' );
	    $forms->{'about'}{'dialog-vbox1'}->set_child_packing($forms->{'about'}{'dialog-action_area1'}, 0, 1, 0, 'end' );
	    #
	    # Construct a GtkLabel 'label4'
	    $widgets->{'label4'} = new Gtk::Label('');
	    $widgets->{'label4'}->parse_uline(_('
英展實業股份有限公司
盛遠實業股份有限公司
       

       
	 條碼計重秤



台北縣新店寶橋路235巷127號6樓

電話：(02)8919-1000
傳真：(02)8919-1177
網址：http://www.excell-tw.com
客服專線：0800-009-969
統一編號：12246205（英展）
		02082668（盛遠）') );
	    $widgets->{'label4'}->set_justify('center' );
	    $widgets->{'label4'}->set_line_wrap(0 );
	    $forms->{'about'}{'dialog-vbox1'}->add($widgets->{'label4'} );
	    $widgets->{'label4'}->show;
	    $forms->{'about'}{'label4'} = $widgets->{'label4'};
	    $forms->{'about'}{'label4'}->set_alignment(0.5, 0.5 );
	    $forms->{'about'}{'dialog-vbox1'}->set_child_packing($forms->{'about'}{'label4'}, 0, 0, 0, 'start' );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'about'}{'about'}->signal_connect('delete_event', "$class\::on_about_delete_event", '', 'about', "about-$instance" );
    $forms->{'about'}{'about_button'}->signal_connect('clicked', "$class\::on_about_button_clicked", '', 'about_button', "about-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'about'});
    $self->TOPLEVEL($self->FORM->{'about'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("about-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new









#==============================================================================
#=== This is the 'label' class                              
#==============================================================================
package label;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'label' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_default_clicked' => undef,
    'on_label_delete_event' => undef,
    'on_label_read_clicked' => undef,
    'on_label_write_clicked' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"label-$instance"}) {$instance++;}


    #
    # Construct a GtkWindow 'label'
    $widgets->{'label'} = new Gtk::Window;
    $widgets->{'label'}->set_title(_('標籤設定') );
    $widgets->{'label'}->position('none' );
    $widgets->{'label'}->set_policy(0, 1, 0 );
    $widgets->{'label'}->set_modal(0 );
    $widgets->{'label'}->realize;
    $forms->{'label'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'label'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'label'}{'accelgroup'}->attach($widgets->{'label'} );
    $forms->{'label'}{'label'} = $widgets->{'label'};
	#
	# Construct a GtkVBox 'vbox5'
	$widgets->{'vbox5'} = new Gtk::VBox(0, 0 );
	$forms->{'label'}{'label'}->add($widgets->{'vbox5'} );
	$widgets->{'vbox5'}->show;
	$forms->{'label'}{'vbox5'} = $widgets->{'vbox5'};
	    #
	    # Construct a GtkHBox 'hbox27'
	    $widgets->{'hbox27'} = new Gtk::HBox(0, 0 );
	    $forms->{'label'}{'vbox5'}->add($widgets->{'hbox27'} );
	    $widgets->{'hbox27'}->show;
	    $forms->{'label'}{'hbox27'} = $widgets->{'hbox27'};
		#
		# Construct a GtkButton 'label_read'
		$widgets->{'label_read'} = new Gtk::Button(_('讀取'));
		$forms->{'label'}{'hbox27'}->add($widgets->{'label_read'} );
		$widgets->{'label_read'}->show;
		$forms->{'label'}{'label_read'} = $widgets->{'label_read'};
		$forms->{'label'}{'label_read'}->can_focus(1 );
		$forms->{'label'}{'hbox27'}->set_child_packing($forms->{'label'}{'label_read'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'label_write'
		$widgets->{'label_write'} = new Gtk::Button(_('寫入'));
		$forms->{'label'}{'hbox27'}->add($widgets->{'label_write'} );
		$widgets->{'label_write'}->show;
		$forms->{'label'}{'label_write'} = $widgets->{'label_write'};
		$forms->{'label'}{'label_write'}->can_focus(1 );
		$forms->{'label'}{'hbox27'}->set_child_packing($forms->{'label'}{'label_write'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton23'
		$work->{'spinbutton23-adj'} = new Gtk::Adjustment(0, 0, 99, 1, 10, 10 );
		$widgets->{'spinbutton23'} = new Gtk::SpinButton($work->{'spinbutton23-adj'}, 1, 0 );
		$widgets->{'spinbutton23'}->set_update_policy('always' );
		$widgets->{'spinbutton23'}->set_wrap(0);
		$widgets->{'spinbutton23'}->set_snap_to_ticks(0 );
		$forms->{'label'}{'hbox27'}->add($widgets->{'spinbutton23'} );
		$widgets->{'spinbutton23'}->show;
		$forms->{'label'}{'spinbutton23'} = $widgets->{'spinbutton23'};
		$forms->{'label'}{'spinbutton23'}->can_focus(1 );
		$forms->{'label'}{'hbox27'}->set_child_packing($forms->{'label'}{'spinbutton23'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkButton 'default'
		$widgets->{'default'} = new Gtk::Button(_('預設參考值'));
		$forms->{'label'}{'hbox27'}->add($widgets->{'default'} );
		$widgets->{'default'}->show;
		$forms->{'label'}{'default'} = $widgets->{'default'};
		$forms->{'label'}{'default'}->can_focus(1 );
		$forms->{'label'}{'hbox27'}->set_child_packing($forms->{'label'}{'default'}, 0, 0, 0, 'start' );
	    $forms->{'label'}{'vbox5'}->set_child_packing($forms->{'label'}{'hbox27'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox29'
	    $widgets->{'hbox29'} = new Gtk::HBox(0, 0 );
	    $forms->{'label'}{'vbox5'}->add($widgets->{'hbox29'} );
	    $widgets->{'hbox29'}->show;
	    $forms->{'label'}{'hbox29'} = $widgets->{'hbox29'};
		#
		# Construct a GtkLabel 'label33'
		$widgets->{'label33'} = new Gtk::Label(_('標籤形式'));
		$widgets->{'label33'}->set_justify('center' );
		$widgets->{'label33'}->set_line_wrap(0 );
		$forms->{'label'}{'hbox29'}->add($widgets->{'label33'} );
		$widgets->{'label33'}->show;
		$forms->{'label'}{'label33'} = $widgets->{'label33'};
		$forms->{'label'}{'label33'}->set_alignment(0.5, 0.5 );
		$forms->{'label'}{'hbox29'}->set_child_packing($forms->{'label'}{'label33'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkCombo 'combo7'
		$widgets->{'combo7'} = new Gtk::Combo;
		$widgets->{'combo7'}->set_case_sensitive(0 );
		$widgets->{'combo7'}->set_use_arrows(1 );
		$widgets->{'combo7'}->set_use_arrows_always(0 );
		$widgets->{'combo7'}->set_popdown_strings( '0．連續紙', '1．貼標' );
		$forms->{'label'}{'hbox29'}->add($widgets->{'combo7'} );
		$widgets->{'combo7'}->show;
		$forms->{'label'}{'combo7'} = $widgets->{'combo7'};
		    #
		    # Construct a GtkEntry 'combo-entry7'
		    $widgets->{'combo-entry7'} = $forms->{'label'}{'combo7'}->entry;
		    $widgets->{'combo-entry7'}->show;
		    $forms->{'label'}{'combo-entry7'} = $widgets->{'combo-entry7'};
		    $forms->{'label'}{'combo-entry7'}->can_focus(1 );
		    $forms->{'label'}{'combo-entry7'}->set_text(_('0．連續紙') );
		    $forms->{'label'}{'combo-entry7'}->set_max_length(0 );
		    $forms->{'label'}{'combo-entry7'}->set_visibility(1 );
		    $forms->{'label'}{'combo-entry7'}->set_editable(0 );
		$forms->{'label'}{'hbox29'}->set_child_packing($forms->{'label'}{'combo7'}, 1, 1, 0, 'start' );
	    $forms->{'label'}{'vbox5'}->set_child_packing($forms->{'label'}{'hbox29'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox76'
	    $widgets->{'hbox76'} = new Gtk::HBox(0, 0 );
	    $forms->{'label'}{'vbox5'}->add($widgets->{'hbox76'} );
	    $widgets->{'hbox76'}->show;
	    $forms->{'label'}{'hbox76'} = $widgets->{'hbox76'};
		#
		# Construct a GtkLabel 'label34'
		$widgets->{'label34'} = new Gtk::Label(_('寬：'));
		$widgets->{'label34'}->set_justify('center' );
		$widgets->{'label34'}->set_line_wrap(0 );
		$forms->{'label'}{'hbox76'}->add($widgets->{'label34'} );
		$widgets->{'label34'}->show;
		$forms->{'label'}{'label34'} = $widgets->{'label34'};
		$forms->{'label'}{'label34'}->set_alignment(0.5, 0.5 );
		$forms->{'label'}{'hbox76'}->set_child_packing($forms->{'label'}{'label34'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton63'
		$work->{'spinbutton63-adj'} = new Gtk::Adjustment(600, 600, 999, 1, 10, 10 );
		$widgets->{'spinbutton63'} = new Gtk::SpinButton($work->{'spinbutton63-adj'}, 1, 0 );
		$widgets->{'spinbutton63'}->set_update_policy('always' );
		$widgets->{'spinbutton63'}->set_numeric(1);
		$widgets->{'spinbutton63'}->set_wrap(0);
		$widgets->{'spinbutton63'}->set_snap_to_ticks(0 );
		$forms->{'label'}{'hbox76'}->add($widgets->{'spinbutton63'} );
		$widgets->{'spinbutton63'}->show;
		$forms->{'label'}{'spinbutton63'} = $widgets->{'spinbutton63'};
		$forms->{'label'}{'spinbutton63'}->can_focus(1 );
		$forms->{'label'}{'hbox76'}->set_child_packing($forms->{'label'}{'spinbutton63'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkLabel 'label35'
		$widgets->{'label35'} = new Gtk::Label(_('長：'));
		$widgets->{'label35'}->set_justify('center' );
		$widgets->{'label35'}->set_line_wrap(0 );
		$forms->{'label'}{'hbox76'}->add($widgets->{'label35'} );
		$widgets->{'label35'}->show;
		$forms->{'label'}{'label35'} = $widgets->{'label35'};
		$forms->{'label'}{'label35'}->set_alignment(0.5, 0.5 );
		$forms->{'label'}{'hbox76'}->set_child_packing($forms->{'label'}{'label35'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton64'
		$work->{'spinbutton64-adj'} = new Gtk::Adjustment(1, 400, 999, 1, 10, 10 );
		$widgets->{'spinbutton64'} = new Gtk::SpinButton($work->{'spinbutton64-adj'}, 1, 0 );
		$widgets->{'spinbutton64'}->set_update_policy('always' );
		$widgets->{'spinbutton64'}->set_numeric(1);
		$widgets->{'spinbutton64'}->set_wrap(0);
		$widgets->{'spinbutton64'}->set_snap_to_ticks(0 );
		$forms->{'label'}{'hbox76'}->add($widgets->{'spinbutton64'} );
		$widgets->{'spinbutton64'}->show;
		$forms->{'label'}{'spinbutton64'} = $widgets->{'spinbutton64'};
		$forms->{'label'}{'spinbutton64'}->can_focus(1 );
		$forms->{'label'}{'hbox76'}->set_child_packing($forms->{'label'}{'spinbutton64'}, 1, 1, 0, 'start' );
	    $forms->{'label'}{'vbox5'}->set_child_packing($forms->{'label'}{'hbox76'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox77'
	    $widgets->{'hbox77'} = new Gtk::HBox(0, 0 );
	    $forms->{'label'}{'vbox5'}->add($widgets->{'hbox77'} );
	    $widgets->{'hbox77'}->show;
	    $forms->{'label'}{'hbox77'} = $widgets->{'hbox77'};
		#
		# Construct a GtkLabel 'label37'
		$widgets->{'label37'} = new Gtk::Label(_('停留位置：'));
		$widgets->{'label37'}->set_justify('center' );
		$widgets->{'label37'}->set_line_wrap(0 );
		$forms->{'label'}{'hbox77'}->add($widgets->{'label37'} );
		$widgets->{'label37'}->show;
		$forms->{'label'}{'label37'} = $widgets->{'label37'};
		$forms->{'label'}{'label37'}->set_alignment(0.5, 0.5 );
		$forms->{'label'}{'hbox77'}->set_child_packing($forms->{'label'}{'label37'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton66'
		$work->{'spinbutton66-adj'} = new Gtk::Adjustment(1, 0, 100, 1, 10, 10 );
		$widgets->{'spinbutton66'} = new Gtk::SpinButton($work->{'spinbutton66-adj'}, 1, 0 );
		$widgets->{'spinbutton66'}->set_update_policy('always' );
		$widgets->{'spinbutton66'}->set_numeric(1);
		$widgets->{'spinbutton66'}->set_wrap(0);
		$widgets->{'spinbutton66'}->set_snap_to_ticks(0 );
		$forms->{'label'}{'hbox77'}->add($widgets->{'spinbutton66'} );
		$widgets->{'spinbutton66'}->show;
		$forms->{'label'}{'spinbutton66'} = $widgets->{'spinbutton66'};
		$forms->{'label'}{'spinbutton66'}->can_focus(1 );
		$forms->{'label'}{'hbox77'}->set_child_packing($forms->{'label'}{'spinbutton66'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkLabel 'label36'
		$widgets->{'label36'} = new Gtk::Label(_('間隙：'));
		$widgets->{'label36'}->set_justify('center' );
		$widgets->{'label36'}->set_line_wrap(0 );
		$forms->{'label'}{'hbox77'}->add($widgets->{'label36'} );
		$widgets->{'label36'}->show;
		$forms->{'label'}{'label36'} = $widgets->{'label36'};
		$forms->{'label'}{'label36'}->set_alignment(0.5, 0.5 );
		$forms->{'label'}{'hbox77'}->set_child_packing($forms->{'label'}{'label36'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton65'
		$work->{'spinbutton65-adj'} = new Gtk::Adjustment(1, 0, 100, 1, 10, 10 );
		$widgets->{'spinbutton65'} = new Gtk::SpinButton($work->{'spinbutton65-adj'}, 1, 0 );
		$widgets->{'spinbutton65'}->set_update_policy('always' );
		$widgets->{'spinbutton65'}->set_numeric(1);
		$widgets->{'spinbutton65'}->set_wrap(0);
		$widgets->{'spinbutton65'}->set_snap_to_ticks(0 );
		$forms->{'label'}{'hbox77'}->add($widgets->{'spinbutton65'} );
		$widgets->{'spinbutton65'}->show;
		$forms->{'label'}{'spinbutton65'} = $widgets->{'spinbutton65'};
		$forms->{'label'}{'spinbutton65'}->can_focus(1 );
		$forms->{'label'}{'hbox77'}->set_child_packing($forms->{'label'}{'spinbutton65'}, 1, 1, 0, 'start' );
	    $forms->{'label'}{'vbox5'}->set_child_packing($forms->{'label'}{'hbox77'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox33'
	    $widgets->{'hbox33'} = new Gtk::HBox(0, 0 );
	    $forms->{'label'}{'vbox5'}->add($widgets->{'hbox33'} );
	    $widgets->{'hbox33'}->show;
	    $forms->{'label'}{'hbox33'} = $widgets->{'hbox33'};
		#
		# Construct a GtkLabel 'label38'
		$widgets->{'label38'} = new Gtk::Label(_('誤差'));
		$widgets->{'label38'}->set_justify('center' );
		$widgets->{'label38'}->set_line_wrap(0 );
		$forms->{'label'}{'hbox33'}->add($widgets->{'label38'} );
		$widgets->{'label38'}->show;
		$forms->{'label'}{'label38'} = $widgets->{'label38'};
		$forms->{'label'}{'label38'}->set_alignment(0.5, 0.5 );
		$forms->{'label'}{'hbox33'}->set_child_packing($forms->{'label'}{'label38'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'spinbutton67'
		$work->{'spinbutton67-adj'} = new Gtk::Adjustment(1, 0, 100, 1, 10, 10 );
		$widgets->{'spinbutton67'} = new Gtk::SpinButton($work->{'spinbutton67-adj'}, 1, 0 );
		$widgets->{'spinbutton67'}->set_update_policy('always' );
		$widgets->{'spinbutton67'}->set_numeric(1);
		$widgets->{'spinbutton67'}->set_wrap(0);
		$widgets->{'spinbutton67'}->set_snap_to_ticks(0 );
		$forms->{'label'}{'hbox33'}->add($widgets->{'spinbutton67'} );
		$widgets->{'spinbutton67'}->show;
		$forms->{'label'}{'spinbutton67'} = $widgets->{'spinbutton67'};
		$forms->{'label'}{'spinbutton67'}->can_focus(1 );
		$forms->{'label'}{'hbox33'}->set_child_packing($forms->{'label'}{'spinbutton67'}, 1, 1, 0, 'start' );
	    $forms->{'label'}{'vbox5'}->set_child_packing($forms->{'label'}{'hbox33'}, 1, 1, 0, 'start' );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'label'}{'label'}->signal_connect('delete_event', "$class\::on_label_delete_event", '', 'label', "label-$instance" );
    $forms->{'label'}{'label_read'}->signal_connect('clicked', "$class\::on_label_read_clicked", '', 'label_read', "label-$instance" );
    $forms->{'label'}{'label_write'}->signal_connect('clicked', "$class\::on_label_write_clicked", '', 'label_write', "label-$instance" );
    $forms->{'label'}{'default'}->signal_connect('clicked', "$class\::on_default_clicked", '', 'default', "label-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'label'});
    $self->TOPLEVEL($self->FORM->{'label'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("label-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new









#==============================================================================
#=== This is the 'print_format' class                              
#==============================================================================
package print_format;
require 5.000; use strict 'vars', 'refs', 'subs';
# UI class 'print_format' (version 0.01)
# 
# Copyright (c) Date 週五 11月  1 15:18:17 CST 2002
# Author  <allways@allways.taipei.excell.com.tw>
#
# Unspecified copying policy, please contact the author
#  <allways@allways.taipei.excell.com.tw>
#
#==============================================================================
# This perl source file was automatically generated by 
# Glade::PerlGenerate version 0.60 - Fri May  3 03:56:25 BST 2002
# Copyright (c) Author Dermot Musgrove <dermot.musgrove@virgin.net>
#
# from Glade file /home/allways/prs_ext/print_scale/print_scale.glade
# 週一 12月 30 13:43:25 CST 2002
#==============================================================================

BEGIN {
    # Run-time utilities and vars
    use Glade::PerlRun; 
    # Existing signal handler modules
    # We need the Gnome bindings as well
    use Gnome;
    use vars qw( 
                 @ISA
                 %fields
                 %stubs
                 $PACKAGE
                 $VERSION
                 $AUTHOR
                 $DATE
                 $AUTOLOAD
                 $permitted_fields
             );
    # Tell interpreter who we are inheriting from
    @ISA     = qw( Glade::PerlRun );
    $PACKAGE = 'print_scale';
    $VERSION = '0.01';
    $AUTHOR  = ' <allways@allways.taipei.excell.com.tw>';
    $DATE    = '週五 11月  1 15:18:17 CST 2002';
    $permitted_fields = '_permitted_fields';             
} # End of sub BEGIN

    $Glade::PerlRun::pixmaps_directory ||= '/home/allways/prs_ext/print_scale/pixmaps';

%fields = (
    # These are the data fields that you can set/get using the dynamic
    # calls provided by AUTOLOAD (and their initial values).
    # eg $class->FORM($new_value);      sets the value of FORM
    #    $current_value = $class->FORM; gets the current value of FORM
    TOPLEVEL => undef,
    FORM     => undef,
    PACKAGE  => 'print_scale',
    VERSION  => '0.01',
    AUTHOR   => ' <allways@allways.taipei.excell.com.tw>',
    DATE     => '週五 11月  1 15:18:17 CST 2002',
    INSTANCE => 'main',
    CLASS_HIERARCHY => undef,
    WIDGET_HIERARCHY => undef,
);

%stubs = (
    # These are signal handlers that will cause a message_box to be
    # displayed by AUTOLOAD if there is not already a sub of that name
    # in any module specified in 'use_modules'.

    'on_browse_clicked' => undef,
    'on_default_clicked' => undef,
    'on_drawingarea2_expose_event' => undef,
    'on_formatwritetofile_clicked' => undef,
    'on_formatwritetoscale_clicked' => undef,
    'on_item_label_toggled' => undef,
    'on_label_suite_changed' => undef,
    'on_print_format_delete_event' => undef,
    'on_print_format_read_clicked' => undef,
    'on_print_format_write_clicked' => undef,
    'on_reportaccount_toggled' => undef,
    'on_reportbody_toggled' => undef,
    'on_reporthead_toggled' => undef,
    'on_transaccount_toggled' => undef,
    'on_transbody_toggled' => undef,
    'on_transhead_toggled' => undef,
    'on_type_bar_toggled' => undef,
    'on_type_figure_toggled' => undef,
    'on_type_match_string_toggled' => undef,
    'on_type_string_toggled' => undef,
);

sub AUTOLOAD {
    my $self = shift;
    my $type = ref($self)
        or die "$self is not an object so we cannot '$AUTOLOAD'\n",
            "We were called from ".join(", ", caller)."\n\n";
    my $name = $AUTOLOAD;
    $name =~ s/.*://;       # strip fully-qualified portion

    if (exists $self->{$permitted_fields}{$name} ) {
        # This allows dynamic data methods - see hash fields above
        # eg $class->UI('new_value');
        # or $current_value = $class->UI;
        if (@_) {
            return $self->{$name} = shift;
        } else {
            return $self->{$name};
        }

    } elsif (exists $stubs{$name} ) {
        # This shows dynamic signal handler stub message_box - see hash stubs above
        __PACKAGE__->show_skeleton_message(
            $AUTOLOAD."\n ("._("AUTOLOADED by")." ".__PACKAGE__.")", 
            [$self, @_], 
            __PACKAGE__, 
            'Logo.xpm');
        
    } else {
        die "Can't access method `$name' in class $type\n".
            "We were called from ".join(", ", caller)."\n\n";

    }
} # End of sub AUTOLOAD

sub run {
    my ($class) = @_;
    $class->load_translations('print_scale');
    # You can use the line below to load a test .mo file before it is installed in 
    # the normal place (eg /usr/local/share/locale/zh_TW.Big5/LC_MESSAGES/print_scale.mo)
#    $class->load_translations('print_scale', 'test', undef, '/home/allways/prs_ext/print_scale/ppo/print_scale.mo');
    Gnome->init('print_scale', '0.01');
    my $window = $class->new;
    $window->TOPLEVEL->show;
    Gtk->main;
} # End of sub run

sub DESTROY {
    # This sub will be called on object destruction
} # End of sub DESTROY

sub new {
#
# This sub will create the UI window
    my $that  = shift;
    my $class = ref($that) || $that;
    my $self  = {
        $permitted_fields   => \%fields, %fields,
        _permitted_stubs    => \%stubs,  %stubs,
    };
    my ($forms, $widgets, $data, $work);
    my $instance = 1;
    # Get a unique toplevel widget structure
    while (defined $__PACKAGE__::all_forms->{"print_format-$instance"}) {$instance++;}


    #
    # Construct a GtkWindow 'print_format'
    $widgets->{'print_format'} = new Gtk::Window;
    $widgets->{'print_format'}->set_title(_('列印格式設定') );
    $widgets->{'print_format'}->position('none' );
    $widgets->{'print_format'}->set_policy(0, 1, 0 );
    $widgets->{'print_format'}->set_modal(0 );
    $widgets->{'print_format'}->realize;
    $forms->{'print_format'}{'tooltips'} = new Gtk::Tooltips;
    $forms->{'print_format'}{'accelgroup'} = new Gtk::AccelGroup;
    $forms->{'print_format'}{'accelgroup'}->attach($widgets->{'print_format'} );
    $forms->{'print_format'}{'print_format'} = $widgets->{'print_format'};
	#
	# Construct a GtkVBox 'vbox7'
	$widgets->{'vbox7'} = new Gtk::VBox(0, 0 );
	$forms->{'print_format'}{'print_format'}->add($widgets->{'vbox7'} );
	$widgets->{'vbox7'}->show;
	$forms->{'print_format'}{'vbox7'} = $widgets->{'vbox7'};
	    #
	    # Construct a GtkHBox 'hbox41'
	    $widgets->{'hbox41'} = new Gtk::HBox(0, 0 );
	    $forms->{'print_format'}{'vbox7'}->add($widgets->{'hbox41'} );
	    $widgets->{'hbox41'}->show;
	    $forms->{'print_format'}{'hbox41'} = $widgets->{'hbox41'};
		#
		# Construct a GtkButton 'print_format_read'
		$widgets->{'print_format_read'} = new Gtk::Button(_('讀取'));
		$forms->{'print_format'}{'hbox41'}->add($widgets->{'print_format_read'} );
		$widgets->{'print_format_read'}->show;
		$forms->{'print_format'}{'print_format_read'} = $widgets->{'print_format_read'};
		$forms->{'print_format'}{'print_format_read'}->can_focus(1 );
		$forms->{'print_format'}{'hbox41'}->set_child_packing($forms->{'print_format'}{'print_format_read'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'print_format_write'
		$widgets->{'print_format_write'} = new Gtk::Button(_('寫入'));
		$forms->{'print_format'}{'hbox41'}->add($widgets->{'print_format_write'} );
		$widgets->{'print_format_write'}->show;
		$forms->{'print_format'}{'print_format_write'} = $widgets->{'print_format_write'};
		$forms->{'print_format'}{'print_format_write'}->can_focus(1 );
		$forms->{'print_format'}{'hbox41'}->set_child_packing($forms->{'print_format'}{'print_format_write'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkLabel 'label71'
		$widgets->{'label71'} = new Gtk::Label(_('列印層'));
		$widgets->{'label71'}->set_justify('center' );
		$widgets->{'label71'}->set_line_wrap(0 );
		$forms->{'print_format'}{'hbox41'}->add($widgets->{'label71'} );
		$widgets->{'label71'}->show;
		$forms->{'print_format'}{'label71'} = $widgets->{'label71'};
		$forms->{'print_format'}{'label71'}->set_alignment(0.5, 0.5 );
		$forms->{'print_format'}{'hbox41'}->set_child_packing($forms->{'print_format'}{'label71'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkSpinButton 'suite'
		$work->{'suite-adj'} = new Gtk::Adjustment(0, 0, 99, 1, 10, 10 );
		$widgets->{'suite'} = new Gtk::SpinButton($work->{'suite-adj'}, 1, 0 );
		$widgets->{'suite'}->set_update_policy('always' );
		$widgets->{'suite'}->set_numeric(1);
		$widgets->{'suite'}->set_wrap(0);
		$widgets->{'suite'}->set_snap_to_ticks(0 );
		$forms->{'print_format'}{'hbox41'}->add($widgets->{'suite'} );
		$widgets->{'suite'}->show;
		$forms->{'print_format'}{'suite'} = $widgets->{'suite'};
		$forms->{'print_format'}{'suite'}->can_focus(1 );
		$forms->{'print_format'}{'hbox41'}->set_child_packing($forms->{'print_format'}{'suite'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkButton 'default'
		$widgets->{'default'} = new Gtk::Button(_('預設參考值'));
		$forms->{'print_format'}{'hbox41'}->add($widgets->{'default'} );
		$widgets->{'default'}->show;
		$forms->{'print_format'}{'default'} = $widgets->{'default'};
		$forms->{'print_format'}{'default'}->can_focus(1 );
		$forms->{'print_format'}{'hbox41'}->set_child_packing($forms->{'print_format'}{'default'}, 0, 0, 0, 'start' );
	    $forms->{'print_format'}{'vbox7'}->set_child_packing($forms->{'print_format'}{'hbox41'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox92'
	    $widgets->{'hbox92'} = new Gtk::HBox(0, 0 );
	    $forms->{'print_format'}{'vbox7'}->add($widgets->{'hbox92'} );
	    $widgets->{'hbox92'}->show;
	    $forms->{'print_format'}{'hbox92'} = $widgets->{'hbox92'};
		#
		# Construct a GtkButton 'formatwritetofile'
		$widgets->{'formatwritetofile'} = new Gtk::Button(_('寫入檔案'));
		$forms->{'print_format'}{'hbox92'}->add($widgets->{'formatwritetofile'} );
		$widgets->{'formatwritetofile'}->show;
		$forms->{'print_format'}{'formatwritetofile'} = $widgets->{'formatwritetofile'};
		$forms->{'print_format'}{'formatwritetofile'}->set_sensitive(0);
		$forms->{'print_format'}{'formatwritetofile'}->can_focus(1 );
		$forms->{'print_format'}{'hbox92'}->set_child_packing($forms->{'print_format'}{'formatwritetofile'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkButton 'formatwritetoscale'
		$widgets->{'formatwritetoscale'} = new Gtk::Button(_('寫入磅秤'));
		$forms->{'print_format'}{'hbox92'}->add($widgets->{'formatwritetoscale'} );
		$widgets->{'formatwritetoscale'}->show;
		$forms->{'print_format'}{'formatwritetoscale'} = $widgets->{'formatwritetoscale'};
		$forms->{'print_format'}{'formatwritetoscale'}->can_focus(1 );
		$forms->{'print_format'}{'hbox92'}->set_child_packing($forms->{'print_format'}{'formatwritetoscale'}, 0, 0, 0, 'start' );
		#
		# Construct a GtkHBox 'hbox93'
		$widgets->{'hbox93'} = new Gtk::HBox(0, 0 );
		$forms->{'print_format'}{'hbox92'}->add($widgets->{'hbox93'} );
		$widgets->{'hbox93'}->show;
		$forms->{'print_format'}{'hbox93'} = $widgets->{'hbox93'};
		    #
		    # Construct a GtkCombo 'combo9'
		    $widgets->{'combo9'} = new Gtk::Combo;
		    $widgets->{'combo9'}->set_case_sensitive(0 );
		    $widgets->{'combo9'}->set_use_arrows(1 );
		    $widgets->{'combo9'}->set_use_arrows_always(0 );
		    $widgets->{'combo9'}->set_popdown_strings( '' );
		    $forms->{'print_format'}{'hbox93'}->add($widgets->{'combo9'} );
		    $widgets->{'combo9'}->show;
		    $forms->{'print_format'}{'combo9'} = $widgets->{'combo9'};
			#
			# Construct a GtkEntry 'combo-entry10'
			$widgets->{'combo-entry10'} = $forms->{'print_format'}{'combo9'}->entry;
			$widgets->{'combo-entry10'}->show;
			$forms->{'print_format'}{'combo-entry10'} = $widgets->{'combo-entry10'};
			$forms->{'print_format'}{'combo-entry10'}->can_focus(1 );
			$forms->{'print_format'}{'combo-entry10'}->set_text(_('') );
			$forms->{'print_format'}{'combo-entry10'}->set_max_length(0 );
			$forms->{'print_format'}{'combo-entry10'}->set_visibility(1 );
			$forms->{'print_format'}{'combo-entry10'}->set_editable(1 );
		    $forms->{'print_format'}{'hbox93'}->set_child_packing($forms->{'print_format'}{'combo9'}, 1, 1, 0, 'start' );
		    #
		    # Construct a GtkButton 'browse'
		    $widgets->{'browse'} = new Gtk::Button(_('瀏覽'));
		    $forms->{'print_format'}{'hbox93'}->add($widgets->{'browse'} );
		    $widgets->{'browse'}->show;
		    $forms->{'print_format'}{'browse'} = $widgets->{'browse'};
		    $forms->{'print_format'}{'browse'}->can_focus(1 );
		    $forms->{'print_format'}{'hbox93'}->set_child_packing($forms->{'print_format'}{'browse'}, 0, 0, 0, 'start' );
		$forms->{'print_format'}{'hbox92'}->set_child_packing($forms->{'print_format'}{'hbox93'}, 1, 1, 0, 'start' );
	    $forms->{'print_format'}{'vbox7'}->set_child_packing($forms->{'print_format'}{'hbox92'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkHBox 'hbox88'
	    $widgets->{'hbox88'} = new Gtk::HBox(0, 0 );
	    $forms->{'print_format'}{'vbox7'}->add($widgets->{'hbox88'} );
	    $widgets->{'hbox88'}->show;
	    $forms->{'print_format'}{'hbox88'} = $widgets->{'hbox88'};
		#
		# Construct a GtkFrame 'frame7'
		$widgets->{'frame7'} = new Gtk::Frame(_('列印格式選項'));
		$widgets->{'frame7'}->set_label_align(0, 0 );
		$widgets->{'frame7'}->set_shadow_type('etched_in' );
		$forms->{'print_format'}{'hbox88'}->add($widgets->{'frame7'} );
		$widgets->{'frame7'}->show;
		$forms->{'print_format'}{'frame7'} = $widgets->{'frame7'};
		    #
		    # Construct a GtkVBox 'vbox14'
		    $widgets->{'vbox14'} = new Gtk::VBox(0, 0 );
		    $forms->{'print_format'}{'frame7'}->add($widgets->{'vbox14'} );
		    $widgets->{'vbox14'}->show;
		    $forms->{'print_format'}{'vbox14'} = $widgets->{'vbox14'};
			#
			# Construct a GtkHBox 'hbox72'
			$widgets->{'hbox72'} = new Gtk::HBox(0, 0 );
			$forms->{'print_format'}{'vbox14'}->add($widgets->{'hbox72'} );
			$widgets->{'hbox72'}->show;
			$forms->{'print_format'}{'hbox72'} = $widgets->{'hbox72'};
			    #
			    # Construct a GtkRadioButton 'item_label'
			    $widgets->{'item_label'} = new Gtk::RadioButton(_('標籤') );
			    $forms->{'print_format'}{'rb-group-1'} = $widgets->{'item_label'};
			    $forms->{'print_format'}{'hbox72'}->add($widgets->{'item_label'} );
			    $widgets->{'item_label'}->show;
			    $forms->{'print_format'}{'item_label'} = $widgets->{'item_label'};
			    $forms->{'print_format'}{'item_label'}->can_focus(1 );
			    $forms->{'print_format'}{'item_label'}->set_mode(1 );
			    $forms->{'print_format'}{'item_label'}->set_state(0 );
			    $forms->{'print_format'}{'hbox72'}->set_child_packing($forms->{'print_format'}{'item_label'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkSpinButton 'label_suite'
			    $work->{'label_suite-adj'} = new Gtk::Adjustment(1, 1, 6, 1, 10, 10 );
			    $widgets->{'label_suite'} = new Gtk::SpinButton($work->{'label_suite-adj'}, 1, 0 );
			    $widgets->{'label_suite'}->set_update_policy('always' );
			    $widgets->{'label_suite'}->set_wrap(0);
			    $widgets->{'label_suite'}->set_snap_to_ticks(0 );
			    $forms->{'print_format'}{'hbox72'}->add($widgets->{'label_suite'} );
			    $widgets->{'label_suite'}->show;
			    $forms->{'print_format'}{'label_suite'} = $widgets->{'label_suite'};
			    $forms->{'print_format'}{'label_suite'}->can_focus(1 );
			    $forms->{'print_format'}{'hbox72'}->set_child_packing($forms->{'print_format'}{'label_suite'}, 1, 1, 0, 'start' );
			    #
			    # Construct a GtkRadioButton 'reporthead'
			    $widgets->{'reporthead'} = new Gtk::RadioButton(_('報表抬頭'), $forms->{'print_format'}{'rb-group-1'} );
			    $forms->{'print_format'}{'hbox72'}->add($widgets->{'reporthead'} );
			    $widgets->{'reporthead'}->show;
			    $forms->{'print_format'}{'reporthead'} = $widgets->{'reporthead'};
			    $forms->{'print_format'}{'reporthead'}->can_focus(1 );
			    $forms->{'print_format'}{'reporthead'}->set_mode(1 );
			    $forms->{'print_format'}{'reporthead'}->set_state(0 );
			    $forms->{'print_format'}{'hbox72'}->set_child_packing($forms->{'print_format'}{'reporthead'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkRadioButton 'reportbody'
			    $widgets->{'reportbody'} = new Gtk::RadioButton(_('報表本體'), $forms->{'print_format'}{'rb-group-1'} );
			    $forms->{'print_format'}{'hbox72'}->add($widgets->{'reportbody'} );
			    $widgets->{'reportbody'}->show;
			    $forms->{'print_format'}{'reportbody'} = $widgets->{'reportbody'};
			    $forms->{'print_format'}{'reportbody'}->can_focus(1 );
			    $forms->{'print_format'}{'reportbody'}->set_mode(1 );
			    $forms->{'print_format'}{'reportbody'}->set_state(0 );
			    $forms->{'print_format'}{'hbox72'}->set_child_packing($forms->{'print_format'}{'reportbody'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkRadioButton 'reportaccount'
			    $widgets->{'reportaccount'} = new Gtk::RadioButton(_('報表結算'), $forms->{'print_format'}{'rb-group-1'} );
			    $forms->{'print_format'}{'hbox72'}->add($widgets->{'reportaccount'} );
			    $widgets->{'reportaccount'}->show;
			    $forms->{'print_format'}{'reportaccount'} = $widgets->{'reportaccount'};
			    $forms->{'print_format'}{'reportaccount'}->can_focus(1 );
			    $forms->{'print_format'}{'reportaccount'}->set_mode(1 );
			    $forms->{'print_format'}{'reportaccount'}->set_state(0 );
			    $forms->{'print_format'}{'hbox72'}->set_child_packing($forms->{'print_format'}{'reportaccount'}, 0, 0, 0, 'start' );
			$forms->{'print_format'}{'vbox14'}->set_child_packing($forms->{'print_format'}{'hbox72'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkHBox 'hbox73'
			$widgets->{'hbox73'} = new Gtk::HBox(0, 0 );
			$forms->{'print_format'}{'vbox14'}->add($widgets->{'hbox73'} );
			$widgets->{'hbox73'}->show;
			$forms->{'print_format'}{'hbox73'} = $widgets->{'hbox73'};
			    #
			    # Construct a GtkRadioButton 'transhead'
			    $widgets->{'transhead'} = new Gtk::RadioButton(_('交易收據抬頭'), $forms->{'print_format'}{'rb-group-1'} );
			    $forms->{'print_format'}{'hbox73'}->add($widgets->{'transhead'} );
			    $widgets->{'transhead'}->show;
			    $forms->{'print_format'}{'transhead'} = $widgets->{'transhead'};
			    $forms->{'print_format'}{'transhead'}->can_focus(1 );
			    $forms->{'print_format'}{'transhead'}->set_mode(1 );
			    $forms->{'print_format'}{'transhead'}->set_state(0 );
			    $forms->{'print_format'}{'hbox73'}->set_child_packing($forms->{'print_format'}{'transhead'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkRadioButton 'transbody'
			    $widgets->{'transbody'} = new Gtk::RadioButton(_('交易收據本體'), $forms->{'print_format'}{'rb-group-1'} );
			    $forms->{'print_format'}{'hbox73'}->add($widgets->{'transbody'} );
			    $widgets->{'transbody'}->show;
			    $forms->{'print_format'}{'transbody'} = $widgets->{'transbody'};
			    $forms->{'print_format'}{'transbody'}->can_focus(1 );
			    $forms->{'print_format'}{'transbody'}->set_mode(1 );
			    $forms->{'print_format'}{'transbody'}->set_state(0 );
			    $forms->{'print_format'}{'hbox73'}->set_child_packing($forms->{'print_format'}{'transbody'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkRadioButton 'transaccount'
			    $widgets->{'transaccount'} = new Gtk::RadioButton(_('交易結算'), $forms->{'print_format'}{'rb-group-1'} );
			    $forms->{'print_format'}{'hbox73'}->add($widgets->{'transaccount'} );
			    $widgets->{'transaccount'}->show;
			    $forms->{'print_format'}{'transaccount'} = $widgets->{'transaccount'};
			    $forms->{'print_format'}{'transaccount'}->can_focus(1 );
			    $forms->{'print_format'}{'transaccount'}->set_mode(1 );
			    $forms->{'print_format'}{'transaccount'}->set_state(0 );
			    $forms->{'print_format'}{'hbox73'}->set_child_packing($forms->{'print_format'}{'transaccount'}, 0, 0, 0, 'start' );
			$forms->{'print_format'}{'vbox14'}->set_child_packing($forms->{'print_format'}{'hbox73'}, 1, 1, 0, 'start' );
		$forms->{'print_format'}{'hbox88'}->set_child_packing($forms->{'print_format'}{'frame7'}, 1, 1, 0, 'start' );
		#
		# Construct a GtkFrame 'frame6'
		$widgets->{'frame6'} = new Gtk::Frame(_('表現形式'));
		$widgets->{'frame6'}->set_label_align(0, 0 );
		$widgets->{'frame6'}->set_shadow_type('etched_in' );
		$forms->{'print_format'}{'hbox88'}->add($widgets->{'frame6'} );
		$widgets->{'frame6'}->show;
		$forms->{'print_format'}{'frame6'} = $widgets->{'frame6'};
		    #
		    # Construct a GtkVBox 'vbox15'
		    $widgets->{'vbox15'} = new Gtk::VBox(0, 0 );
		    $forms->{'print_format'}{'frame6'}->add($widgets->{'vbox15'} );
		    $widgets->{'vbox15'}->show;
		    $forms->{'print_format'}{'vbox15'} = $widgets->{'vbox15'};
			#
			# Construct a GtkHBox 'hbox74'
			$widgets->{'hbox74'} = new Gtk::HBox(0, 36 );
			$forms->{'print_format'}{'vbox15'}->add($widgets->{'hbox74'} );
			$widgets->{'hbox74'}->show;
			$forms->{'print_format'}{'hbox74'} = $widgets->{'hbox74'};
			    #
			    # Construct a GtkRadioButton 'type_figure'
			    $widgets->{'type_figure'} = new Gtk::RadioButton(_('數字') );
			    $forms->{'print_format'}{'rb-group-2'} = $widgets->{'type_figure'};
			    $forms->{'print_format'}{'hbox74'}->add($widgets->{'type_figure'} );
			    $widgets->{'type_figure'}->show;
			    $forms->{'print_format'}{'type_figure'} = $widgets->{'type_figure'};
			    $forms->{'print_format'}{'type_figure'}->can_focus(1 );
			    $forms->{'print_format'}{'type_figure'}->set_mode(1 );
			    $forms->{'print_format'}{'type_figure'}->set_state(0 );
			    $forms->{'print_format'}{'hbox74'}->set_child_packing($forms->{'print_format'}{'type_figure'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkRadioButton 'type_string'
			    $widgets->{'type_string'} = new Gtk::RadioButton(_('字串'), $forms->{'print_format'}{'rb-group-2'} );
			    $forms->{'print_format'}{'hbox74'}->add($widgets->{'type_string'} );
			    $widgets->{'type_string'}->show;
			    $forms->{'print_format'}{'type_string'} = $widgets->{'type_string'};
			    $forms->{'print_format'}{'type_string'}->can_focus(1 );
			    $forms->{'print_format'}{'type_string'}->set_mode(1 );
			    $forms->{'print_format'}{'type_string'}->set_state(0 );
			    $forms->{'print_format'}{'hbox74'}->set_child_packing($forms->{'print_format'}{'type_string'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkRadioButton 'type_bar'
			    $widgets->{'type_bar'} = new Gtk::RadioButton(_(''), $forms->{'print_format'}{'rb-group-2'} );
			    $forms->{'print_format'}{'hbox74'}->add($widgets->{'type_bar'} );
			    $widgets->{'type_bar'}->show;
			    $forms->{'print_format'}{'type_bar'} = $widgets->{'type_bar'};
			    $forms->{'print_format'}{'type_bar'}->can_focus(1 );
			    $forms->{'print_format'}{'type_bar'}->set_mode(1 );
			    $forms->{'print_format'}{'type_bar'}->set_state(0 );
			    $forms->{'print_format'}{'hbox74'}->set_child_packing($forms->{'print_format'}{'type_bar'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkRadioButton 'type_match_string'
			    $widgets->{'type_match_string'} = new Gtk::RadioButton(_('對應字串'), $forms->{'print_format'}{'rb-group-2'} );
			    $forms->{'print_format'}{'hbox74'}->add($widgets->{'type_match_string'} );
			    $widgets->{'type_match_string'}->show;
			    $forms->{'print_format'}{'type_match_string'} = $widgets->{'type_match_string'};
			    $forms->{'print_format'}{'type_match_string'}->can_focus(1 );
			    $forms->{'print_format'}{'type_match_string'}->set_mode(1 );
			    $forms->{'print_format'}{'type_match_string'}->set_state(0 );
			    $forms->{'print_format'}{'hbox74'}->set_child_packing($forms->{'print_format'}{'type_match_string'}, 0, 0, 0, 'start' );
			$forms->{'print_format'}{'vbox15'}->set_child_packing($forms->{'print_format'}{'hbox74'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkHBox 'hbox75'
			$widgets->{'hbox75'} = new Gtk::HBox(0, 0 );
			$forms->{'print_format'}{'vbox15'}->add($widgets->{'hbox75'} );
			$widgets->{'hbox75'}->show;
			$forms->{'print_format'}{'hbox75'} = $widgets->{'hbox75'};
			    #
			    # Construct a GtkLabel 'label40'
			    $widgets->{'label40'} = new Gtk::Label(_('列印內容'));
			    $widgets->{'label40'}->set_justify('center' );
			    $widgets->{'label40'}->set_line_wrap(0 );
			    $forms->{'print_format'}{'hbox75'}->add($widgets->{'label40'} );
			    $widgets->{'label40'}->show;
			    $forms->{'print_format'}{'label40'} = $widgets->{'label40'};
			    $forms->{'print_format'}{'label40'}->set_alignment(0.5, 0.5 );
			    $forms->{'print_format'}{'hbox75'}->set_child_packing($forms->{'print_format'}{'label40'}, 0, 0, 0, 'start' );
			    #
			    # Construct a GtkCombo 'combo3'
			    $widgets->{'combo3'} = new Gtk::Combo;
			    $widgets->{'combo3'}->set_case_sensitive(0 );
			    $widgets->{'combo3'}->set_use_arrows(1 );
			    $widgets->{'combo3'}->set_use_arrows_always(0 );
			    $widgets->{'combo3'}->set_popdown_strings( '1．重量', '2．重量小數點位置', '3．單價', '4．單價小數點位置', '5．未折扣總價', '6．折扣金額', '7．未稅已折扣總價', '8．總價', '9．稅金', '10．總價小數點位置', '11．扣重', '12．重量單位', '13．計價單位', '14．累計金額', '15．品名', '16．商品號碼', '17．製造日期', '18．有效日期', '19．交易日期', '20．頁數', '21．擴充字串' );
			    $forms->{'print_format'}{'hbox75'}->add($widgets->{'combo3'} );
			    $widgets->{'combo3'}->show;
			    $forms->{'print_format'}{'combo3'} = $widgets->{'combo3'};
				#
				# Construct a GtkEntry 'combo-entry3'
				$widgets->{'combo-entry3'} = $forms->{'print_format'}{'combo3'}->entry;
				$widgets->{'combo-entry3'}->show;
				$forms->{'print_format'}{'combo-entry3'} = $widgets->{'combo-entry3'};
				$forms->{'print_format'}{'combo-entry3'}->can_focus(1 );
				$forms->{'print_format'}{'combo-entry3'}->set_text(_('1．重量') );
				$forms->{'print_format'}{'combo-entry3'}->set_max_length(0 );
				$forms->{'print_format'}{'combo-entry3'}->set_visibility(1 );
				$forms->{'print_format'}{'combo-entry3'}->set_editable(0 );
			    $forms->{'print_format'}{'hbox75'}->set_child_packing($forms->{'print_format'}{'combo3'}, 1, 1, 0, 'start' );
			$forms->{'print_format'}{'vbox15'}->set_child_packing($forms->{'print_format'}{'hbox75'}, 1, 1, 0, 'start' );
		$forms->{'print_format'}{'hbox88'}->set_child_packing($forms->{'print_format'}{'frame6'}, 1, 1, 0, 'start' );
	    $forms->{'print_format'}{'vbox7'}->set_child_packing($forms->{'print_format'}{'hbox88'}, 1, 1, 0, 'start' );
	    #
	    # Construct a GtkVBox 'vbox8'
	    $widgets->{'vbox8'} = new Gtk::VBox(0, 0 );
	    $forms->{'print_format'}{'vbox7'}->add($widgets->{'vbox8'} );
	    $widgets->{'vbox8'}->show;
	    $forms->{'print_format'}{'vbox8'} = $widgets->{'vbox8'};
		#
		# Construct a GtkHBox 'hbox91'
		$widgets->{'hbox91'} = new Gtk::HBox(0, 0 );
		$forms->{'print_format'}{'vbox8'}->add($widgets->{'hbox91'} );
		$widgets->{'hbox91'}->show;
		$forms->{'print_format'}{'hbox91'} = $widgets->{'hbox91'};
		    #
		    # Construct a GtkVBox 'vbox17'
		    $widgets->{'vbox17'} = new Gtk::VBox(0, 0 );
		    $forms->{'print_format'}{'hbox91'}->add($widgets->{'vbox17'} );
		    $widgets->{'vbox17'}->show;
		    $forms->{'print_format'}{'vbox17'} = $widgets->{'vbox17'};
			#
			# Construct a GtkFrame 'frame3'
			$widgets->{'frame3'} = new Gtk::Frame(_('列印基本設定'));
			$widgets->{'frame3'}->set_label_align(0, 0 );
			$widgets->{'frame3'}->set_shadow_type('etched_in' );
			$forms->{'print_format'}{'vbox17'}->add($widgets->{'frame3'} );
			$widgets->{'frame3'}->show;
			$forms->{'print_format'}{'frame3'} = $widgets->{'frame3'};
			    #
			    # Construct a GtkVBox 'vbox11'
			    $widgets->{'vbox11'} = new Gtk::VBox(0, 0 );
			    $forms->{'print_format'}{'frame3'}->add($widgets->{'vbox11'} );
			    $widgets->{'vbox11'}->show;
			    $forms->{'print_format'}{'vbox11'} = $widgets->{'vbox11'};
				#
				# Construct a GtkHBox 'hbox60'
				$widgets->{'hbox60'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox11'}->add($widgets->{'hbox60'} );
				$widgets->{'hbox60'}->show;
				$forms->{'print_format'}{'hbox60'} = $widgets->{'hbox60'};
				    #
				    # Construct a GtkLabel 'label41'
				    $widgets->{'label41'} = new Gtk::Label(_('座標'));
				    $widgets->{'label41'}->set_justify('center' );
				    $widgets->{'label41'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox60'}->add($widgets->{'label41'} );
				    $widgets->{'label41'}->show;
				    $forms->{'print_format'}{'label41'} = $widgets->{'label41'};
				    $forms->{'print_format'}{'label41'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox60'}->set_child_packing($forms->{'print_format'}{'label41'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label42'
				    $widgets->{'label42'} = new Gtk::Label(_('X：'));
				    $widgets->{'label42'}->set_justify('center' );
				    $widgets->{'label42'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox60'}->add($widgets->{'label42'} );
				    $widgets->{'label42'}->show;
				    $forms->{'print_format'}{'label42'} = $widgets->{'label42'};
				    $forms->{'print_format'}{'label42'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox60'}->set_child_packing($forms->{'print_format'}{'label42'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton32'
				    $work->{'spinbutton32-adj'} = new Gtk::Adjustment(200, 0, 9999, 1, 10, 10 );
				    $widgets->{'spinbutton32'} = new Gtk::SpinButton($work->{'spinbutton32-adj'}, 1, 0 );
				    $widgets->{'spinbutton32'}->set_update_policy('always' );
				    $widgets->{'spinbutton32'}->set_numeric(1);
				    $widgets->{'spinbutton32'}->set_wrap(0);
				    $widgets->{'spinbutton32'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox60'}->add($widgets->{'spinbutton32'} );
				    $widgets->{'spinbutton32'}->show;
				    $forms->{'print_format'}{'spinbutton32'} = $widgets->{'spinbutton32'};
				    $forms->{'print_format'}{'spinbutton32'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton32'}, _('水平軸' ));
				    $forms->{'print_format'}{'hbox60'}->set_child_packing($forms->{'print_format'}{'spinbutton32'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label43'
				    $widgets->{'label43'} = new Gtk::Label(_('Y：'));
				    $widgets->{'label43'}->set_justify('center' );
				    $widgets->{'label43'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox60'}->add($widgets->{'label43'} );
				    $widgets->{'label43'}->show;
				    $forms->{'print_format'}{'label43'} = $widgets->{'label43'};
				    $forms->{'print_format'}{'label43'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox60'}->set_child_packing($forms->{'print_format'}{'label43'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton33'
				    $work->{'spinbutton33-adj'} = new Gtk::Adjustment(150, 0, 9999, 1, 10, 10 );
				    $widgets->{'spinbutton33'} = new Gtk::SpinButton($work->{'spinbutton33-adj'}, 1, 0 );
				    $widgets->{'spinbutton33'}->set_update_policy('always' );
				    $widgets->{'spinbutton33'}->set_numeric(1);
				    $widgets->{'spinbutton33'}->set_wrap(0);
				    $widgets->{'spinbutton33'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox60'}->add($widgets->{'spinbutton33'} );
				    $widgets->{'spinbutton33'}->show;
				    $forms->{'print_format'}{'spinbutton33'} = $widgets->{'spinbutton33'};
				    $forms->{'print_format'}{'spinbutton33'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton33'}, _('垂直軸' ));
				    $forms->{'print_format'}{'hbox60'}->set_child_packing($forms->{'print_format'}{'spinbutton33'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox11'}->set_child_packing($forms->{'print_format'}{'hbox60'}, 1, 1, 0, 'start' );
				#
				# Construct a GtkHBox 'hbox61'
				$widgets->{'hbox61'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox11'}->add($widgets->{'hbox61'} );
				$widgets->{'hbox61'}->show;
				$forms->{'print_format'}{'hbox61'} = $widgets->{'hbox61'};
				    #
				    # Construct a GtkLabel 'label44'
				    $widgets->{'label44'} = new Gtk::Label(_('放大倍數'));
				    $widgets->{'label44'}->set_justify('center' );
				    $widgets->{'label44'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox61'}->add($widgets->{'label44'} );
				    $widgets->{'label44'}->show;
				    $forms->{'print_format'}{'label44'} = $widgets->{'label44'};
				    $forms->{'print_format'}{'label44'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox61'}->set_child_packing($forms->{'print_format'}{'label44'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label45'
				    $widgets->{'label45'} = new Gtk::Label(_('X：'));
				    $widgets->{'label45'}->set_justify('center' );
				    $widgets->{'label45'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox61'}->add($widgets->{'label45'} );
				    $widgets->{'label45'}->show;
				    $forms->{'print_format'}{'label45'} = $widgets->{'label45'};
				    $forms->{'print_format'}{'label45'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox61'}->set_child_packing($forms->{'print_format'}{'label45'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton34'
				    $work->{'spinbutton34-adj'} = new Gtk::Adjustment(1, 1, 9, 1, 10, 10 );
				    $widgets->{'spinbutton34'} = new Gtk::SpinButton($work->{'spinbutton34-adj'}, 1, 0 );
				    $widgets->{'spinbutton34'}->set_update_policy('always' );
				    $widgets->{'spinbutton34'}->set_numeric(1);
				    $widgets->{'spinbutton34'}->set_wrap(0);
				    $widgets->{'spinbutton34'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox61'}->add($widgets->{'spinbutton34'} );
				    $widgets->{'spinbutton34'}->show;
				    $forms->{'print_format'}{'spinbutton34'} = $widgets->{'spinbutton34'};
				    $forms->{'print_format'}{'spinbutton34'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton34'}, _('水平方向放大倍數' ));
				    $forms->{'print_format'}{'hbox61'}->set_child_packing($forms->{'print_format'}{'spinbutton34'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label46'
				    $widgets->{'label46'} = new Gtk::Label(_('Y：'));
				    $widgets->{'label46'}->set_justify('center' );
				    $widgets->{'label46'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox61'}->add($widgets->{'label46'} );
				    $widgets->{'label46'}->show;
				    $forms->{'print_format'}{'label46'} = $widgets->{'label46'};
				    $forms->{'print_format'}{'label46'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox61'}->set_child_packing($forms->{'print_format'}{'label46'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton35'
				    $work->{'spinbutton35-adj'} = new Gtk::Adjustment(1, 1, 9, 1, 10, 10 );
				    $widgets->{'spinbutton35'} = new Gtk::SpinButton($work->{'spinbutton35-adj'}, 1, 0 );
				    $widgets->{'spinbutton35'}->set_update_policy('always' );
				    $widgets->{'spinbutton35'}->set_numeric(1);
				    $widgets->{'spinbutton35'}->set_wrap(0);
				    $widgets->{'spinbutton35'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox61'}->add($widgets->{'spinbutton35'} );
				    $widgets->{'spinbutton35'}->show;
				    $forms->{'print_format'}{'spinbutton35'} = $widgets->{'spinbutton35'};
				    $forms->{'print_format'}{'spinbutton35'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton35'}, _('垂直方向放大倍數' ));
				    $forms->{'print_format'}{'hbox61'}->set_child_packing($forms->{'print_format'}{'spinbutton35'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox11'}->set_child_packing($forms->{'print_format'}{'hbox61'}, 1, 1, 0, 'start' );
				#
				# Construct a GtkHBox 'hbox62'
				$widgets->{'hbox62'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox11'}->add($widgets->{'hbox62'} );
				$widgets->{'hbox62'}->show;
				$forms->{'print_format'}{'hbox62'} = $widgets->{'hbox62'};
				    #
				    # Construct a GtkLabel 'label47'
				    $widgets->{'label47'} = new Gtk::Label(_('旋轉'));
				    $widgets->{'label47'}->set_justify('center' );
				    $widgets->{'label47'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox62'}->add($widgets->{'label47'} );
				    $widgets->{'label47'}->show;
				    $forms->{'print_format'}{'label47'} = $widgets->{'label47'};
				    $forms->{'print_format'}{'label47'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox62'}->set_child_packing($forms->{'print_format'}{'label47'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkCombo 'combo4'
				    $widgets->{'combo4'} = new Gtk::Combo;
				    $widgets->{'combo4'}->set_case_sensitive(0 );
				    $widgets->{'combo4'}->set_use_arrows(1 );
				    $widgets->{'combo4'}->set_use_arrows_always(0 );
				    $widgets->{'combo4'}->set_popdown_strings( '1．  0  度', '2． 90 度', '3．180度', '4．270度' );
				    $forms->{'print_format'}{'hbox62'}->add($widgets->{'combo4'} );
				    $widgets->{'combo4'}->show;
				    $forms->{'print_format'}{'combo4'} = $widgets->{'combo4'};
					#
					# Construct a GtkEntry 'combo-entry4'
					$widgets->{'combo-entry4'} = $forms->{'print_format'}{'combo4'}->entry;
					$widgets->{'combo-entry4'}->show;
					$forms->{'print_format'}{'combo-entry4'} = $widgets->{'combo-entry4'};
					$forms->{'print_format'}{'combo-entry4'}->can_focus(1 );
					$forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'combo-entry4'}, _('旋轉角度' ));
					$forms->{'print_format'}{'combo-entry4'}->set_text(_('1．  0  度') );
					$forms->{'print_format'}{'combo-entry4'}->set_max_length(0 );
					$forms->{'print_format'}{'combo-entry4'}->set_visibility(1 );
					$forms->{'print_format'}{'combo-entry4'}->set_editable(0 );
				    $forms->{'print_format'}{'hbox62'}->set_child_packing($forms->{'print_format'}{'combo4'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkCheckButton 'checkbutton1'
				    $widgets->{'checkbutton1'} = new Gtk::CheckButton(_('鏡射'));
				    $widgets->{'checkbutton1'}->set_mode(1 );
				    $widgets->{'checkbutton1'}->set_state(0 );
				    $forms->{'print_format'}{'hbox62'}->add($widgets->{'checkbutton1'} );
				    $widgets->{'checkbutton1'}->show;
				    $forms->{'print_format'}{'checkbutton1'} = $widgets->{'checkbutton1'};
				    $forms->{'print_format'}{'checkbutton1'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox62'}->set_child_packing($forms->{'print_format'}{'checkbutton1'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkCheckButton 'checkbutton2'
				    $widgets->{'checkbutton2'} = new Gtk::CheckButton(_('上下顛倒'));
				    $widgets->{'checkbutton2'}->set_mode(1 );
				    $widgets->{'checkbutton2'}->set_state(0 );
				    $forms->{'print_format'}{'hbox62'}->add($widgets->{'checkbutton2'} );
				    $widgets->{'checkbutton2'}->show;
				    $forms->{'print_format'}{'checkbutton2'} = $widgets->{'checkbutton2'};
				    $forms->{'print_format'}{'checkbutton2'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox62'}->set_child_packing($forms->{'print_format'}{'checkbutton2'}, 0, 0, 0, 'start' );
				$forms->{'print_format'}{'vbox11'}->set_child_packing($forms->{'print_format'}{'hbox62'}, 1, 1, 0, 'start' );
				#
				# Construct a GtkHBox 'hbox63'
				$widgets->{'hbox63'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox11'}->add($widgets->{'hbox63'} );
				$widgets->{'hbox63'}->show;
				$forms->{'print_format'}{'hbox63'} = $widgets->{'hbox63'};
				    #
				    # Construct a GtkLabel 'label48'
				    $widgets->{'label48'} = new Gtk::Label(_('填上方式'));
				    $widgets->{'label48'}->set_justify('center' );
				    $widgets->{'label48'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox63'}->add($widgets->{'label48'} );
				    $widgets->{'label48'}->show;
				    $forms->{'print_format'}{'label48'} = $widgets->{'label48'};
				    $forms->{'print_format'}{'label48'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox63'}->set_child_packing($forms->{'print_format'}{'label48'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkCombo 'combo5'
				    $widgets->{'combo5'} = new Gtk::Combo;
				    $widgets->{'combo5'}->set_case_sensitive(0 );
				    $widgets->{'combo5'}->set_use_arrows(1 );
				    $widgets->{'combo5'}->set_use_arrows_always(0 );
				    $widgets->{'combo5'}->set_popdown_strings( '1．AND', '2．OR', '3．XOR' );
				    $forms->{'print_format'}{'hbox63'}->add($widgets->{'combo5'} );
				    $widgets->{'combo5'}->show;
				    $forms->{'print_format'}{'combo5'} = $widgets->{'combo5'};
					#
					# Construct a GtkEntry 'combo-entry5'
					$widgets->{'combo-entry5'} = $forms->{'print_format'}{'combo5'}->entry;
					$widgets->{'combo-entry5'}->show;
					$forms->{'print_format'}{'combo-entry5'} = $widgets->{'combo-entry5'};
					$forms->{'print_format'}{'combo-entry5'}->can_focus(1 );
					$forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'combo-entry5'}, _('列印層目標重疊時處理方式' ));
					$forms->{'print_format'}{'combo-entry5'}->set_text(_('2．OR') );
					$forms->{'print_format'}{'combo-entry5'}->set_max_length(0 );
					$forms->{'print_format'}{'combo-entry5'}->set_visibility(1 );
					$forms->{'print_format'}{'combo-entry5'}->set_editable(0 );
				    $forms->{'print_format'}{'hbox63'}->set_child_packing($forms->{'print_format'}{'combo5'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox11'}->set_child_packing($forms->{'print_format'}{'hbox63'}, 1, 1, 0, 'start' );
				#
				# Construct a GtkHBox 'hbox64'
				$widgets->{'hbox64'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox11'}->add($widgets->{'hbox64'} );
				$widgets->{'hbox64'}->show;
				$forms->{'print_format'}{'hbox64'} = $widgets->{'hbox64'};
				    #
				    # Construct a GtkLabel 'label49'
				    $widgets->{'label49'} = new Gtk::Label(_('列印限制範圍：'));
				    $widgets->{'label49'}->set_justify('center' );
				    $widgets->{'label49'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'label49'} );
				    $widgets->{'label49'}->show;
				    $forms->{'print_format'}{'label49'} = $widgets->{'label49'};
				    $forms->{'print_format'}{'label49'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'label49'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label50'
				    $widgets->{'label50'} = new Gtk::Label(_('左'));
				    $widgets->{'label50'}->set_justify('center' );
				    $widgets->{'label50'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'label50'} );
				    $widgets->{'label50'}->show;
				    $forms->{'print_format'}{'label50'} = $widgets->{'label50'};
				    $forms->{'print_format'}{'label50'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'label50'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton36'
				    $work->{'spinbutton36-adj'} = new Gtk::Adjustment(1, 0, 9999, 1, 10, 10 );
				    $widgets->{'spinbutton36'} = new Gtk::SpinButton($work->{'spinbutton36-adj'}, 1, 0 );
				    $widgets->{'spinbutton36'}->set_update_policy('always' );
				    $widgets->{'spinbutton36'}->set_numeric(1);
				    $widgets->{'spinbutton36'}->set_wrap(0);
				    $widgets->{'spinbutton36'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'spinbutton36'} );
				    $widgets->{'spinbutton36'}->show;
				    $forms->{'print_format'}{'spinbutton36'} = $widgets->{'spinbutton36'};
				    $forms->{'print_format'}{'spinbutton36'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'spinbutton36'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label51'
				    $widgets->{'label51'} = new Gtk::Label(_('右'));
				    $widgets->{'label51'}->set_justify('center' );
				    $widgets->{'label51'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'label51'} );
				    $widgets->{'label51'}->show;
				    $forms->{'print_format'}{'label51'} = $widgets->{'label51'};
				    $forms->{'print_format'}{'label51'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'label51'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton39'
				    $work->{'spinbutton39-adj'} = new Gtk::Adjustment(1, 0, 9999, 1, 10, 10 );
				    $widgets->{'spinbutton39'} = new Gtk::SpinButton($work->{'spinbutton39-adj'}, 1, 0 );
				    $widgets->{'spinbutton39'}->set_update_policy('always' );
				    $widgets->{'spinbutton39'}->set_numeric(1);
				    $widgets->{'spinbutton39'}->set_wrap(0);
				    $widgets->{'spinbutton39'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'spinbutton39'} );
				    $widgets->{'spinbutton39'}->show;
				    $forms->{'print_format'}{'spinbutton39'} = $widgets->{'spinbutton39'};
				    $forms->{'print_format'}{'spinbutton39'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'spinbutton39'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label52'
				    $widgets->{'label52'} = new Gtk::Label(_('上'));
				    $widgets->{'label52'}->set_justify('center' );
				    $widgets->{'label52'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'label52'} );
				    $widgets->{'label52'}->show;
				    $forms->{'print_format'}{'label52'} = $widgets->{'label52'};
				    $forms->{'print_format'}{'label52'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'label52'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton40'
				    $work->{'spinbutton40-adj'} = new Gtk::Adjustment(1, 0, 9999, 1, 10, 10 );
				    $widgets->{'spinbutton40'} = new Gtk::SpinButton($work->{'spinbutton40-adj'}, 1, 0 );
				    $widgets->{'spinbutton40'}->set_update_policy('always' );
				    $widgets->{'spinbutton40'}->set_numeric(1);
				    $widgets->{'spinbutton40'}->set_wrap(0);
				    $widgets->{'spinbutton40'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'spinbutton40'} );
				    $widgets->{'spinbutton40'}->show;
				    $forms->{'print_format'}{'spinbutton40'} = $widgets->{'spinbutton40'};
				    $forms->{'print_format'}{'spinbutton40'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'spinbutton40'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label53'
				    $widgets->{'label53'} = new Gtk::Label(_('下'));
				    $widgets->{'label53'}->set_justify('center' );
				    $widgets->{'label53'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'label53'} );
				    $widgets->{'label53'}->show;
				    $forms->{'print_format'}{'label53'} = $widgets->{'label53'};
				    $forms->{'print_format'}{'label53'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'label53'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton41'
				    $work->{'spinbutton41-adj'} = new Gtk::Adjustment(453, 0, 9999, 1, 10, 10 );
				    $widgets->{'spinbutton41'} = new Gtk::SpinButton($work->{'spinbutton41-adj'}, 1, 0 );
				    $widgets->{'spinbutton41'}->set_update_policy('always' );
				    $widgets->{'spinbutton41'}->set_numeric(1);
				    $widgets->{'spinbutton41'}->set_wrap(0);
				    $widgets->{'spinbutton41'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox64'}->add($widgets->{'spinbutton41'} );
				    $widgets->{'spinbutton41'}->show;
				    $forms->{'print_format'}{'spinbutton41'} = $widgets->{'spinbutton41'};
				    $forms->{'print_format'}{'spinbutton41'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox64'}->set_child_packing($forms->{'print_format'}{'spinbutton41'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox11'}->set_child_packing($forms->{'print_format'}{'hbox64'}, 1, 1, 0, 'start' );
			$forms->{'print_format'}{'vbox17'}->set_child_packing($forms->{'print_format'}{'frame3'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkDrawingArea 'drawingarea2'
			$widgets->{'drawingarea2'} = new Gtk::DrawingArea;
			$forms->{'print_format'}{'vbox17'}->add($widgets->{'drawingarea2'} );
			$widgets->{'drawingarea2'}->show;
			$forms->{'print_format'}{'drawingarea2'} = $widgets->{'drawingarea2'};
			$forms->{'print_format'}{'drawingarea2'}->set_usize(436, 400 );
			$forms->{'print_format'}{'vbox17'}->set_child_packing($forms->{'print_format'}{'drawingarea2'}, 1, 1, 0, 'start' );
		    $forms->{'print_format'}{'hbox91'}->set_child_packing($forms->{'print_format'}{'vbox17'}, 1, 1, 0, 'start' );
		    #
		    # Construct a GtkVBox 'vbox18'
		    $widgets->{'vbox18'} = new Gtk::VBox(0, 0 );
		    $forms->{'print_format'}{'hbox91'}->add($widgets->{'vbox18'} );
		    $widgets->{'vbox18'}->show;
		    $forms->{'print_format'}{'vbox18'} = $widgets->{'vbox18'};
			#
			# Construct a GtkFrame 'frame2'
			$widgets->{'frame2'} = new Gtk::Frame(_('數字格式設定'));
			$widgets->{'frame2'}->set_label_align(0, 0 );
			$widgets->{'frame2'}->set_shadow_type('etched_in' );
			$forms->{'print_format'}{'vbox18'}->add($widgets->{'frame2'} );
			$widgets->{'frame2'}->show;
			$forms->{'print_format'}{'frame2'} = $widgets->{'frame2'};
			    #
			    # Construct a GtkHBox 'hbox57'
			    $widgets->{'hbox57'} = new Gtk::HBox(0, 0 );
			    $forms->{'print_format'}{'frame2'}->add($widgets->{'hbox57'} );
			    $widgets->{'hbox57'}->show;
			    $forms->{'print_format'}{'hbox57'} = $widgets->{'hbox57'};
				#
				# Construct a GtkHBox 'hbox65'
				$widgets->{'hbox65'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'hbox57'}->add($widgets->{'hbox65'} );
				$widgets->{'hbox65'}->show;
				$forms->{'print_format'}{'hbox65'} = $widgets->{'hbox65'};
				    #
				    # Construct a GtkLabel 'label61'
				    $widgets->{'label61'} = new Gtk::Label(_(''));
				    $widgets->{'label61'}->set_justify('center' );
				    $widgets->{'label61'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox65'}->add($widgets->{'label61'} );
				    $widgets->{'label61'}->show;
				    $forms->{'print_format'}{'label61'} = $widgets->{'label61'};
				    $forms->{'print_format'}{'label61'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox65'}->set_child_packing($forms->{'print_format'}{'label61'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton48'
				    $work->{'spinbutton48-adj'} = new Gtk::Adjustment(0, 0, 9, 1, 10, 10 );
				    $widgets->{'spinbutton48'} = new Gtk::SpinButton($work->{'spinbutton48-adj'}, 1, 0 );
				    $widgets->{'spinbutton48'}->set_update_policy('always' );
				    $widgets->{'spinbutton48'}->set_numeric(1);
				    $widgets->{'spinbutton48'}->set_wrap(0);
				    $widgets->{'spinbutton48'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox65'}->add($widgets->{'spinbutton48'} );
				    $widgets->{'spinbutton48'}->show;
				    $forms->{'print_format'}{'spinbutton48'} = $widgets->{'spinbutton48'};
				    $forms->{'print_format'}{'spinbutton48'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton48'}, _('在十位數要填上的數字' ));
				    $forms->{'print_format'}{'hbox65'}->set_child_packing($forms->{'print_format'}{'spinbutton48'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkRadioButton 'radiobutton14'
				    $widgets->{'radiobutton14'} = new Gtk::RadioButton(_('無正號') );
				    $forms->{'print_format'}{'rb-group-3'} = $widgets->{'radiobutton14'};
				    $forms->{'print_format'}{'hbox65'}->add($widgets->{'radiobutton14'} );
				    $widgets->{'radiobutton14'}->show;
				    $forms->{'print_format'}{'radiobutton14'} = $widgets->{'radiobutton14'};
				    $forms->{'print_format'}{'radiobutton14'}->can_focus(1 );
				    $forms->{'print_format'}{'radiobutton14'}->set_mode(1 );
				    $forms->{'print_format'}{'radiobutton14'}->set_state(0 );
				    $forms->{'print_format'}{'hbox65'}->set_child_packing($forms->{'print_format'}{'radiobutton14'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkRadioButton 'radiobutton15'
				    $widgets->{'radiobutton15'} = new Gtk::RadioButton(_('帶符號'), $forms->{'print_format'}{'rb-group-3'} );
				    $forms->{'print_format'}{'hbox65'}->add($widgets->{'radiobutton15'} );
				    $widgets->{'radiobutton15'}->show;
				    $forms->{'print_format'}{'radiobutton15'} = $widgets->{'radiobutton15'};
				    $forms->{'print_format'}{'radiobutton15'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'radiobutton15'}, _('數字前帶正負號' ));
				    $forms->{'print_format'}{'radiobutton15'}->set_mode(1 );
				    $forms->{'print_format'}{'radiobutton15'}->set_state(0 );
				    $forms->{'print_format'}{'hbox65'}->set_child_packing($forms->{'print_format'}{'radiobutton15'}, 0, 0, 0, 'start' );
				$forms->{'print_format'}{'hbox57'}->set_child_packing($forms->{'print_format'}{'hbox65'}, 1, 1, 0, 'start' );
			$forms->{'print_format'}{'vbox18'}->set_child_packing($forms->{'print_format'}{'frame2'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkFrame 'frame1'
			$widgets->{'frame1'} = new Gtk::Frame(_('字串格式設定'));
			$widgets->{'frame1'}->set_label_align(0, 0 );
			$widgets->{'frame1'}->set_shadow_type('etched_in' );
			$forms->{'print_format'}{'vbox18'}->add($widgets->{'frame1'} );
			$widgets->{'frame1'}->show;
			$forms->{'print_format'}{'frame1'} = $widgets->{'frame1'};
			    #
			    # Construct a GtkVBox 'vbox10'
			    $widgets->{'vbox10'} = new Gtk::VBox(0, 0 );
			    $forms->{'print_format'}{'frame1'}->add($widgets->{'vbox10'} );
			    $widgets->{'vbox10'}->show;
			    $forms->{'print_format'}{'vbox10'} = $widgets->{'vbox10'};
				#
				# Construct a GtkHBox 'hbox54'
				$widgets->{'hbox54'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox10'}->add($widgets->{'hbox54'} );
				$widgets->{'hbox54'}->show;
				$forms->{'print_format'}{'hbox54'} = $widgets->{'hbox54'};
				    #
				    # Construct a GtkLabel 'label55'
				    $widgets->{'label55'} = new Gtk::Label(_('前進X'));
				    $widgets->{'label55'}->set_justify('center' );
				    $widgets->{'label55'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox54'}->add($widgets->{'label55'} );
				    $widgets->{'label55'}->show;
				    $forms->{'print_format'}{'label55'} = $widgets->{'label55'};
				    $forms->{'print_format'}{'label55'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox54'}->set_child_packing($forms->{'print_format'}{'label55'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton42'
				    $work->{'spinbutton42-adj'} = new Gtk::Adjustment(0, -99, 99, 1, 10, 10 );
				    $widgets->{'spinbutton42'} = new Gtk::SpinButton($work->{'spinbutton42-adj'}, 1, 0 );
				    $widgets->{'spinbutton42'}->set_update_policy('always' );
				    $widgets->{'spinbutton42'}->set_numeric(1);
				    $widgets->{'spinbutton42'}->set_wrap(0);
				    $widgets->{'spinbutton42'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox54'}->add($widgets->{'spinbutton42'} );
				    $widgets->{'spinbutton42'}->show;
				    $forms->{'print_format'}{'spinbutton42'} = $widgets->{'spinbutton42'};
				    $forms->{'print_format'}{'spinbutton42'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton42'}, _('字與字間的水平間隔' ));
				    $forms->{'print_format'}{'hbox54'}->set_child_packing($forms->{'print_format'}{'spinbutton42'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label56'
				    $widgets->{'label56'} = new Gtk::Label(_('前進Y'));
				    $widgets->{'label56'}->set_justify('center' );
				    $widgets->{'label56'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox54'}->add($widgets->{'label56'} );
				    $widgets->{'label56'}->show;
				    $forms->{'print_format'}{'label56'} = $widgets->{'label56'};
				    $forms->{'print_format'}{'label56'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox54'}->set_child_packing($forms->{'print_format'}{'label56'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton43'
				    $work->{'spinbutton43-adj'} = new Gtk::Adjustment(0, -99, 99, 1, 10, 10 );
				    $widgets->{'spinbutton43'} = new Gtk::SpinButton($work->{'spinbutton43-adj'}, 1, 0 );
				    $widgets->{'spinbutton43'}->set_update_policy('always' );
				    $widgets->{'spinbutton43'}->set_numeric(1);
				    $widgets->{'spinbutton43'}->set_wrap(0);
				    $widgets->{'spinbutton43'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox54'}->add($widgets->{'spinbutton43'} );
				    $widgets->{'spinbutton43'}->show;
				    $forms->{'print_format'}{'spinbutton43'} = $widgets->{'spinbutton43'};
				    $forms->{'print_format'}{'spinbutton43'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton43'}, _('字與字間的垂直間隔' ));
				    $forms->{'print_format'}{'hbox54'}->set_child_packing($forms->{'print_format'}{'spinbutton43'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkHBox 'hbox55'
				    $widgets->{'hbox55'} = new Gtk::HBox(0, 0 );
				    $forms->{'print_format'}{'hbox54'}->add($widgets->{'hbox55'} );
				    $widgets->{'hbox55'}->show;
				    $forms->{'print_format'}{'hbox55'} = $widgets->{'hbox55'};
					#
					# Construct a GtkLabel 'label57'
					$widgets->{'label57'} = new Gtk::Label(_('換行X'));
					$widgets->{'label57'}->set_justify('center' );
					$widgets->{'label57'}->set_line_wrap(0 );
					$forms->{'print_format'}{'hbox55'}->add($widgets->{'label57'} );
					$widgets->{'label57'}->show;
					$forms->{'print_format'}{'label57'} = $widgets->{'label57'};
					$forms->{'print_format'}{'label57'}->set_alignment(0.5, 0.5 );
					$forms->{'print_format'}{'hbox55'}->set_child_packing($forms->{'print_format'}{'label57'}, 0, 0, 0, 'start' );
					#
					# Construct a GtkSpinButton 'spinbutton44'
					$work->{'spinbutton44-adj'} = new Gtk::Adjustment(0, -99, 99, 1, 10, 10 );
					$widgets->{'spinbutton44'} = new Gtk::SpinButton($work->{'spinbutton44-adj'}, 1, 0 );
					$widgets->{'spinbutton44'}->set_update_policy('always' );
					$widgets->{'spinbutton44'}->set_numeric(1);
					$widgets->{'spinbutton44'}->set_wrap(0);
					$widgets->{'spinbutton44'}->set_snap_to_ticks(0 );
					$forms->{'print_format'}{'hbox55'}->add($widgets->{'spinbutton44'} );
					$widgets->{'spinbutton44'}->show;
					$forms->{'print_format'}{'spinbutton44'} = $widgets->{'spinbutton44'};
					$forms->{'print_format'}{'spinbutton44'}->can_focus(1 );
					$forms->{'print_format'}{'hbox55'}->set_child_packing($forms->{'print_format'}{'spinbutton44'}, 1, 1, 0, 'start' );
					#
					# Construct a GtkLabel 'label58'
					$widgets->{'label58'} = new Gtk::Label(_('換行Y'));
					$widgets->{'label58'}->set_justify('center' );
					$widgets->{'label58'}->set_line_wrap(0 );
					$forms->{'print_format'}{'hbox55'}->add($widgets->{'label58'} );
					$widgets->{'label58'}->show;
					$forms->{'print_format'}{'label58'} = $widgets->{'label58'};
					$forms->{'print_format'}{'label58'}->set_alignment(0.5, 0.5 );
					$forms->{'print_format'}{'hbox55'}->set_child_packing($forms->{'print_format'}{'label58'}, 0, 0, 0, 'start' );
					#
					# Construct a GtkSpinButton 'spinbutton45'
					$work->{'spinbutton45-adj'} = new Gtk::Adjustment(0, -99, 99, 1, 10, 10 );
					$widgets->{'spinbutton45'} = new Gtk::SpinButton($work->{'spinbutton45-adj'}, 1, 0 );
					$widgets->{'spinbutton45'}->set_update_policy('always' );
					$widgets->{'spinbutton45'}->set_numeric(1);
					$widgets->{'spinbutton45'}->set_wrap(0);
					$widgets->{'spinbutton45'}->set_snap_to_ticks(0 );
					$forms->{'print_format'}{'hbox55'}->add($widgets->{'spinbutton45'} );
					$widgets->{'spinbutton45'}->show;
					$forms->{'print_format'}{'spinbutton45'} = $widgets->{'spinbutton45'};
					$forms->{'print_format'}{'spinbutton45'}->can_focus(1 );
					$forms->{'print_format'}{'hbox55'}->set_child_packing($forms->{'print_format'}{'spinbutton45'}, 1, 1, 0, 'start' );
				    $forms->{'print_format'}{'hbox54'}->set_child_packing($forms->{'print_format'}{'hbox55'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox10'}->set_child_packing($forms->{'print_format'}{'hbox54'}, 1, 1, 0, 'start' );
				#
				# Construct a GtkHBox 'hbox56'
				$widgets->{'hbox56'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox10'}->add($widgets->{'hbox56'} );
				$widgets->{'hbox56'}->show;
				$forms->{'print_format'}{'hbox56'} = $widgets->{'hbox56'};
				    #
				    # Construct a GtkLabel 'label59'
				    $widgets->{'label59'} = new Gtk::Label(_('回頭X'));
				    $widgets->{'label59'}->set_justify('center' );
				    $widgets->{'label59'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox56'}->add($widgets->{'label59'} );
				    $widgets->{'label59'}->show;
				    $forms->{'print_format'}{'label59'} = $widgets->{'label59'};
				    $forms->{'print_format'}{'label59'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox56'}->set_child_packing($forms->{'print_format'}{'label59'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton46'
				    $work->{'spinbutton46-adj'} = new Gtk::Adjustment(1, 0, 9999, 1, 10, 10 );
				    $widgets->{'spinbutton46'} = new Gtk::SpinButton($work->{'spinbutton46-adj'}, 1, 0 );
				    $widgets->{'spinbutton46'}->set_update_policy('always' );
				    $widgets->{'spinbutton46'}->set_numeric(1);
				    $widgets->{'spinbutton46'}->set_wrap(0);
				    $widgets->{'spinbutton46'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox56'}->add($widgets->{'spinbutton46'} );
				    $widgets->{'spinbutton46'}->show;
				    $forms->{'print_format'}{'spinbutton46'} = $widgets->{'spinbutton46'};
				    $forms->{'print_format'}{'spinbutton46'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox56'}->set_child_packing($forms->{'print_format'}{'spinbutton46'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label60'
				    $widgets->{'label60'} = new Gtk::Label(_('回頭Y'));
				    $widgets->{'label60'}->set_justify('center' );
				    $widgets->{'label60'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox56'}->add($widgets->{'label60'} );
				    $widgets->{'label60'}->show;
				    $forms->{'print_format'}{'label60'} = $widgets->{'label60'};
				    $forms->{'print_format'}{'label60'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox56'}->set_child_packing($forms->{'print_format'}{'label60'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton47'
				    $work->{'spinbutton47-adj'} = new Gtk::Adjustment(3, 0, 9999, 1, 10, 10 );
				    $widgets->{'spinbutton47'} = new Gtk::SpinButton($work->{'spinbutton47-adj'}, 1, 0 );
				    $widgets->{'spinbutton47'}->set_update_policy('always' );
				    $widgets->{'spinbutton47'}->set_numeric(1);
				    $widgets->{'spinbutton47'}->set_wrap(0);
				    $widgets->{'spinbutton47'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox56'}->add($widgets->{'spinbutton47'} );
				    $widgets->{'spinbutton47'}->show;
				    $forms->{'print_format'}{'spinbutton47'} = $widgets->{'spinbutton47'};
				    $forms->{'print_format'}{'spinbutton47'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox56'}->set_child_packing($forms->{'print_format'}{'spinbutton47'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox10'}->set_child_packing($forms->{'print_format'}{'hbox56'}, 1, 1, 0, 'start' );
			$forms->{'print_format'}{'vbox18'}->set_child_packing($forms->{'print_format'}{'frame1'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkFrame 'frame4'
			$widgets->{'frame4'} = new Gtk::Frame(_('條碼格式設定'));
			$widgets->{'frame4'}->set_label_align(0, 0 );
			$widgets->{'frame4'}->set_shadow_type('etched_in' );
			$forms->{'print_format'}{'vbox18'}->add($widgets->{'frame4'} );
			$widgets->{'frame4'}->show;
			$forms->{'print_format'}{'frame4'} = $widgets->{'frame4'};
			    #
			    # Construct a GtkVBox 'vbox12'
			    $widgets->{'vbox12'} = new Gtk::VBox(0, 0 );
			    $forms->{'print_format'}{'frame4'}->add($widgets->{'vbox12'} );
			    $widgets->{'vbox12'}->show;
			    $forms->{'print_format'}{'vbox12'} = $widgets->{'vbox12'};
				#
				# Construct a GtkHBox 'hbox66'
				$widgets->{'hbox66'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox12'}->add($widgets->{'hbox66'} );
				$widgets->{'hbox66'}->show;
				$forms->{'print_format'}{'hbox66'} = $widgets->{'hbox66'};
				    #
				    # Construct a GtkLabel 'label62'
				    $widgets->{'label62'} = new Gtk::Label(_('條碼型態：'));
				    $widgets->{'label62'}->set_justify('center' );
				    $widgets->{'label62'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox66'}->add($widgets->{'label62'} );
				    $widgets->{'label62'}->show;
				    $forms->{'print_format'}{'label62'} = $widgets->{'label62'};
				    $forms->{'print_format'}{'label62'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox66'}->set_child_packing($forms->{'print_format'}{'label62'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkCombo 'combo6'
				    $widgets->{'combo6'} = new Gtk::Combo;
				    $widgets->{'combo6'}->set_case_sensitive(0 );
				    $widgets->{'combo6'}->set_use_arrows(1 );
				    $widgets->{'combo6'}->set_use_arrows_always(0 );
				    $widgets->{'combo6'}->set_popdown_strings( '1．Code 128', '2．CodeBar', '3．Code 25', '4．Upc E', '5．Upc A', '6．EAN 8', '7．EAN 13', '8．Code 39' );
				    $forms->{'print_format'}{'hbox66'}->add($widgets->{'combo6'} );
				    $widgets->{'combo6'}->show;
				    $forms->{'print_format'}{'combo6'} = $widgets->{'combo6'};
					#
					# Construct a GtkEntry 'combo-entry6'
					$widgets->{'combo-entry6'} = $forms->{'print_format'}{'combo6'}->entry;
					$widgets->{'combo-entry6'}->show;
					$forms->{'print_format'}{'combo-entry6'} = $widgets->{'combo-entry6'};
					$forms->{'print_format'}{'combo-entry6'}->can_focus(1 );
					$forms->{'print_format'}{'combo-entry6'}->set_text(_('1．Code 128') );
					$forms->{'print_format'}{'combo-entry6'}->set_max_length(0 );
					$forms->{'print_format'}{'combo-entry6'}->set_visibility(1 );
					$forms->{'print_format'}{'combo-entry6'}->set_editable(0 );
				    $forms->{'print_format'}{'hbox66'}->set_child_packing($forms->{'print_format'}{'combo6'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox12'}->set_child_packing($forms->{'print_format'}{'hbox66'}, 1, 1, 0, 'start' );
				#
				# Construct a GtkHBox 'hbox67'
				$widgets->{'hbox67'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox12'}->add($widgets->{'hbox67'} );
				$widgets->{'hbox67'}->show;
				$forms->{'print_format'}{'hbox67'} = $widgets->{'hbox67'};
				    #
				    # Construct a GtkLabel 'label63'
				    $widgets->{'label63'} = new Gtk::Label(_('主體高：'));
				    $widgets->{'label63'}->set_justify('center' );
				    $widgets->{'label63'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox67'}->add($widgets->{'label63'} );
				    $widgets->{'label63'}->show;
				    $forms->{'print_format'}{'label63'} = $widgets->{'label63'};
				    $forms->{'print_format'}{'label63'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox67'}->set_child_packing($forms->{'print_format'}{'label63'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton49'
				    $work->{'spinbutton49-adj'} = new Gtk::Adjustment(0, 0, 999, 1, 10, 10 );
				    $widgets->{'spinbutton49'} = new Gtk::SpinButton($work->{'spinbutton49-adj'}, 1, 0 );
				    $widgets->{'spinbutton49'}->set_update_policy('always' );
				    $widgets->{'spinbutton49'}->set_numeric(1);
				    $widgets->{'spinbutton49'}->set_wrap(0);
				    $widgets->{'spinbutton49'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox67'}->add($widgets->{'spinbutton49'} );
				    $widgets->{'spinbutton49'}->show;
				    $forms->{'print_format'}{'spinbutton49'} = $widgets->{'spinbutton49'};
				    $forms->{'print_format'}{'spinbutton49'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton49'}, _('主要資料條碼的高度' ));
				    $forms->{'print_format'}{'hbox67'}->set_child_packing($forms->{'print_format'}{'spinbutton49'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label64'
				    $widgets->{'label64'} = new Gtk::Label(_('護線高：'));
				    $widgets->{'label64'}->set_justify('center' );
				    $widgets->{'label64'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox67'}->add($widgets->{'label64'} );
				    $widgets->{'label64'}->show;
				    $forms->{'print_format'}{'label64'} = $widgets->{'label64'};
				    $forms->{'print_format'}{'label64'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox67'}->set_child_packing($forms->{'print_format'}{'label64'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton50'
				    $work->{'spinbutton50-adj'} = new Gtk::Adjustment(0, 0, 999, 1, 10, 10 );
				    $widgets->{'spinbutton50'} = new Gtk::SpinButton($work->{'spinbutton50-adj'}, 1, 0 );
				    $widgets->{'spinbutton50'}->set_update_policy('always' );
				    $widgets->{'spinbutton50'}->set_numeric(1);
				    $widgets->{'spinbutton50'}->set_wrap(0);
				    $widgets->{'spinbutton50'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox67'}->add($widgets->{'spinbutton50'} );
				    $widgets->{'spinbutton50'}->show;
				    $forms->{'print_format'}{'spinbutton50'} = $widgets->{'spinbutton50'};
				    $forms->{'print_format'}{'spinbutton50'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton50'}, _('條碼中間及兩旁的保護線，用預設值效果就不錯了' ));
				    $forms->{'print_format'}{'hbox67'}->set_child_packing($forms->{'print_format'}{'spinbutton50'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox12'}->set_child_packing($forms->{'print_format'}{'hbox67'}, 1, 1, 0, 'start' );
				#
				# Construct a GtkHBox 'hbox68'
				$widgets->{'hbox68'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox12'}->add($widgets->{'hbox68'} );
				$widgets->{'hbox68'}->show;
				$forms->{'print_format'}{'hbox68'} = $widgets->{'hbox68'};
				    #
				    # Construct a GtkLabel 'label65'
				    $widgets->{'label65'} = new Gtk::Label(_('線寬：'));
				    $widgets->{'label65'}->set_justify('center' );
				    $widgets->{'label65'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox68'}->add($widgets->{'label65'} );
				    $widgets->{'label65'}->show;
				    $forms->{'print_format'}{'label65'} = $widgets->{'label65'};
				    $forms->{'print_format'}{'label65'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox68'}->set_child_packing($forms->{'print_format'}{'label65'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton51'
				    $work->{'spinbutton51-adj'} = new Gtk::Adjustment(1, 1, 9, 1, 10, 10 );
				    $widgets->{'spinbutton51'} = new Gtk::SpinButton($work->{'spinbutton51-adj'}, 1, 0 );
				    $widgets->{'spinbutton51'}->set_update_policy('always' );
				    $widgets->{'spinbutton51'}->set_numeric(1);
				    $widgets->{'spinbutton51'}->set_wrap(0);
				    $widgets->{'spinbutton51'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox68'}->add($widgets->{'spinbutton51'} );
				    $widgets->{'spinbutton51'}->show;
				    $forms->{'print_format'}{'spinbutton51'} = $widgets->{'spinbutton51'};
				    $forms->{'print_format'}{'spinbutton51'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton51'}, _('黑白粗線的線寬' ));
				    $forms->{'print_format'}{'hbox68'}->set_child_packing($forms->{'print_format'}{'spinbutton51'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label66'
				    $widgets->{'label66'} = new Gtk::Label(_('薄線寬：'));
				    $widgets->{'label66'}->set_justify('center' );
				    $widgets->{'label66'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox68'}->add($widgets->{'label66'} );
				    $widgets->{'label66'}->show;
				    $forms->{'print_format'}{'label66'} = $widgets->{'label66'};
				    $forms->{'print_format'}{'label66'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox68'}->set_child_packing($forms->{'print_format'}{'label66'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton52'
				    $work->{'spinbutton52-adj'} = new Gtk::Adjustment(1, 1, 9, 1, 10, 10 );
				    $widgets->{'spinbutton52'} = new Gtk::SpinButton($work->{'spinbutton52-adj'}, 1, 0 );
				    $widgets->{'spinbutton52'}->set_update_policy('always' );
				    $widgets->{'spinbutton52'}->set_numeric(1);
				    $widgets->{'spinbutton52'}->set_wrap(0);
				    $widgets->{'spinbutton52'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox68'}->add($widgets->{'spinbutton52'} );
				    $widgets->{'spinbutton52'}->show;
				    $forms->{'print_format'}{'spinbutton52'} = $widgets->{'spinbutton52'};
				    $forms->{'print_format'}{'spinbutton52'}->can_focus(1 );
				    $forms->{'print_format'}{'tooltips'}->set_tip($forms->{'print_format'}{'spinbutton52'}, _('黑白細線的線寬' ));
				    $forms->{'print_format'}{'hbox68'}->set_child_packing($forms->{'print_format'}{'spinbutton52'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox12'}->set_child_packing($forms->{'print_format'}{'hbox68'}, 1, 1, 0, 'start' );
			$forms->{'print_format'}{'vbox18'}->set_child_packing($forms->{'print_format'}{'frame4'}, 1, 1, 0, 'start' );
			#
			# Construct a GtkFrame 'frame5'
			$widgets->{'frame5'} = new Gtk::Frame(_('對應字串格式設定'));
			$widgets->{'frame5'}->set_label_align(0, 0 );
			$widgets->{'frame5'}->set_shadow_type('etched_in' );
			$forms->{'print_format'}{'vbox18'}->add($widgets->{'frame5'} );
			$widgets->{'frame5'}->show;
			$forms->{'print_format'}{'frame5'} = $widgets->{'frame5'};
			    #
			    # Construct a GtkVBox 'vbox13'
			    $widgets->{'vbox13'} = new Gtk::VBox(0, 0 );
			    $forms->{'print_format'}{'frame5'}->add($widgets->{'vbox13'} );
			    $widgets->{'vbox13'}->show;
			    $forms->{'print_format'}{'vbox13'} = $widgets->{'vbox13'};
				#
				# Construct a GtkHBox 'hbox69'
				$widgets->{'hbox69'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox13'}->add($widgets->{'hbox69'} );
				$widgets->{'hbox69'}->show;
				$forms->{'print_format'}{'hbox69'} = $widgets->{'hbox69'};
				    #
				    # Construct a GtkLabel 'label67'
				    $widgets->{'label67'} = new Gtk::Label(_('對應字串'));
				    $widgets->{'label67'}->set_justify('center' );
				    $widgets->{'label67'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox69'}->add($widgets->{'label67'} );
				    $widgets->{'label67'}->show;
				    $forms->{'print_format'}{'label67'} = $widgets->{'label67'};
				    $forms->{'print_format'}{'label67'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox69'}->set_child_packing($forms->{'print_format'}{'label67'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton53'
				    $work->{'spinbutton53-adj'} = new Gtk::Adjustment(0, 0, 99, 1, 10, 10 );
				    $widgets->{'spinbutton53'} = new Gtk::SpinButton($work->{'spinbutton53-adj'}, 1, 0 );
				    $widgets->{'spinbutton53'}->set_update_policy('always' );
				    $widgets->{'spinbutton53'}->set_numeric(1);
				    $widgets->{'spinbutton53'}->set_wrap(0);
				    $widgets->{'spinbutton53'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox69'}->add($widgets->{'spinbutton53'} );
				    $widgets->{'spinbutton53'}->show;
				    $forms->{'print_format'}{'spinbutton53'} = $widgets->{'spinbutton53'};
				    $forms->{'print_format'}{'spinbutton53'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox69'}->set_child_packing($forms->{'print_format'}{'spinbutton53'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox13'}->set_child_packing($forms->{'print_format'}{'hbox69'}, 1, 1, 0, 'start' );
				#
				# Construct a GtkHBox 'hbox70'
				$widgets->{'hbox70'} = new Gtk::HBox(0, 0 );
				$forms->{'print_format'}{'vbox13'}->add($widgets->{'hbox70'} );
				$widgets->{'hbox70'}->show;
				$forms->{'print_format'}{'hbox70'} = $widgets->{'hbox70'};
				    #
				    # Construct a GtkLabel 'label68'
				    $widgets->{'label68'} = new Gtk::Label('');
				    $widgets->{'label68'}->parse_uline(_('起始') );
				    $widgets->{'label68'}->set_justify('center' );
				    $widgets->{'label68'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox70'}->add($widgets->{'label68'} );
				    $widgets->{'label68'}->show;
				    $forms->{'print_format'}{'label68'} = $widgets->{'label68'};
				    $forms->{'print_format'}{'label68'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox70'}->set_child_packing($forms->{'print_format'}{'label68'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton54'
				    $work->{'spinbutton54-adj'} = new Gtk::Adjustment(99, 0, 99, 1, 10, 10 );
				    $widgets->{'spinbutton54'} = new Gtk::SpinButton($work->{'spinbutton54-adj'}, 1, 0 );
				    $widgets->{'spinbutton54'}->set_update_policy('always' );
				    $widgets->{'spinbutton54'}->set_numeric(1);
				    $widgets->{'spinbutton54'}->set_wrap(0);
				    $widgets->{'spinbutton54'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox70'}->add($widgets->{'spinbutton54'} );
				    $widgets->{'spinbutton54'}->show;
				    $forms->{'print_format'}{'spinbutton54'} = $widgets->{'spinbutton54'};
				    $forms->{'print_format'}{'spinbutton54'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox70'}->set_child_packing($forms->{'print_format'}{'spinbutton54'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label69'
				    $widgets->{'label69'} = new Gtk::Label(_('結束'));
				    $widgets->{'label69'}->set_justify('center' );
				    $widgets->{'label69'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox70'}->add($widgets->{'label69'} );
				    $widgets->{'label69'}->show;
				    $forms->{'print_format'}{'label69'} = $widgets->{'label69'};
				    $forms->{'print_format'}{'label69'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox70'}->set_child_packing($forms->{'print_format'}{'label69'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton55'
				    $work->{'spinbutton55-adj'} = new Gtk::Adjustment(0, 0, 99, 1, 10, 10 );
				    $widgets->{'spinbutton55'} = new Gtk::SpinButton($work->{'spinbutton55-adj'}, 1, 0 );
				    $widgets->{'spinbutton55'}->set_update_policy('always' );
				    $widgets->{'spinbutton55'}->set_numeric(1);
				    $widgets->{'spinbutton55'}->set_wrap(0);
				    $widgets->{'spinbutton55'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox70'}->add($widgets->{'spinbutton55'} );
				    $widgets->{'spinbutton55'}->show;
				    $forms->{'print_format'}{'spinbutton55'} = $widgets->{'spinbutton55'};
				    $forms->{'print_format'}{'spinbutton55'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox70'}->set_child_packing($forms->{'print_format'}{'spinbutton55'}, 1, 1, 0, 'start' );
				    #
				    # Construct a GtkLabel 'label70'
				    $widgets->{'label70'} = new Gtk::Label(_('位置'));
				    $widgets->{'label70'}->set_justify('center' );
				    $widgets->{'label70'}->set_line_wrap(0 );
				    $forms->{'print_format'}{'hbox70'}->add($widgets->{'label70'} );
				    $widgets->{'label70'}->show;
				    $forms->{'print_format'}{'label70'} = $widgets->{'label70'};
				    $forms->{'print_format'}{'label70'}->set_alignment(0.5, 0.5 );
				    $forms->{'print_format'}{'hbox70'}->set_child_packing($forms->{'print_format'}{'label70'}, 0, 0, 0, 'start' );
				    #
				    # Construct a GtkSpinButton 'spinbutton56'
				    $work->{'spinbutton56-adj'} = new Gtk::Adjustment(0, 0, 99, 1, 10, 10 );
				    $widgets->{'spinbutton56'} = new Gtk::SpinButton($work->{'spinbutton56-adj'}, 1, 0 );
				    $widgets->{'spinbutton56'}->set_update_policy('always' );
				    $widgets->{'spinbutton56'}->set_numeric(1);
				    $widgets->{'spinbutton56'}->set_wrap(0);
				    $widgets->{'spinbutton56'}->set_snap_to_ticks(0 );
				    $forms->{'print_format'}{'hbox70'}->add($widgets->{'spinbutton56'} );
				    $widgets->{'spinbutton56'}->show;
				    $forms->{'print_format'}{'spinbutton56'} = $widgets->{'spinbutton56'};
				    $forms->{'print_format'}{'spinbutton56'}->can_focus(1 );
				    $forms->{'print_format'}{'hbox70'}->set_child_packing($forms->{'print_format'}{'spinbutton56'}, 1, 1, 0, 'start' );
				$forms->{'print_format'}{'vbox13'}->set_child_packing($forms->{'print_format'}{'hbox70'}, 1, 1, 0, 'start' );
			$forms->{'print_format'}{'vbox18'}->set_child_packing($forms->{'print_format'}{'frame5'}, 1, 1, 0, 'start' );
		    $forms->{'print_format'}{'hbox91'}->set_child_packing($forms->{'print_format'}{'vbox18'}, 1, 1, 0, 'start' );
		$forms->{'print_format'}{'vbox8'}->set_child_packing($forms->{'print_format'}{'hbox91'}, 1, 1, 0, 'start' );
	    $forms->{'print_format'}{'vbox7'}->set_child_packing($forms->{'print_format'}{'vbox8'}, 1, 1, 0, 'start' );
    #
    # Connect all signals now that widgets are constructed
    $forms->{'print_format'}{'print_format'}->signal_connect('delete_event', "$class\::on_print_format_delete_event", '', 'print_format', "print_format-$instance" );
    $forms->{'print_format'}{'print_format_read'}->signal_connect('clicked', "$class\::on_print_format_read_clicked", '', 'print_format_read', "print_format-$instance" );
    $forms->{'print_format'}{'print_format_write'}->signal_connect('clicked', "$class\::on_print_format_write_clicked", '', 'print_format_write', "print_format-$instance" );
    $forms->{'print_format'}{'default'}->signal_connect('clicked', "$class\::on_default_clicked", '', 'default', "print_format-$instance" );
    $forms->{'print_format'}{'formatwritetofile'}->signal_connect('clicked', "$class\::on_formatwritetofile_clicked", '', 'formatwritetofile', "print_format-$instance" );
    $forms->{'print_format'}{'formatwritetoscale'}->signal_connect('clicked', "$class\::on_formatwritetoscale_clicked", '', 'formatwritetoscale', "print_format-$instance" );
    $forms->{'print_format'}{'browse'}->signal_connect('clicked', "$class\::on_browse_clicked", '', 'browse', "print_format-$instance" );
    $forms->{'print_format'}{'item_label'}->signal_connect('toggled', "$class\::on_item_label_toggled", '', 'item_label', "print_format-$instance" );
    $forms->{'print_format'}{'label_suite'}->signal_connect('changed', "$class\::on_label_suite_changed", '', 'label_suite', "print_format-$instance" );
    $forms->{'print_format'}{'reporthead'}->signal_connect('toggled', "$class\::on_reporthead_toggled", '', 'reporthead', "print_format-$instance" );
    $forms->{'print_format'}{'reportbody'}->signal_connect('toggled', "$class\::on_reportbody_toggled", '', 'reportbody', "print_format-$instance" );
    $forms->{'print_format'}{'reportaccount'}->signal_connect('toggled', "$class\::on_reportaccount_toggled", '', 'reportaccount', "print_format-$instance" );
    $forms->{'print_format'}{'transhead'}->signal_connect('toggled', "$class\::on_transhead_toggled", '', 'transhead', "print_format-$instance" );
    $forms->{'print_format'}{'transbody'}->signal_connect('toggled', "$class\::on_transbody_toggled", '', 'transbody', "print_format-$instance" );
    $forms->{'print_format'}{'transaccount'}->signal_connect('toggled', "$class\::on_transaccount_toggled", '', 'transaccount', "print_format-$instance" );
    $forms->{'print_format'}{'type_figure'}->signal_connect('toggled', "$class\::on_type_figure_toggled", '', 'type_figure', "print_format-$instance" );
    $forms->{'print_format'}{'type_string'}->signal_connect('toggled', "$class\::on_type_string_toggled", '', 'type_string', "print_format-$instance" );
    $forms->{'print_format'}{'type_bar'}->signal_connect('toggled', "$class\::on_type_bar_toggled", '', 'type_bar', "print_format-$instance" );
    $forms->{'print_format'}{'type_match_string'}->signal_connect('toggled', "$class\::on_type_match_string_toggled", '', 'type_match_string', "print_format-$instance" );
    $forms->{'print_format'}{'drawingarea2'}->signal_connect('expose_event', "$class\::on_drawingarea2_expose_event", '', 'drawingarea2', "print_format-$instance" );


    #
    # Return the constructed UI
    bless $self, $class;
    $self->FORM($forms->{'print_format'});
    $self->TOPLEVEL($self->FORM->{'print_format'});
    $self->FORM->{'TOPLEVEL'} = ($self->TOPLEVEL);
    $self->FORM->{'OBJECT'} = ($self);
    $self->INSTANCE("print_format-$instance");
    $self->CLASS_HIERARCHY($self->FORM->{'__CH'});
    $self->WIDGET_HIERARCHY($self->FORM->{'__WH'});
    $__PACKAGE__::all_forms->{$self->INSTANCE} = $self->FORM;
    
    return $self;
} # End of sub new










1;

__END__

#===============================================================================
#==== Documentation
#===============================================================================
=pod

=head1 NAME

print_scale - version 0.01 週五 11月  1 15:18:17 CST 2002

No description

=head1 SYNOPSIS

 use print_scale;

 To construct the window object and show it call
 
 Gtk->init;
 my $window = main->new;
 $window->TOPLEVEL->show;
 Gtk->main;
 
 OR use the shorthand for the above calls
 
 main->app_run;

=head1 DESCRIPTION

Unfortunately, the author has not yet written any documentation :-(

=head1 AUTHOR

 <allways@allways.taipei.excell.com.tw>

=cut
